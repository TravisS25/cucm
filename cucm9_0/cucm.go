// Code generated by xsdgen. DO NOT EDIT.

package cucm9_0

import "encoding/xml"

// All requests must extend abstractRequest.
type APIRequest struct {
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// All responses must extend abstractResponse.
type APIResponse struct {
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddAarGroupMatrixReq struct {
	AarGroupMatrix XAarGroupMatrix `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupMatrix"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddAarGroupReq struct {
	AarGroup XAarGroup `xml:"http://www.cisco.com/AXL/API/9.0 aarGroup"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddAnnouncementReq struct {
	Announcement XAnnouncement `xml:"http://www.cisco.com/AXL/API/9.0 announcement"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddAnnunciatorReq struct {
	Annunciator XAnnunciator `xml:"http://www.cisco.com/AXL/API/9.0 annunciator"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddAppServerInfoReq struct {
	AppServerInfo XAppServerInfo `xml:"http://www.cisco.com/AXL/API/9.0 appServerInfo"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddAppUserReq struct {
	AppUser  XAppUser `xml:"http://www.cisco.com/AXL/API/9.0 appUser"`
	Sequence uint64   `xml:"sequence,attr,omitempty"`
}

type AddAppUsers struct {
	SelectedAppUser []Anon1140 `xml:"http://www.cisco.com/AXL/API/9.0 selectedAppUser"`
}

type AddApplicationDialRulesReq struct {
	ApplicationDialRules XApplicationDialRules `xml:"http://www.cisco.com/AXL/API/9.0 applicationDialRules"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddApplicationServerReq struct {
	ApplicationServer XApplicationServer `xml:"http://www.cisco.com/AXL/API/9.0 applicationServer"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddApplicationToSoftkeyTemplateReq struct {
	ApplicationToSoftkeyTemplate XApplicationToSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 applicationToSoftkeyTemplate"`
	Sequence                     uint64                        `xml:"sequence,attr,omitempty"`
}

type AddApplicationUserCapfProfileReq struct {
	ApplicationUserCapfProfile XApplicationUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 applicationUserCapfProfile"`
	Sequence                   uint64                      `xml:"sequence,attr,omitempty"`
}

type AddAssociatedCucms struct {
	AssociatedCucm []XSafForwarderMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucm"`
}

type AddAssociatedTrunks struct {
	AssociatedTrunk []XCcdRequestingServiceMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunk"`
}

type AddAudioCodecPreferenceListReq struct {
	AudioCodecPreferenceList XAudioCodecPreferenceList `xml:"http://www.cisco.com/AXL/API/9.0 audioCodecPreferenceList"`
	Sequence                 uint64                    `xml:"sequence,attr,omitempty"`
}

type AddBillingServerReq struct {
	BillingServer XBillingServer `xml:"http://www.cisco.com/AXL/API/9.0 billingServer"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddCallManagerGroupReq struct {
	CallManagerGroup XCallManagerGroup `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroup"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddCallManagerReq struct {
	CallManager XCallManager `xml:"http://www.cisco.com/AXL/API/9.0 callManager"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddCallParkReq struct {
	CallPark XCallPark `xml:"http://www.cisco.com/AXL/API/9.0 callPark"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddCallPickupGroupReq struct {
	CallPickupGroup XCallPickupGroup `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroup"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddCallStates struct {
	CallState []XCallStateMember `xml:"http://www.cisco.com/AXL/API/9.0 callState"`
}

type AddCalledPartyTracingReq struct {
	CalledPartyTracing XCalledPartyTracing `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTracing"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddCalledPartyTransformationPatternReq struct {
	CalledPartyTransformationPattern XCalledPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationPattern"`
	Sequence                         uint64                            `xml:"sequence,attr,omitempty"`
}

type AddCallerFilterListReq struct {
	CallerFilterList XCallerFilterList `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterList"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddCallingPartyTransformationPatternReq struct {
	CallingPartyTransformationPattern XCallingPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationPattern"`
	Sequence                          uint64                             `xml:"sequence,attr,omitempty"`
}

type AddCcdAdvertisingServiceReq struct {
	CcdAdvertisingService XCcdAdvertisingService `xml:"http://www.cisco.com/AXL/API/9.0 ccdAdvertisingService"`
	Sequence              uint64                 `xml:"sequence,attr,omitempty"`
}

type AddCcdHostedDNGroupReq struct {
	CcdHostedDNGroup XCcdHostedDNGroup `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDNGroup"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddCcdHostedDNReq struct {
	CcdHostedDN XCcdHostedDN `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDN"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddCcdRequestingServiceReq struct {
	CcdRequestingService XCcdRequestingService `xml:"http://www.cisco.com/AXL/API/9.0 ccdRequestingService"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddCcmExternalIpMaps struct {
	CcmExternalIpMap []XCcmExternalIpMap `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMap,omitempty"`
}

type AddCiscoCatalyst600024PortFXSGatewayReq struct {
	CiscoCatalyst600024PortFXSGateway XCiscoCatalyst600024PortFXSGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst600024PortFXSGateway"`
	Sequence                          uint64                             `xml:"sequence,attr,omitempty"`
}

type AddCiscoCatalyst6000E1VoIPGatewayReq struct {
	CiscoCatalyst6000E1VoIPGateway XCiscoCatalyst6000E1VoIPGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000E1VoIPGateway"`
	Sequence                       uint64                          `xml:"sequence,attr,omitempty"`
}

type AddCiscoCatalyst6000T1VoIPGatewayPriReq struct {
	CiscoCatalyst6000T1VoIPGatewayPri XCiscoCatalyst6000T1VoIPGatewayPri `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayPri"`
	Sequence                          uint64                             `xml:"sequence,attr,omitempty"`
}

type AddCiscoCatalyst6000T1VoIPGatewayT1Req struct {
	CiscoCatalyst6000T1VoIPGatewayT1 XCiscoCatalyst6000T1VoIPGatewayT1 `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayT1"`
	Sequence                         uint64                            `xml:"sequence,attr,omitempty"`
}

type AddCmcInfoReq struct {
	CmcInfo  XCmcInfo `xml:"http://www.cisco.com/AXL/API/9.0 cmcInfo"`
	Sequence uint64   `xml:"sequence,attr,omitempty"`
}

type AddCommonDeviceConfigReq struct {
	CommonDeviceConfig XCommonDeviceConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfig"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddCommonPhoneConfigReq struct {
	CommonPhoneConfig XCommonPhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfig"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddConferenceBridgeReq struct {
	ConferenceBridge XConferenceBridge `xml:"http://www.cisco.com/AXL/API/9.0 conferenceBridge"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddCredentialPolicyReq struct {
	CredentialPolicy XCredentialPolicy `xml:"http://www.cisco.com/AXL/API/9.0 credentialPolicy"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddCssReq struct {
	Css      XCss   `xml:"http://www.cisco.com/AXL/API/9.0 css"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddCtiRoutePointReq struct {
	CtiRoutePoint XCtiRoutePoint `xml:"http://www.cisco.com/AXL/API/9.0 ctiRoutePoint"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddCumaServerSecurityProfileReq struct {
	CumaServerSecurityProfile XCumaServerSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 cumaServerSecurityProfile"`
	Sequence                  uint64                     `xml:"sequence,attr,omitempty"`
}

type AddCustomUserFieldReq struct {
	CustomUserField XCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddDateTimeGroupReq struct {
	DateTimeGroup XDateTimeGroup `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeGroup"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddDdiReq struct {
	Ddi      XDdi   `xml:"http://www.cisco.com/AXL/API/9.0 ddi"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddDefaultDeviceProfileReq struct {
	DefaultDeviceProfile XDefaultDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 defaultDeviceProfile"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddDestinations struct {
	Destination []XH323TrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type AddDeviceMobilityGroupReq struct {
	DeviceMobilityGroup XDeviceMobilityGroup `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroup"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddDeviceMobilityReq struct {
	DeviceMobility XDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobility"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddDevicePoolReq struct {
	DevicePool XDevicePool `xml:"http://www.cisco.com/AXL/API/9.0 devicePool"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddDeviceProfileReq struct {
	DeviceProfile XDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddDhcpServerReq struct {
	DhcpServer XDhcpServer `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServer"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddDhcpSubnetReq struct {
	DhcpSubnet XDhcpSubnet `xml:"http://www.cisco.com/AXL/API/9.0 dhcpSubnet"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddDialPlanReq struct {
	DialPlan XDialPlan `xml:"http://www.cisco.com/AXL/API/9.0 dialPlan"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddDialPlanTagReq struct {
	DialPlanTag XDialPlanTag `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTag"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddDirectedCallParkReq struct {
	DirectedCallPark XDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 directedCallPark"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddDirectoryLookupDialRulesReq struct {
	DirectoryLookupDialRules XDirectoryLookupDialRules `xml:"http://www.cisco.com/AXL/API/9.0 directoryLookupDialRules"`
	Sequence                 uint64                    `xml:"sequence,attr,omitempty"`
}

type AddEmccFeatureConfigReq struct {
	EmccFeatureConfig XEmccFeatureConfig `xml:"http://www.cisco.com/AXL/API/9.0 emccFeatureConfig"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddEndUserCapfProfileReq struct {
	EndUserCapfProfile XEndUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 endUserCapfProfile"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddEndUsers struct {
	SelectedEndUser []Anon1142 `xml:"http://www.cisco.com/AXL/API/9.0 selectedEndUser"`
}

type AddEnterpriseFeatureAccessConfigurationReq struct {
	EnterpriseFeatureAccessConfiguration XEnterpriseFeatureAccessConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseFeatureAccessConfiguration"`
	Sequence                             uint64                                `xml:"sequence,attr,omitempty"`
}

type AddExternalCallControlProfileReq struct {
	ExternalCallControlProfile XExternalCallControlProfile `xml:"http://www.cisco.com/AXL/API/9.0 externalCallControlProfile"`
	Sequence                   uint64                      `xml:"sequence,attr,omitempty"`
}

type AddFacInfoReq struct {
	FacInfo  XFacInfo `xml:"http://www.cisco.com/AXL/API/9.0 facInfo"`
	Sequence uint64   `xml:"sequence,attr,omitempty"`
}

type AddFallbackProfileReq struct {
	FallbackProfile XFallbackProfile `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfile"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddFeatureControlPolicyReq struct {
	FeatureControlPolicy XFeatureControlPolicy `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddFixedMohAudioSourceReq struct {
	FixedMohAudioSource XFixedMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 fixedMohAudioSource"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddGatekeeperReq struct {
	Gatekeeper XGatekeeper `xml:"http://www.cisco.com/AXL/API/9.0 gatekeeper"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddGatewayEndpointAnalogAccessReq struct {
	GatewayEndpointAnalogAccess XGatewayEndpointAnalogAccess `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointAnalogAccess"`
	Sequence                    uint64                       `xml:"sequence,attr,omitempty"`
}

type AddGatewayEndpointDigitalAccessBriReq struct {
	GatewayEndpointDigitalAccessBri XGatewayEndpointDigitalAccessBri `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessBri"`
	Sequence                        uint64                           `xml:"sequence,attr,omitempty"`
}

type AddGatewayEndpointDigitalAccessPriReq struct {
	GatewayEndpointDigitalAccessPri XGatewayEndpointDigitalAccessPri `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessPri"`
	Sequence                        uint64                           `xml:"sequence,attr,omitempty"`
}

type AddGatewayEndpointDigitalAccessT1Req struct {
	GatewayEndpointDigitalAccessT1 XGatewayEndpointDigitalAccessT1 `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessT1"`
	Sequence                       uint64                          `xml:"sequence,attr,omitempty"`
}

type AddGatewayReq struct {
	Gateway  XGateway `xml:"http://www.cisco.com/AXL/API/9.0 gateway"`
	Sequence uint64   `xml:"sequence,attr,omitempty"`
}

type AddGatewaySccpEndpointsReq struct {
	GatewaySccpEndpoints XGatewaySccpEndpoints `xml:"http://www.cisco.com/AXL/API/9.0 gatewaySccpEndpoints"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddGatewaySubunitsReq struct {
	GatewaySubunits XGatewaySubunits `xml:"http://www.cisco.com/AXL/API/9.0 gatewaySubunits"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddGeoLocationFilterReq struct {
	GeoLocationFilter XGeoLocationFilter `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilter"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddGeoLocationPolicyReq struct {
	GeoLocationPolicy XGeoLocationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicy"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddGeoLocationReq struct {
	GeoLocation XGeoLocation `xml:"http://www.cisco.com/AXL/API/9.0 geoLocation"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddH323GatewayReq struct {
	H323Gateway XH323Gateway `xml:"http://www.cisco.com/AXL/API/9.0 h323Gateway"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddH323PhoneReq struct {
	H323Phone XH323Phone `xml:"http://www.cisco.com/AXL/API/9.0 h323Phone"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddH323TrunkReq struct {
	H323Trunk XH323Trunk `xml:"http://www.cisco.com/AXL/API/9.0 h323Trunk"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddHandoffConfigurationReq struct {
	HandoffConfiguration XHandoffConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 handoffConfiguration"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddHuntListReq struct {
	HuntList XHuntList `xml:"http://www.cisco.com/AXL/API/9.0 huntList"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddHuntPilotReq struct {
	HuntPilot XHuntPilot `xml:"http://www.cisco.com/AXL/API/9.0 huntPilot"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddImeClientReq struct {
	ImeClient XImeClient `xml:"http://www.cisco.com/AXL/API/9.0 imeClient"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddImeE164TransformationReq struct {
	ImeE164Transformation XImeE164Transformation `xml:"http://www.cisco.com/AXL/API/9.0 imeE164Transformation"`
	Sequence              uint64                 `xml:"sequence,attr,omitempty"`
}

type AddImeEnrolledPatternGroupReq struct {
	ImeEnrolledPatternGroup XImeEnrolledPatternGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroup"`
	Sequence                uint64                   `xml:"sequence,attr,omitempty"`
}

type AddImeEnrolledPatternReq struct {
	ImeEnrolledPattern XImeEnrolledPattern `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPattern"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddImeExclusionNumberGroupReq struct {
	ImeExclusionNumberGroup XImeExclusionNumberGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroup"`
	Sequence                uint64                   `xml:"sequence,attr,omitempty"`
}

type AddImeExclusionNumberReq struct {
	ImeExclusionNumber XImeExclusionNumber `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumber"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddImeFirewallReq struct {
	ImeFirewall XImeFirewall `xml:"http://www.cisco.com/AXL/API/9.0 imeFirewall"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddImeRouteFilterElementReq struct {
	ImeRouteFilterElement XImeRouteFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterElement"`
	Sequence              uint64                 `xml:"sequence,attr,omitempty"`
}

type AddImeRouteFilterGroupReq struct {
	ImeRouteFilterGroup XImeRouteFilterGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroup"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddImeServerReq struct {
	ImeServer XImeServer `xml:"http://www.cisco.com/AXL/API/9.0 imeServer"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddImportedDirectoryUriCatalogsReq struct {
	ImportedDirectoryUriCatalogs XImportedDirectoryUriCatalogs `xml:"http://www.cisco.com/AXL/API/9.0 importedDirectoryUriCatalogs"`
	Sequence                     uint64                        `xml:"sequence,attr,omitempty"`
}

type AddInterClusterServiceProfileReq struct {
	InterClusterServiceProfile XInterClusterServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 interClusterServiceProfile"`
	Sequence                   uint64                      `xml:"sequence,attr,omitempty"`
}

type AddIpPhoneServicesReq struct {
	IpPhoneServices XIpPhoneServices `xml:"http://www.cisco.com/AXL/API/9.0 ipPhoneServices"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddIvrUserLocaleReq struct {
	IvrUserLocale XIvrUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 ivrUserLocale"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddLbmGroupReq struct {
	LbmGroup XLbmGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddLbmHubGroupReq struct {
	LbmHubGroup XLbmHubGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddLdapDirectoryReq struct {
	LdapDirectory XLdapDirectory `xml:"http://www.cisco.com/AXL/API/9.0 ldapDirectory"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddLdapFilterReq struct {
	LdapFilter XLdapFilter `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddLdapSyncCustomFieldReq struct {
	LdapSyncCustomField XLdapSyncCustomField `xml:"http://www.cisco.com/AXL/API/9.0 ldapSyncCustomField"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddLicenseCapabilitiesReq struct {
	LicenseCapabilities XLicenseCapabilities `xml:"http://www.cisco.com/AXL/API/9.0 licenseCapabilities"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddLineGroupReq struct {
	LineGroup XLineGroup `xml:"http://www.cisco.com/AXL/API/9.0 lineGroup"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddLineReq struct {
	Line     XLine  `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddLocales struct {
	Locale []XMobileVoiceMember `xml:"http://www.cisco.com/AXL/API/9.0 locale"`
}

type AddLocationReq struct {
	Location XLocation `xml:"http://www.cisco.com/AXL/API/9.0 location"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddMediaResourceGroupReq struct {
	MediaResourceGroup XMediaResourceGroup `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroup"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddMediaResourceListReq struct {
	MediaResourceList XMediaResourceList `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceList"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddMeetMeReq struct {
	MeetMe   XMeetMe `xml:"http://www.cisco.com/AXL/API/9.0 meetMe"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type AddMembers struct {
	Member []XTimeScheduleTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type AddMessageWaitingReq struct {
	MessageWaiting XMessageWaiting `xml:"http://www.cisco.com/AXL/API/9.0 messageWaiting"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddMlppDomainReq struct {
	MlppDomain XMlppDomain `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomain"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddMobileSmartClientProfileReq struct {
	MobileSmartClientProfile XMobileSmartClientProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfile"`
	Sequence                 uint64                    `xml:"sequence,attr,omitempty"`
}

type AddMobileVoiceAccessReq struct {
	MobileVoiceAccess XMobileVoiceAccess `xml:"http://www.cisco.com/AXL/API/9.0 mobileVoiceAccess"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddMobilityProfileReq struct {
	MobilityProfile XMobilityProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfile"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddMobilityReq struct {
	Mobility XMobility `xml:"http://www.cisco.com/AXL/API/9.0 mobility"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddMohAudioSourceReq struct {
	MohAudioSource XMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 mohAudioSource"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddMohServerReq struct {
	MohServer XMohServer `xml:"http://www.cisco.com/AXL/API/9.0 mohServer"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddMtpReq struct {
	Mtp      XMtp   `xml:"http://www.cisco.com/AXL/API/9.0 mtp"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddOnModules struct {
	AddOnModule []XAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type AddParameters struct {
	Parameter []XIpPhoneServicesParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter"`
}

type AddPatterns struct {
	Pattern []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
}

type AddPhoneButtonTemplateReq struct {
	PhoneButtonTemplate XPhoneButtonTemplate `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

type AddPhoneNtpReferences struct {
	SelectedPhoneNtpReference []XDateTimeGroupNtpReference `xml:"http://www.cisco.com/AXL/API/9.0 selectedPhoneNtpReference"`
}

type AddPhoneNtpReq struct {
	PhoneNtp XPhoneNtp `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtp"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddPhoneReq struct {
	Phone    XPhone `xml:"http://www.cisco.com/AXL/API/9.0 phone"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddPhoneSecurityProfileReq struct {
	PhoneSecurityProfile XPhoneSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 phoneSecurityProfile"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddPhysicalLocationReq struct {
	PhysicalLocation XPhysicalLocation `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocation"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddPlars struct {
	Plar []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 plar"`
}

type AddPresenceGroupReq struct {
	PresenceGroup XPresenceGroup `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddProcessNodeReq struct {
	ProcessNode XProcessNode `xml:"http://www.cisco.com/AXL/API/9.0 processNode"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddProcessNodeServiceReq struct {
	ProcessNodeService XProcessNodeService `xml:"http://www.cisco.com/AXL/API/9.0 processNodeService"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddRecordingProfileReq struct {
	RecordingProfile XRecordingProfile `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfile"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddRegionMatrixReq struct {
	RegionMatrix XRegionMatrix `xml:"http://www.cisco.com/AXL/API/9.0 regionMatrix"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddRegionReq struct {
	Region   XRegion `xml:"http://www.cisco.com/AXL/API/9.0 region"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type AddRelatedPolicies struct {
	RelatedPolicy []XPolicyRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicy"`
}

type AddRemoteClusterReq struct {
	RemoteCluster XRemoteCluster `xml:"http://www.cisco.com/AXL/API/9.0 remoteCluster"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddRemoteDestinationProfileReq struct {
	RemoteDestinationProfile XRemoteDestinationProfile `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfile"`
	Sequence                 uint64                    `xml:"sequence,attr,omitempty"`
}

type AddRemoteDestinationReq struct {
	RemoteDestination XRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestination"`
	Sequence          uint64             `xml:"sequence,attr,omitempty"`
}

type AddResourcePriorityNamespaceListReq struct {
	ResourcePriorityNamespaceList XResourcePriorityNamespaceList `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceList"`
	Sequence                      uint64                         `xml:"sequence,attr,omitempty"`
}

type AddResourcePriorityNamespaceReq struct {
	ResourcePriorityNamespace XResourcePriorityNamespace `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace"`
	Sequence                  uint64                     `xml:"sequence,attr,omitempty"`
}

type AddRouteFilterReq struct {
	RouteFilter XRouteFilter `xml:"http://www.cisco.com/AXL/API/9.0 routeFilter"`
	Sequence    uint64       `xml:"sequence,attr,omitempty"`
}

type AddRouteGroupReq struct {
	RouteGroup XRouteGroup `xml:"http://www.cisco.com/AXL/API/9.0 routeGroup"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddRouteListReq struct {
	RouteList XRouteList `xml:"http://www.cisco.com/AXL/API/9.0 routeList"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddRoutePartitionReq struct {
	RoutePartition XRoutePartition `xml:"http://www.cisco.com/AXL/API/9.0 routePartition"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddRoutePatternReq struct {
	RoutePattern XRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 routePattern"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddRoutePlanReq struct {
	RoutePlan XRoutePlan `xml:"http://www.cisco.com/AXL/API/9.0 routePlan"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddSIPNormalizationScriptReq struct {
	SIPNormalizationScript XSIPNormalizationScript `xml:"http://www.cisco.com/AXL/API/9.0 sIPNormalizationScript"`
	Sequence               uint64                  `xml:"sequence,attr,omitempty"`
}

type AddSNMPCommunityStringReq struct {
	CommunityString RCommunityString `xml:"http://www.cisco.com/AXL/API/9.0 CommunityString"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddSNMPCommunityStringRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddSNMPUserReq struct {
	User     RSNMPUser `xml:"http://www.cisco.com/AXL/API/9.0 user,omitempty"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddSNMPUserRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddSafCcdPurgeBlockLearnedRoutesReq struct {
	SafCcdPurgeBlockLearnedRoutes XSafCcdPurgeBlockLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 safCcdPurgeBlockLearnedRoutes"`
	Sequence                      uint64                         `xml:"sequence,attr,omitempty"`
}

type AddSafForwarderReq struct {
	SafForwarder XSafForwarder `xml:"http://www.cisco.com/AXL/API/9.0 safForwarder"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddSafSecurityProfileReq struct {
	SafSecurityProfile XSafSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type AddServiceParameterReq struct {
	ServiceParameter XServiceParameter `xml:"http://www.cisco.com/AXL/API/9.0 serviceParameter"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddServiceProfileReq struct {
	ServiceProfile XServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddSipDialRulesReq struct {
	SipDialRules XSipDialRules `xml:"http://www.cisco.com/AXL/API/9.0 sipDialRules"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddSipProfileReq struct {
	SipProfile XSipProfile `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddSipRealmReq struct {
	SipRealm XSipRealm `xml:"http://www.cisco.com/AXL/API/9.0 sipRealm"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddSipRoutePatternReq struct {
	SipRoutePattern XSipRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 sipRoutePattern"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddSipTrunkReq struct {
	SipTrunk XSipTrunk `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunk"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddSipTrunkSecurityProfileReq struct {
	SipTrunkSecurityProfile XSipTrunkSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkSecurityProfile"`
	Sequence                uint64                   `xml:"sequence,attr,omitempty"`
}

type AddSoftKeyTemplateReq struct {
	SoftKeyTemplate XSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplate"`
	Sequence        uint64           `xml:"sequence,attr,omitempty"`
}

type AddSrstReq struct {
	Srst     XSrst  `xml:"http://www.cisco.com/AXL/API/9.0 srst"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddTimePeriodReq struct {
	TimePeriod XTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 timePeriod"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddTimeScheduleReq struct {
	TimeSchedule XTimeSchedule `xml:"http://www.cisco.com/AXL/API/9.0 timeSchedule"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddTodAccessReq struct {
	TodAccess XTodAccess `xml:"http://www.cisco.com/AXL/API/9.0 todAccess"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddTransPatternReq struct {
	TransPattern XTransPattern `xml:"http://www.cisco.com/AXL/API/9.0 transPattern"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type AddTranscoderReq struct {
	Transcoder XTranscoder `xml:"http://www.cisco.com/AXL/API/9.0 transcoder"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddTransformationProfileReq struct {
	TransformationProfile XTransformationProfile `xml:"http://www.cisco.com/AXL/API/9.0 transformationProfile"`
	Sequence              uint64                 `xml:"sequence,attr,omitempty"`
}

type AddTvsCertificateReq struct {
	TvsCertificate XTvsCertificate `xml:"http://www.cisco.com/AXL/API/9.0 tvsCertificate"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddUcServiceReq struct {
	UcService XUcService `xml:"http://www.cisco.com/AXL/API/9.0 ucService"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddUnitsToGatewayReq struct {
	UnitsToGateway XUnitsToGateway `xml:"http://www.cisco.com/AXL/API/9.0 unitsToGateway"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddUserGroupReq struct {
	UserGroup XUserGroup `xml:"http://www.cisco.com/AXL/API/9.0 userGroup"`
	Sequence  uint64     `xml:"sequence,attr,omitempty"`
}

type AddUserPhoneAssociationReq struct {
	UserPhoneAssociation XUserPhoneAssociation `xml:"http://www.cisco.com/AXL/API/9.0 userPhoneAssociation"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

type AddUserReq struct {
	User     XUser  `xml:"http://www.cisco.com/AXL/API/9.0 user"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddUserRoles struct {
	UserRole []XUserGroupRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type AddVg224Req struct {
	Vg224    XVg224 `xml:"http://www.cisco.com/AXL/API/9.0 vg224"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type AddVoiceMailPilotReq struct {
	VoiceMailPilot XVoiceMailPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type AddVoiceMailPortReq struct {
	VoiceMailPort XVoiceMailPort `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPort"`
	Sequence      uint64         `xml:"sequence,attr,omitempty"`
}

type AddVoiceMailProfileReq struct {
	VoiceMailProfile XVoiceMailProfile `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfile"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type AddVpnGatewayReq struct {
	VpnGateway XVpnGateway `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AddVpnGroupReq struct {
	VpnGroup XVpnGroup `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroup"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type AddVpnProfileReq struct {
	VpnProfile XVpnProfile `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfile"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type AlarmConfigs struct {
	AlarmConfig []RSyslogConfig `xml:"http://www.cisco.com/AXL/API/9.0 AlarmConfig"`
}

type Anon1 struct {
	SipProfile []LSipProfile `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile,omitempty"`
}

type Anon10 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon100 struct {
	ResourcePriorityNamespace []LResourcePriorityNamespace `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace,omitempty"`
}

// May be one of None, First Name Last Name, Last Name, First Name
type Anon1000 string

// May be one of OnNet, OffNet, Use System Default
type Anon1001 string

// May be one of Use Name, Use Name Plus Domain, Use IPV4, Use IPV6
type Anon1002 string

// May be one of Publisher, Subscriber
type Anon1003 string

// May be one of Cisco CallManager, ISDN, National Standard, Private, Unknown
type Anon1004 string

// May be one of Default
type Anon1005 string

// May be one of NOT-SELECTED, EXISTS, DOES-NOT-EXIST, ==
type Anon1006 string

// May be one of Do Not Use, Unrestricted, Read Only
type Anon1007 string

// May be one of No Rollover, Rollover Within Same DN, Rollover to any line
type Anon1008 string

// May be one of Timeslot Number, Slotmap, Use Number when 1B, Continuous Number
type Anon1009 string

type Anon101 struct {
	Member []XResourcePriorityNamespaceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of None, Batch Processing Mode
type Anon1010 string

// May be one of boolean, double, long, string, date/time, any digit, digits, timeout, terminating, more digits
type Anon1011 string

// May be one of Intercom, Call Control Discovery Learned Pattern, General, Directory URI
type Anon1012 string

// May be one of Pattern, Plar
type Anon1013 string

// May be one of Flash Override, Flash, Immediate, Priority, Routine, Default, Executive Override
type Anon1014 string

// May be one of Default, Voice, Data, Satellite Avoidance, Hotline Voice, Hotline Data
type Anon1015 string

// May be one of CallPark, Conference, Device, Translation, Call Pick Up Group, Route, Message Waiting, Hunt Pilot, Voice Mail Port, Domain Routing, IPAddress Routing, Device template, Directed Call Park, Device Intercom, Translation Intercom, Translation Calling Party Number, Mobility Handoff, Mobility Enterprise Feature Access, Mobility IVR, Device Intercom Template, Called Party Number Transformation, Call Control Discovery Learned Pattern, Uri Routing
type Anon1016 string

// May be one of NoAccess, ReadOnly, FullAccess
type Anon1017 string

// May be one of Undefined, Home, Work, Mobile, Raw
type Anon1018 string

// May be one of Desk Phone, Mobile Device, Profile
type Anon1019 string

type Anon102 struct {
	Member []XResourcePriorityNamespaceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Default
type Anon1020 string

// May be one of Disabled, Enabled, HTTPS Only, Default
type Anon1021 string

// May be one of Standard IP Phone Service, Directories, Messages
type Anon1022 string

// May be one of XML Service, Java MIDlet, Web Widget, Web Link, Android APK
type Anon1023 string

// May be one of Internal, External URL, Both, Default
type Anon1024 string

// May be one of Traditional Phone Template, Side Car 14-Buttons, 7915 Side Car 12-Buttons, 7915 Side Car 24-Buttons, 7916 Side Car 12-Buttons, 7916 Side Car 24-Buttons, CKEM 36-Buttons, VKEM 36-Buttons
type Anon1025 string

// May be one of No Alert, Audio Alert, Visual Alert, Audio and Visual Alert
type Anon1026 string

// May be one of Attendant, User
type Anon1027 string

// May be one of T1(1.5 Mbits), Half T1 (768 Kbits), 2 Channel BRI(144 Kbits), Half E1(1 Mbit), E1(2 Mbits), 10 Mbits, 100 Mbits, 1 Gbit
type Anon1028 string

// May be one of Last Name, First Name, User ID, Primary Extension, Extension, Line Index, Email, Department, Manager, Device Name, Product Type, Protocol Type
type Anon1029 string

type Anon103 struct {
	Member []XResourcePriorityNamespaceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Tomcat, IPSec, CallManager, CAPF, Directory
type Anon1030 string

// May be one of Application Menu, Installation, User Menu, Telecaster Menu
type Anon1031 string

// May be one of Disabled, Forceful, Default
type Anon1032 string

// May be one of Default, Allowed, Restricted
type Anon1033 string

// May be one of Cisco CallManager, Unknown, National, International, Subscriber
type Anon1034 string

// May be one of PRI 4ESS, PRI 5E8, PRI 5E8 TELEOS, PRI 5E8 INTECOME, PRI 5E9, PRI DMS-100, PRI DMS-250, PRI EURO, PRI NI2, PRI AUSTRALIAN, PRI 5E8 CUSTOM, PRI ETSI SC, PRI NTT, PRI ISO QSIG T1, PRI ISO QSIG E1
type Anon1035 string

// May be one of Pilot, Cisco Catalyst 6000 T1 VoIP Gateway, Cisco Catalyst 6000 E1 VoIP Gateway, Cisco Catalyst 6000 24 port FXS Gateway, Cisco Catalyst 6000 12 port FXO Gateway, EMCC Base Phone, H.323 Client, H.323 Gateway, Cisco MGCP FXO Port, Cisco MGCP FXS Port, Cisco 12 SP+, Cisco 12 SP, Cisco 12 S, Cisco 30 SP+, Cisco 30 VIP, CTI Port, Cisco Voice Mail Port, Cisco Conference Bridge Software, Cisco Conference Bridge Hardware, Cisco Media Termination Point Software, Cisco Media Termination Point Hardware, Cisco 7935, SCCP Device, Cisco 7910, Cisco 7960, Cisco 7940, Route List, Unknown, Load Simulator, Gatekeeper, NM-1V, NM-2V, Cisco VG200, Cisco 26XX, Cisco 362X, Cisco 364X, Cisco 366X, CTI Route Point, Music On Hold, Cisco MGCP T1 Port, NM-HDV, VIC_SLOT, Cisco MGCP E1 Port, VWIC_SLOT, FLEX_SLOT, Cisco Catalyst 4224 Voice Gateway Switch, Cisco Catalyst 4000 Access Gateway  Module, Cisco IOS Conference Bridge, Cisco IOS Media Termination Point, Cisco  IAD2400, IAD2400_ANALOG, IAD2400_DIGITAL, Cisco VGC Phone, Cisco VG248 Gateway, VGC Port, Cisco VGC Virtual Phone, Cisco ATA 186, H.225 Trunk (Gatekeeper Controlled), Inter-Cluster Trunk (Gatekeeper Controlled), Inter-Cluster Trunk (Non-Gatekeeper Controlled), Communication Media Module, WS-X6600, AIM-VOICE-30, NM-HDA, PA-VXA, PA-VXB, PA-VXC, PA-MCX, Annunciator, Cisco MGCP BRI Port, NM-HD-1V, NM-HD-2V, NM-HD-2VE, SIP Trunk, Cisco Conference Bridge (WS-SVC-CMM), Cisco Media Server (WS-SVC-CMM-MS), Cisco Media Termination Point (WS-SVC-CMM), Cisco IOS Enhanced Software Media Termination Point, 7914 14-Button Line Expansion Module, Cisco IOS Enhanced Conference Bridge, Cisco IOS Enhanced Media Termination Point, Cisco Video Conference Bridge(IPVC-35xx), Cisco IOS Heterogeneous Video Conference Bridge, Cisco IOS Guaranteed Audio Video Conference Bridge, Cisco IOS Homogeneous Video Conference Bridge, Hunt List, SIP WSM Connection, Remote Destination Profile, Cisco 7941, Cisco 7971, Cisco 7985, Cisco 7911, Cisco 7961G-GE, Cisco 7941G-GE, 7915 12-Button Line Expansion Module, 7915 24-Button Line Expansion Module, 7916 12-Button Line Expansion Module, 7916 24-Button Line Expansion Module, CKEM 36-Button Line Expansion Module, Motorola CN622, Third-party SIP Device (Basic), Cisco 7931, Cisco Unified Personal Communicator, Cisco 7921, Cisco 7906, Third-party SIP Device (Advanced), Cisco TelePresence, Nokia S60, Cisco 7962, Cisco 3951, Cisco 7937, Cisco 7942, Cisco 7945, Cisco 7965, Cisco 7975, Cisco 3911, Cisco Unified Mobile Communicator, Cisco TelePresence 1000, Cisco TelePresence 3000, Cisco TelePresence 3200, Cisco TelePresence 500-37, Cisco 7925, Cisco 9971, Cisco 6921, Cisco 6941, Cisco 6961, Cisco Unified Client Services Framework, Cisco TelePresence 1300-65, Cisco TelePresence 1100, Transnova S3, Cisco 9951, Cisco 8961, Cisco 6901, Cisco 6911, Cisco ATA 187, Cisco TelePresence 200, Cisco TelePresence 400, Cisco Dual Mode for iPhone, Cisco 6945, Cisco Dual Mode for Android, Cisco 7926, Cisco E20, Generic Single Screen Room System, Generic Multiple Screen Room System, Cisco TelePresence EX90, Cisco 8945, Cisco 8941, Generic Desktop Video Endpoint, Cisco TelePresence 500-32, Cisco TelePresence 1300-47, Cisco 3905, Cisco Cius, VKEM 36-Button Line Expansion Module, Cisco TelePresence 1310-65, Cisco TelePresence MCU, Cisco TelePresence EX60, Cisco TelePresence Codec C90, Cisco TelePresence Codec C60, Cisco TelePresence Codec C40, Cisco TelePresence Quick Set C20, Cisco TelePresence Profile 42 (C20), Cisco TelePresence Profile 42 (C60), Cisco TelePresence Profile 52 (C40), Cisco TelePresence Profile 52 (C60), Cisco TelePresence Profile 52 Dual (C60), Cisco TelePresence Profile 65 (C60), Cisco TelePresence Profile 65 Dual (C90), Cisco TelePresence MX200, Cisco TelePresence TX9000, Cisco TelePresence TX9200, Cisco TelePresence SX20, Cisco TelePresence MX300, IMS-integrated Mobile (Basic), Third-party AS-SIP Endpoint, Cisco Cius SP, Cisco TelePresence Profile 42 (C40), Cisco VXC 6215, CTI Remote Device, Carrier-integrated Mobile, Universal Device Template, Cisco Unified Communications for RTX, Cisco Jabber for Tablet, WS-SVC-CMM-MS, NM-4VWIC-MBRD, VNM-HDA, NM-HDV2-0PORT, NM-HDV2-1PORT, NM-HDV2-2PORT, Cisco 3745, Cisco 3725, Cisco 7905, Cisco 7920, Cisco 269X, Cisco 7970, Cisco 1760, Cisco 1751, Cisco 7912, Cisco 7902, VG224, Cisco 2821, Cisco IP Communicator, Cisco 7961, Cisco 7936, Cisco 3825, Cisco 3845, Cisco 2811, Cisco 2851, Analog Phone, ISDN BRI Phone, SCCP gateway virtual phone, IP-STE, Cisco 2801, Cisco 1861, VG204, Cisco VGD-1T3, VG202, Cisco 881, Cisco 2951, Cisco 3945, Cisco 888/887/886, Cisco 2911, Cisco 3925, Cisco 2921, Cisco 2901, Cisco 3945E, Cisco 3925E, SPA8800, C881VA-V, C887VA-V, VG350
type Anon1036 string

// May be one of New Other Unrecognized, Cisco Common Data Services, Cisco Unified Communications Manager, Cisco Unified Presence
type Anon1037 string

// May be one of CallingPartySelection, ClockReference, CSUParam, DeviceProtocol, DigitSending, PriProtocolT1, ProtocolSide, StartDialProtocol, Trunk, ZeroSuppressionPri, ZeroSuppressionT1, FramingPRI, FramingT1, ZeroSuppressionE1, MGCPCompatibleModules, MGCPSlotModuleMap, MGCPModuleVicMap, PriProtocolE1, NetworkLocale, Encode, BriProtocol
type Anon1038 string

// May be one of Network, User
type Anon1039 string

type Anon104 struct {
	Member []XResourcePriorityNamespaceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Base Provider, Custom Provider, Merge Provider
type Anon1040 string

// May be one of Not Initialized, All PRI QSIG, Miscible Mix, H.323 Gateways, Mixed non-QSIG, Invalid group configuration, All SIP, Mixed SIP
type Anon1041 string

// May be one of No Changes, ECMA, ISO
type Anon1042 string

// May be one of Local RSVP, E2E
type Anon1043 string

// May be one of CCD Learned Pattern, SAF Forwarder, CCD Learned Pattern For DNA
type Anon1044 string

// May be one of Active Range, Next Range
type Anon1045 string

// May be one of Call Recording Disabled, Automatic Call Recording Enabled, Selective Call Recording Enabled
type Anon1046 string

// May be one of No Error, Unallocated Number, Call Rejected, Number Changed, Invalid Number Format, Precedence Level Exceeded
type Anon1047 string

// May be one of Reset, Restart, Apply Configuration
type Anon1048 string

// May be one of new, done
type Anon1049 string

type Anon105 struct {
	ResourcePriorityNamespaceList RResourcePriorityNamespaceList `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceList"`
}

// May be one of AAR Group web pages, Annunciator web pages, Application Dial Rules web pages, CallManager web pages, CallManager Group web pages, Call Park web pages, Call Pickup web pages, IPMA Wizard web pages, Conference Bridge web pages, Calling Search Space web pages, CTI Route Point web pages, Date/Time Group web pages, Default Device Profile web pages, Device Default web pages, Device Pool web pages, Device Profile web pages, Directory Number web pages, Firmware Load web pages, Gate Keeper web pages, Gateway web pages, Line Group web pages, Location web pages, Meet Me web pages, Message Waiting web pages, MOH Audio Source web pages, MOH Server web pages, Media Resource Group web pages, Media Resource Group List web pages, Media Termination Point web pages, Route Partition web pages, Phone web pages, Phone Services web pages, Phone Button Template web pages, Plugin web pages, Region  web pages, Route Filter web pages, Route Group web pages, Route Pattern web pages, Route Plan Report web pages, Server web pages, Service Parameter web pages, Softkey Template web pages, SRST web pages, Transcoder web pages, Translation Pattern web pages, Trunk web pages, User web pages, Voice Mail Pilot web pages, Voice Mail Port web pages, Voice Mail Port Wizard web pages, Voice Mail Profile web pages, Voice Mail web pages, Alarm Configuration web page, Alarm Definition web page, Trace Configuration web page, Troubleshoot Trace Settings web page, Service Activation web page, Control Center - Feature Services web page, Control Center - Network Services web page, Serviceability Report Archive, Access Control Group web pages, Role web pages, Security Setting web pages, Enterprise Parameters web pages, LDAP System Configuration Page, LDAP Directory Configuration Pages, LDAP Authentication Configuration Page, MLPP Domain web pages, SNMP->V1/V2c->Configuration->Community String web page, SNMP->V1/V2c->Configuration->Notification Destination web page, SNMP->V3 Configuration->User web page, SNMP->V3 Configuration->Notification Destination web page, SNMP->system Group Configuration->MIB2 System Group Configuration web page, Log Partition Monitoring->Configuration web page, Line Appearance web pages, CTI Application, CTI Calling Number, CTI Call Park, CTI All Devices, AXL Database API, DHCP Server Web Pages, DHCP Subnet Web Pages, Application User Web Pages, Speed Dial Page, Service Url Page, Phone Device Profile Page, Phone Service Subscribe Page, DRF Schedule Page, DRF Show Status Page, DRF Show Dependency Page, DRF Restore Warning Page, Real Time Monitoring Tool, SOAP Realtime Informations and Control Center APIs, SOAP Performance Informations APIs, SOAP Log Collection APIs, SOAP CDR on Demand APIs, SOAP Backup and Restore APIs, Fac Info, NTP Server, CMC Info, Time Period, Time Schedule, Sip Profile, Hunt List, Route List, SIP Phone Security Profile, SIP Trunk Security Profile, SCCP Security Profile, Hunt Pilot, Route Pattern2, Bulk Job Scheduler pages, Dial Rules Info, SIP Route Pattern, Presence Group, BLF Speeddial, Dial Rule Pattern Info, Pattern Parameter Info, Bulk File Upload Pages, Directory Dial Rules pages, Application User CAPF, End User CAPF, SIP Realm, Gateway Security Profile, H323 Security Profile, Application Server, SOAP Control Center APIs, Trace Collection Tool, Licensing Report, Common Phone Profile, EM Proxy Rights, CCMUser: Device, CCMUser: Line Settings, CCMUser: Speed Dial User, CCMUser: IP Phone Services, CCMUser: Service URL, CCMUser: User Settings, CCMUser: Directory, CCMUser: Personal Address Book, CCMUser: Fast Dials, Reorder Info, Dial Plan, Add Unity User, Super Copy Info, Fixed MOH Audio Source, SRST Certificate, RTMT->Profile Saving, RTMT->Alert Config, MOH Audio Source Management web pages, Bulk Phone Template, Bulk Phone File Format, Bulk Validate Phones, Bulk Insert Phones, Bulk Update Phones, Bulk Delete Phones, Bulk Export Phones, Bulk Add/Update Phones, Bulk Reset/Restart Phones, Bulk Generate Phone Reports, Bulk Migrate Phones, Bulk User Template, Bulk Insert Users, Bulk Update Users, Bulk Delete Users, Bulk Export Users, Bulk Reset Password/PIN, Bulk Generate User Reports, Bulk Phone & Users File Format, Bulk Validate Phones/Users, Bulk Insert Phones with Users, Bulk Insert IPMA Managers/Assistants, Bulk Delete IPMA Managers/Assistants, Bulk Delete IPMA Managers, Bulk Delete IPMA Assistants, Bulk Generate IPMA Manager Reports, Bulk Generate IPMA Assistant Reports, Bulk UDP Template, Bulk UDP File Format, Bulk Validate UDP, Bulk Insert UDP, Bulk Delete UDP, Bulk Export UDP, Bulk Add/Update Lines, Bulk Generate UDP Reports, Bulk Gateway Template, Bulk Insert Gateways, Bulk Delete Gateways, Bulk Generate Gateway Reports, Bulk Insert Forced Authorization Codes, Bulk Delete Forced Authorization Codes, Bulk Insert Client Matter Codes, Bulk Delete Client Matter Codes, Bulk Insert Call Pickup Group, Bulk Delete Call Pickup Group, Bulk Secure TAPS, Bulk User Locales for TAPS, Bulk View TAPS Log File, Phone Security Profile, Directed Call Park, Physical Location, Device Mobility Group, Device Mobility Info, Common Device Mobility Profile, BLF Directed Call Park, CTI Call Monitoring, CTI Call Recording, Recording Profile, IntercomCallingSearchSpace, IntercomRoutePartition, IntercomDirectoryNumber, IntercomTranslation, Access List, Transformation Pattern, Bulk CUPS User Page, Bulk Region Matrix, RemoteDestinationTemplate, RemoteDestination, Bulk Update Line Appearance, Bulk Export Line Appearance, CCMUser: Alternate Numbers, Mobility Configuration, Credential Policy, Mobile Voice Access, CCMUser: Allowed or Blocked Lists, Bulk Insert Access List, Bulk Delete Access List, Bulk Export Access List, Credential, Bulk Insert Remote Destination, Bulk Delete Remote Destination, Bulk Export Remote Destination, Credential Policy Default, Bulk Insert Remote Destination Profile, Bulk Delete Remote Destination Profile, Bulk Export Remote Destination Profile, Bulk Remote Destination Profile Template, Bulk Remote Destination Profile Add File Format, Bulk Config Tool Export, Bulk Config Tool Import, Bulk Update Intercom, Bulk Insert Intercom, Bulk Gateway File Format, Bulk Intercom DN Template, Called Party Transformation Pattern, Resource Priority Namespace, Resource Priority Namespace List, CCMUser: Plugins, CUMA Server Security Profile, CDR Management, Bulk Config Tool Import Validation, Bulk UDP Intercom DN Update, Bulk UDP Intercom DN Add, SOAP SNMP Config API, System Reports, Show Report, Generate Report, Download Report, Delete Unassigned DN, Upload Report, Enterprise Phone Configuration, Bulk Phone Migration, Audit Trace, Audit Configuration, DNA Analyser, DNA Gateways, DNA Phones, DNA Trunks, DNA Dump Da Information, DNA Multiple Analyser, DNA View Files, DNA Control Center, Standard CTI Allow Control of Phones supporting Connected Xfer and conf, Geolocation, Geolocation Filter, Geolocation Policy, Phone Migration, CTI Control of Phones supporting Rollover Mode, Feature Control Policy, EMCC Feature Config, EMCC Intercluster Service Profile, EMCC Remote Cluster, Blocked Learned Patterns, SAF Security Profile, SAF Forwarder, CCD Advertising Service Profile, Hosted DN Group, Hosted DN Patterns, Bulk EMCC Template, Bulk EMCC Insert/Update, Bulk EMCC Delete, CCD Requesting Service Profile, External Call Control Profile, Announcement, Blocked Learned Pattern, VPN Profile, VPN Group web pages, VPN Gateway web pages, VPN Feature Config, Certificate web pages, LDAP Custom Filter Configuration, IME Server Web Pages, IME Service Web Pages, IME Trusted Element Web Pages, IME Trusted Group Web Pages, IME Enrolled Pattern Web Pages, IME Enrolled Group Web Pages, IME Learned Route Web Pages, Fallback Profile Web Pages, IME Exclusion Group Web Pages, Transformation Profile Web Pages, Bulk Insert Vipr Route Filter Element, Bulk Delete Vipr Route Filter Element, Bulk Insert Vipr Route Filter Group, Bulk Delete Vipr Route Filter Group, Bulk Insert Vipr Enrolled DID Pattern Group, Bulk Delete Vipr Enrolled DID Pattern Group, Bulk Insert Vipr Exclusion Number Group, Bulk Delete Vipr Exclusion Number Group, Bulk Insert Fallback Profile, Bulk Delete Fallback Profile, IME Transformation Web Pages, IME Feature Configuration Page, FallBack Feature Configuration Page, IME Firewall Web Pages, IME UCM External Address List Web Page, IME Exclusion Number Web Pages, Bulk Remote Destination Profile Create File Format, Call Control Discovery Partition, SOAP Diagnostic Portal Database Service, SOAP Call Record APIs, CCD Feature Configuration, Search Documentation, Search Documentation, Bulk User CAPF Insert, Bulk User CAPF Delete, Bulk User CAPF Export, SIP Normalization Script, Bulk Insert Mobility Profiles, Bulk Delete Mobility Profiles, Bulk Export Mobility Profiles, Mobility Enterprise Feature Access, Handoff Mobility Setup, Mobility Profile, Bulk Update UDP, Called Party Tracing, Called Party Tracing, Call Home Configuration web page, EMCC Remote Cluster Service Override, Audio Codec Preference List, Service Profile web pages, UC Service web pages, SOAP Performance Informations APIs 2, E911 Messages, ILS web pages, ILS Cluster View page, Phone Button Layout web pages, Common Device Template web pages, Feature Group Template web pages, Page Layout Preference web pages, Locations Topology web page, Locations Assertions Detail web page, Locations Effective Path web page, Locations Discrepancy web page, Location Bandwidth Manager Group, Location Bandwidth Manager Hub Group, SOAP Realtime Informations and Control Center APIs 2, SOAP CDR on Demand APIs 2, SOAP Log Collection APIs 2, SOAP Control Center APIs 2, Imported Directory URI Catalog, Bulk Insert Imported Directory URI, Intercluster Directory URI Configuration, Imported Directory URI, Download Local Directory URI, Locations Disconnected Groups web page, Essential License User Usage Report, Essential License Device Usage Report, Basic License User Usage Report, Basic License Device Usage Report, Enhanced License User Usage Report, Enhanced License Device Usage Report, Advanced License User Usage Report, Advanced License Device Usage Report, Premium License User Usage Report, Premium License Device Usage Report, Professional License User Usage Report, Telepresence License Device Usage Report, Telepresence License User Usage Report, License User View Details, License User Usage Report, License Device Usage Report, Presence License User Usage Report, All License User Usage Report, ALL License Device Usage Report
type Anon1050 string

// May be one of read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, enabled, allow modification, allow retrieval, allow control of all devices, read, update, read, update, read, update, read, update, read, update, read, update, read, update, Allow to use API, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, allow, enable CTI security, enable CTI SRTP key distribution, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, allow monitoring, allow recording, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, Allow Control, update, read, update, read, update, read, update, read, Allow Control, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update, read, update
type Anon1051 string

// May be one of Read, Create, Update, Delete, Head, Options
type Anon1052 string

// May be one of Default, Highest
type Anon1053 string

// May be one of Use System Default, Disable, Flash Only, Ring Once, Ring, Beep Only
type Anon1054 string

// May be one of Default
type Anon1055 string

// May be one of Not Applicable, Phone, Gateway, H.323, CTI, Voice Mail, MediaResources, Hunt List, SIP
type Anon1056 string

// May be one of Unknown, Registered, Unregistered, Rejected, Partial Registered
type Anon1057 string

// May be one of Call Control Discovery Advertising Service, Call Control Discovery Requesting Service
type Anon1058 string

// May be one of Secure Web (HTTPS), Email
type Anon1059 string

type Anon106 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

// May be one of TIAS and AS, TIAS only, AS only, CT only
type Anon1060 string

// May be one of 711ulaw, 711alaw, G729/G729a, G729b/G729ab
type Anon1061 string

// May be one of Deliver DN only in connected party, Deliver URI only in connected party, if available, Deliver URI and DN in connected party, if available
type Anon1062 string

// May be one of Disabled, Send PRACK if 1xx Contains SDP, Send PRACK for all 1xx Messages
type Anon1063 string

// May be one of Never, Contact Header, Call-Info Header with purpose=x-cisco-origIP
type Anon1064 string

// May be one of Message Rollback Only, Disable Script, Reset Script, Reset Trunk / Restart Device
type Anon1065 string

// May be one of When using both sRTP and TLS, When using sRTP Only
type Anon1066 string

// May be one of Phone 1, Line 1, Phone 2, Line 2, Phone 3, Line 3, Phone 4, Line 4
type Anon1067 string

// May be one of Disable, Use Default Gateway, Legacy Configuration, User Specific
type Anon1068 string

// May be one of HOUR, DAY, WEEK, MONTH
type Anon1069 string

type Anon107 struct {
	ResourcePriorityNamespaceList []LResourcePriorityNamespaceList `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceList,omitempty"`
}

// May be one of SIP Trunk, Phone, VM Port, Conference Bridge, CUMA Server, Telepresence MCU, Model Independent
type Anon1070 string

// May be one of Authenticated, Encrypted and Authenticated
type Anon1071 string

// May be one of Cisco CallManager, Cisco Tftp, Cisco Messaging Interface, Cisco IP Voice Media Streaming App, Cisco CTIManager, Cisco RIS Data Collector, Cisco Extension Mobility, Cisco Database Layer Monitor, Enterprise Wide, Cisco IP Manager Assistant, Cisco Extended Functions, Cisco Serviceability Reporter, Cisco CTL Provider, Cisco WebDialer Web Service, Cisco Dialed Number Analyzer, Cisco CDR Repository Manager, Cisco Certificate Authority Proxy Function, Cisco CDR Agent, Cisco SOAP - CDRonDemand Service, Cisco CAR Scheduler, Cisco CAR Web Service, Cisco AMC Service, Cisco Log Partition Monitoring Tool, Cisco CallManager SNMP Service, Cisco DirSync, Cisco AXL Web Service, Cisco DRF Master, Cisco DRF Local, Cisco CallManager Cisco IP Phone Services, Cisco CCMAdmin Web Service, Cisco CCMRealm Web Service, Cisco CCMService Web Service, Cisco SOAP Web Service, Cisco RTMT Web Service, Cisco CCM PD Web Service, Cisco CCM DBL Web Library, Cisco CCM NCS Web Library, Cisco Bulk Provisioning Service, Cisco Extension Mobility Application, Cisco License Manager, Cisco Role-based Security, Cisco Trace Collection Service, Cisco Security Agent, Cisco Trust Verification Service, Cisco DHCP Monitor Service, Cisco TAPS Service, Cisco Tomcat, Cisco Unified OS Admin Web Service, Cisco GRT Communication Web Service, Cisco Unified Reporting Web Service, Cisco RisBean Library, Cisco SOAPMessage Service, Platform Administrative Web Service, Cisco Change Credential Application, Cisco CCMUser Web Service, Cisco Audit Event Service, SOAP - Diagnostic Portal Database Service, Cisco UXL Web Service, Cisco Common User Interface, Cisco User Data Services, Cisco External Call Control Service, Cisco E911 Service, Cisco Location Bandwidth Manager, Cisco Dialed Number Analyzer Server, Cisco Unified Mobile Voice Access Service, Cisco Intercluster Lookup Service
type Anon1072 string

// May be one of Service, Servlet
type Anon1073 string

// May be one of CM Services, CTI Services, CDR Services, Database and Admin Services, Performance and Monitoring Services, Security Services, Directory Services, Backup and Restore Services, System Services, Soap Services, Voice Quality Reporter Services, Platform Services
type Anon1074 string

// May be one of none, ordered
type Anon1075 string

// May be one of Disable, -48dbm0, -45dbm0, -42dbm0, -39dbm0, -36dbm0, -33dbm0, -30dbm0
type Anon1076 string

// May be one of Default, PAI, PPI
type Anon1077 string

// May be one of Default, None, ID, ID Critical
type Anon1078 string

// May be one of Central, TeleWorkers, Branch
type Anon1079 string

type Anon108 struct {
	Member []XDevicePoolDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Default
type Anon1080 string

// May be one of Undefined, Redial, NewCall, Hold, Transfer, Forward All, Forward Busy, Forward No Answer, Backward, End Call, Resume, Answer, Info, Conference, Park, Join, Meet Me, Pick Up, Group Pick Up, Remove Last Conference Party, Call Back, Barge, Quality Report Tool, Toggle Malicious Call Trace, Direct Transfer, Select, Conference List, Immediate Divert, Conference Barge, Video Mode Command, Other Pickup, HLog, Reject, Mobility, Redirect, Intercept, Toggle Watch On/Off, Transfer to Voice Mail, Toggle Do Not Disturb, Toggle Send All Calls, Abbreviated Dial, Cancel Call Waiting, Record
type Anon1081 string

// May be one of Not Set, Immediate, Wink Start Feature Group B, Delay Dial, Wink Start Feature Group D
type Anon1082 string

// May be one of Off, On, Default
type Anon1083 string

// May be one of Default, CTI Port, H323 Phone, Default, MGCP Stn, MGCP Trunk, H323 GW, Conference Bridge, Conference Bridge WS-X6608, Cisco IOS Conference Bridge (HDV2), Cisco Conference Bridge (WS-SVC-CMM), Cisco Media Server (WS-SVC-CMM-MS), Cisco Video Conference Bridge (IPVC-35xx), Music On Hold, Device Pilot, CTI Route Point, Voice Mail Port, Route List, Load Simulator, Media Termination Point, Media Termination Point Hardware, Cisco IOS Software Media Termination Point (HDV2), Cisco IOS Media Termination Point (HDV2), Cisco Media Termination Point (WS-SVC-CMM), GateKeeper, Trunk, SIP Trunk, Tone Announcement Player, Invalid, Cisco IOS Heterogeneous Video Conference Bridge, Cisco IOS Guaranteed Audio Video Conference Bridge, Cisco IOS Homogeneous Video Conference Bridge, Cisco TelePresence MCU
type Anon1084 string

// May be one of None, System Block, System Abbreviate, Country Dial Plan, Emergency, User Translation, Feature Block
type Anon1085 string

// May be one of IP Phone Services, Is legacy device, HTTP Server Enabled, Music On Hold, Ring Setting on This Line, Call Waiting, Auto Answer, Shared Line Appearance, Extension Mobility, Show Speeddial Labels, Show Forward on Failure, Has firmware load, Has phone templates, Media Resource Managed, CTI controlled, Phone template is User Modifiable, Localization, Has softkey template, Supports different port types for FXO module, Phone attached to a Gateway (Like Chalice), Automated Alternate Routing (AAR), Network Hold, User Hold, Monitor, Record, Auto Registration, Use Generic Icon, MWL Policy, Line Text Label, Multiple Call Display, Abbreviated Dial, Built In Bridge, Malicious Call Identification, Call Precedence (for MLPP), Call Pre-emption (for MLPP), Status Report (Busy Device Indicator), Video, Security Authentication, Security Encryption, Online User Guide (HTML or PDF), Gateway supports summit MTP, Expansion Module, Privacy, IPMA, V150 Modem Relay Capable, Hospitality, Max Call Limit, Manufacture Installed Certificate(MIC), Perfer alternate script, Key Authority, File encrypt, Secure RTP, BLF Speed dial, URI Dialing, Digest authentication support, Support for server-side auth TLS (basic), Support for Mutual-auth TLS, Support CAPF, Require DTMF Reception, RFC 2833 Disabled, BLF Speed Dial with URI, Secure Shell Support, SIP Dial-Plan, Specify Types of TFTP Config Files, Presence Subscription, SIP TCP Support, Feature Safe on Phone Template, Size Safe on Phone Template, Hold Reversion, Intercom, Do Not Disturb, Audible Message Waiting Indicator, Digest Password Caching, Mobility, Dual-Mode, Automatic Outbound Call Rollover, Join Across Lines, Single Button Barge, Phone Personalization, Secure Tone, 7915 12-Button Line Expansion Module, 7915 24-Button Line Expansion Module, 7916 12-Button Line Expansion Module, 7916 24-Button Line Expansion Module, Expansion Module Supports Matrix, Enhanced Message Waiting Indicator, Extension Mobility Cross Cluster, Apply Configuration, Assisted Directed Call Park, Multiple Level Vendor Config, Log Missed Calls Option, Hotline, Route Class Signaling, CKEM 36-Button Line Expansion Module, Connected Transfer and Conference, Inbound Caller ID on FXO Port, Security By Default, Restrict Maximum Call and Busy Trigger, Daylight Savings Time Format, Virtual Private Network Client, G.Clear, Feature Control Policy, Trusted Device, Dual Banked Firmware, Mandatory Join Across Lines (No Configuration), Maximum AuthName Length, Send Call to Mobile Support, VKEM 36-Button Line Expansion Module, IMS-integrated Mobile Device, Seamless TCP Reconnect After Connections Drop or Roaming, BFCP Support, SIP Identity Blend, Require Off Premise Location, iX Channel Support, Immersive Video Support for TelePresence Devices, Crypto Session Param, Early Offer Support, UC Service Profile Support, Call Bubble Collapsing
type Anon1086 string

// May be one of Security, System, Application
type Anon1087 string

// May be one of VoiceMail
type Anon1088 string

// May be one of Not Running, Idle, In Progress, Completed
type Anon1089 string

type Anon109 struct {
	Member []XDevicePoolDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Disabled, Limited, Enabled
type Anon1090 string

// May be one of -- Not Selected --, Terminal, Gateway
type Anon1091 string

// May be one of No Office Hours, 00:00, 00:15, 00:30, 00:45, 01:00, 01:15, 01:30, 01:45, 02:00, 02:15, 02:30, 02:45, 03:00, 03:15, 03:30, 03:45, 04:00, 04:15, 04:30, 04:45, 05:00, 05:15, 05:30, 05:45, 06:00, 06:15, 06:30, 06:45, 07:00, 07:15, 07:30, 07:45, 08:00, 08:15, 08:30, 08:45, 09:00, 09:15, 09:30, 09:45, 10:00, 10:15, 10:30, 10:45, 11:00, 11:15, 11:30, 11:45, 12:00, 12:15, 12:30, 12:45, 13:00, 13:15, 13:30, 13:45, 14:00, 14:15, 14:30, 14:45, 15:00, 15:15, 15:30, 15:45, 16:00, 16:15, 16:30, 16:45, 17:00, 17:15, 17:30, 17:45, 18:00, 18:15, 18:30, 18:45, 19:00, 19:15, 19:30, 19:45, 20:00, 20:15, 20:30, 20:45, 21:00, 21:15, 21:30, 21:45, 22:00, 22:15, 22:30, 22:45, 23:00, 23:15, 23:30, 23:45, 24:00
type Anon1092 string

// May be one of Regular, Holiday or Vacation
type Anon1093 string

// May be one of Error, Special, State Transistion, Significant, Entry_exit, Arbitrary, Detailed, Error, Special, State Transistion, Significant, Arbitrary, Detailed, Fatal, Error, Warning, Informational, Detailed
type Anon1094 string

// May be one of TraceLevelGroup0, TraceLevelGroup1, TraceLevelGroup2
type Anon1095 string

// May be one of TCP, UDP, TLS, TCP+UDP
type Anon1096 string

// May be one of Ground Start, Loop Start, DID, POTS, EANDM
type Anon1097 string

// May be one of Inbound, Outbound, Bothways
type Anon1098 string

// May be one of AAL(A), AAL(D), A/TT, DAL, ICS, ISD/TT, IST, ONS, OPS, S/ATT, S/DTT, A/TO
type Anon1099 string

type Anon11 struct {
	TimeSchedule []LTimeSchedule `xml:"http://www.cisco.com/AXL/API/9.0 timeSchedule,omitempty"`
}

type Anon110 struct {
	Member []XDevicePoolDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Minus32db, Minus31db, Minus30db, Minus29db, Minus28db, Minus27db, Minus26db, Minus25db, Minus24db, Minus23db, Minus22db, Minus21db, Minus20db, Minus19db, Minus18db, Minus17db, Minus16db, Minus15db, Minus14db, Minus13db, Minus12db, Minus11db, Minus10db, Minus9db, Minus8db, Minus7db, Minus6db, Minus5db, Minus4db, Minus3db, Minus2db, Minus1db, NoDbPadding, Plus1db, Plus2db, Plus3db, Plus4db, Plus5db, Plus6db, Plus7db, Plus8db, Plus9db, Plus10db, Plus11db, Plus12db, Plus13db, Plus14db, Plus15db, Plus16db, Plus17db, Plus18db, Plus19db, Plus20db, Plus21db, Plus22db, Plus23db, Plus24db, Plus25db, Plus26db, Plus27db, Plus28db, Plus29db, Plus30db, Plus31db, Plus32db
type Anon1100 string

// May be one of Bottom Up, Top Down
type Anon1101 string

// May be one of None(Default), Call Control Discovery, Extension Mobility Cross Cluster, Cisco Intercompany Media Engine, IP Multimedia Subsystem Service Control (ISC)
type Anon1102 string

// May be one of SAST, CallManager, CallManagerTFTP, TFTP, CAPF, SRST, Firewall, Application Server, Certificate Authority, Authentication and Authorization, Signaling and Call Control, Provisioning Service, Data Service, Network Element, Virtual Private Network, Serviceability, Unknown
type Anon1103 string

// May be one of None, QSIG
type Anon1104 string

// May be one of Default
type Anon1105 string

// May be one of Unity, Unity Connection, Exchange, MeetingPlace Classic, MeetingPlace Express, WebEx (Conferencing), Directory, Unified CM (IM and Presence), WebEx (IM and Presence), CTI, Enhanced Directory
type Anon1106 string

// May be one of Unity, Unity Connection, IM and Presence
type Anon1107 string

// May be one of Unity using HTTP, Unity using HTTPS, Unity Connection using HTTP, Unity Connection using HTTPS, Exchange using TCP, Exchange using UDP, Exchange using SSL, Exchange using TLS, MeetingPlace Classic using HTTP, MeetingPlace Classic using HTTPS, MeetingPlace Express using HTTP, MeetingPlace Express using HTTPS, WebEx (Conferencing) using HTTP, WebEx (Conferencing) using HTTPS, Directory using TCP, Directory using UDP, Directory using TLS, Unified CM (IM and Presence) (No Protocol), WebEx (IM and Presence) using XMPP, CTI using TCP, Ldap Directory using TCP, Ldap Directory using SSL
type Anon1108 string

// May be one of Voicemail, Visual Voicemail, Conferencing, Directory, IM and Presence, CTI
type Anon1109 string

type Anon111 struct {
	Member []XDevicePoolDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

// May be one of Always treat all dial strings as URI addresses, Phone number consists of characters 0-9, A-D, *, #, and + (others treated as URI addresses), Phone number consists of characters 0-9, *, #, and + (others treated as URI addresses)
type Anon1110 string

// May be one of Park, Call Pickup, Barge, Divert
type Anon1111 string

// May be one of ENDUSER, DEPARTMENT
type Anon1112 string

// May be one of Send Unified CM Version Information as User-Agent Header, Pass Through Received Information as Contact Header Parameters, Pass Through Received Information as User-Agent and Server Header
type Anon1113 string

// May be one of Cti Control In, Cti Control Out, Digest In, Digest Out, Profile Available, Mobility Primary Device, Cti Control Profile In
type Anon1114 string

// May be one of English United States
type Anon1115 string

// May be one of Select Correct Phone for User, Select Correct Line for User, Set Description, Reset Password, Set Click to Call, Set Speed Dial, Subscribe to Phone Service, No Service Assigned, Set Alternate Number
type Anon1116 string

// May be one of Information Message, Setup Message, Feature Message
type Anon1117 string

// May be one of Real User, Template User, Common Device EndUser Token
type Anon1118 string

// May be one of No Filtering, Remove MER V.150, Remove Pre-MER V.150, Use Default Filter
type Anon1119 string

type Anon112 struct {
	DeviceMobility RDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobility"`
}

// May be one of Use System Default, Timer Control, User Control
type Anon1120 string

// May be one of User and Password, Password Only, Certificate
type Anon1121 string

// May be one of Immersive, Desktop, Mixed
type Anon1122 string

// May be one of Prefix, Domain
type Anon1123 string

// May be one of Common Device Template
type Anon1124 string

// May be one of Expanded, Collapsed, Hidden
type Anon1125 string

// May be one of Required and Frequently Entered Settings, Phone Buttons Configuration, Device Settings, Device Routing Settings, Phone Settings, Protocol Settings, IP Phone Services Subscription, Security Settings, Service Configuration Settings, Troubleshooting Settings, Locale Settings, Multilevel Precedence Preemption (MLPP) Settings, Do Not Disturb (DND) Settings, Automatic Alternate Routing (AAR) Settings, Busy Lamp Field (BLF) Settings, Music on Hold Settings, Location Settings
type Anon1126 string

// May be one of iso-8859-1, iso-8859-2, UTF-8 Unicode, UTF-7 Unicode, windows-1251, Shift_JIS, windows-1253, GB2312, BIG5, KSC5061, UTF-8, windows-1254, windows-1255, windows-1256, iso-8859-6, iso-8859-8-l, windows-874, windows-1258, windows-1257, iso-8859-4
type Anon1127 string

// May be one of Bit2, F-Bit
type Anon1128 string

// May be one of B8ZS, AMI, HDB3
type Anon1129 string

type Anon113 struct {
	Name         string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SubNet       string `xml:"http://www.cisco.com/AXL/API/9.0 subNet,omitempty"`
	SubNetMaskSz string `xml:"http://www.cisco.com/AXL/API/9.0 subNetMaskSz,omitempty"`
}

// May be one of Local, CallManger
type Anon1130 string

// May be one of User, Admin
type Anon1131 string

// May be one of 6 dB below nominal, 3 dB below nominal, Nominal, 3 dB above nominal, 6 dB above nominal
type Anon1132 string

// May be one of None, Signal only, Dtmf only, Both
type Anon1133 string

// May be one of Auto, Full 100, Half 100, Full 10, Half 10
type Anon1134 string

// May be one of Unicast, Multicast, Anycast, Directed Broadcast
type Anon1135 string

// May be one of Off, On
type Anon1136 string

// May be one of None, Phone, IP
type Anon1137 string

type Anon1138 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon1139 struct {
	AppUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 appUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon114 struct {
	DeviceMobility []LDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobility,omitempty"`
}

type Anon1140 struct {
	AppUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 appUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon1141 struct {
	EndUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 endUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon1142 struct {
	EndUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 endUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon115 struct {
	CmcInfo RCmcInfo `xml:"http://www.cisco.com/AXL/API/9.0 cmcInfo"`
}

type Anon116 struct {
	Code string `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
}

type Anon117 struct {
	CmcInfo []LCmcInfo `xml:"http://www.cisco.com/AXL/API/9.0 cmcInfo,omitempty"`
}

type Anon118 struct {
	CredentialPolicy RCredentialPolicy `xml:"http://www.cisco.com/AXL/API/9.0 credentialPolicy"`
}

type Anon119 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon12 struct {
	Member XTODAccessMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon120 struct {
	CredentialPolicy []LCredentialPolicy `xml:"http://www.cisco.com/AXL/API/9.0 credentialPolicy,omitempty"`
}

type Anon121 struct {
	FacInfo RFacInfo `xml:"http://www.cisco.com/AXL/API/9.0 facInfo"`
}

type Anon122 struct {
	Name               string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Code               string `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	AuthorizationLevel string `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
}

type Anon123 struct {
	FacInfo []LFacInfo `xml:"http://www.cisco.com/AXL/API/9.0 facInfo,omitempty"`
}

type Anon124 struct {
	Member []XHuntListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon125 struct {
	Member []XHuntListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon126 struct {
	Member []XHuntListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon127 struct {
	Member []XHuntListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon128 struct {
	HuntList RHuntList `xml:"http://www.cisco.com/AXL/API/9.0 huntList"`
}

type Anon129 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon13 struct {
	Member XTODAccessMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon130 struct {
	HuntList []LHuntList `xml:"http://www.cisco.com/AXL/API/9.0 huntList,omitempty"`
}

type Anon131 struct {
	IvrUserLocale RIvrUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 ivrUserLocale"`
}

type Anon132 struct {
	UserLocale string `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
}

type Anon133 struct {
	IvrUserLocale []LIvrUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 ivrUserLocale,omitempty"`
}

type Anon134 struct {
	Member []XLineGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon135 struct {
	Member []XLineGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon136 struct {
	Member []XLineGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon137 struct {
	Member []XLineGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon138 struct {
	LineGroup RLineGroup `xml:"http://www.cisco.com/AXL/API/9.0 lineGroup"`
}

type Anon139 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon14 struct {
	TodAccess RTodAccess `xml:"http://www.cisco.com/AXL/API/9.0 todAccess"`
}

type Anon140 struct {
	LineGroup []LLineGroup `xml:"http://www.cisco.com/AXL/API/9.0 lineGroup,omitempty"`
}

type Anon141 struct {
	RecordingProfile RRecordingProfile `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfile"`
}

type Anon142 struct {
	Name                string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RecordingCssName    string `xml:"http://www.cisco.com/AXL/API/9.0 recordingCssName,omitempty"`
	RecorderDestination string `xml:"http://www.cisco.com/AXL/API/9.0 recorderDestination,omitempty"`
}

type Anon143 struct {
	RecordingProfile []LRecordingProfile `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfile,omitempty"`
}

type Anon144 struct {
	Member []XRouteFilterMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon145 struct {
	Member []XRouteFilterMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon146 struct {
	Member []XRouteFilterMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon147 struct {
	Member []XRouteFilterMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon148 struct {
	RouteFilter RRouteFilter `xml:"http://www.cisco.com/AXL/API/9.0 routeFilter"`
}

type Anon149 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon15 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	OwnerIdName string `xml:"http://www.cisco.com/AXL/API/9.0 ownerIdName,omitempty"`
}

type Anon150 struct {
	RouteFilter []LRouteFilter `xml:"http://www.cisco.com/AXL/API/9.0 routeFilter,omitempty"`
}

type Anon151 struct {
	Member []XCallManagerMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon152 struct {
	Member []XCallManagerMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon153 struct {
	Member []XCallManagerMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon154 struct {
	Member []XCallManagerMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon155 struct {
	CallManagerGroup RCallManagerGroup `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroup"`
}

type Anon156 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon157 struct {
	CallManagerGroup []LCallManagerGroup `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroup,omitempty"`
}

type Anon158 struct {
	Member []XUserGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon159 struct {
	Member []XUserGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon16 struct {
	TodAccess []LTodAccess `xml:"http://www.cisco.com/AXL/API/9.0 todAccess,omitempty"`
}

type Anon160 struct {
	Member []XUserGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon161 struct {
	Member []XUserGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon162 struct {
	UserRole []XUserGroupRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon163 struct {
	UserGroup RUserGroup `xml:"http://www.cisco.com/AXL/API/9.0 userGroup"`
}

type Anon164 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon165 struct {
	UserGroup []LUserGroup `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon166 struct {
	DialPlan RDialPlan `xml:"http://www.cisco.com/AXL/API/9.0 dialPlan"`
}

type Anon167 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon168 struct {
	DialPlan []LDialPlan `xml:"http://www.cisco.com/AXL/API/9.0 dialPlan,omitempty"`
}

type Anon169 struct {
	DialPlanTag RDialPlanTag `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTag"`
}

type Anon17 struct {
	VoiceMailPilot RVoiceMailPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot"`
}

type Anon170 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon171 struct {
	DialPlanTag []LDialPlanTag `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTag,omitempty"`
}

type Anon172 struct {
	Member []XDigitDiscardInstructionMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon173 struct {
	Ddi RDdi `xml:"http://www.cisco.com/AXL/API/9.0 ddi"`
}

type Anon174 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon175 struct {
	Ddi []LDdi `xml:"http://www.cisco.com/AXL/API/9.0 ddi,omitempty"`
}

type Anon176 struct {
	MobileSmartClientProfile RMobileSmartClientProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfile"`
}

type Anon177 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon178 struct {
	MobileSmartClientProfile []LMobileSmartClientProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfile,omitempty"`
}

type Anon179 struct {
	ProcessNodeService RProcessNodeService `xml:"http://www.cisco.com/AXL/API/9.0 processNodeService"`
}

type Anon18 struct {
	Dirn        string `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CssName     string `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
}

type Anon180 struct {
	ProcessNodeName string `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
}

type Anon181 struct {
	ProcessNodeService []LProcessNodeService `xml:"http://www.cisco.com/AXL/API/9.0 processNodeService,omitempty"`
}

type Anon182 struct {
	MohAudioSource RMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 mohAudioSource"`
}

type Anon183 struct {
	SourceId string `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon184 struct {
	MohAudioSource []LMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 mohAudioSource,omitempty"`
}

type Anon185 struct {
	DhcpServer RDhcpServer `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServer"`
}

type Anon186 struct {
	ProcessNodeName       string `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	PrimaryDnsIpAddress   string `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress string `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	DomainName            string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
}

type Anon187 struct {
	DhcpServer []LDhcpServer `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServer,omitempty"`
}

type Anon188 struct {
	DhcpSubnet RDhcpSubnet `xml:"http://www.cisco.com/AXL/API/9.0 dhcpSubnet"`
}

type Anon189 struct {
	DhcpServerName          string `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName,omitempty"`
	SubnetIpAddress         string `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress,omitempty"`
	PrimaryStartIpAddress   string `xml:"http://www.cisco.com/AXL/API/9.0 primaryStartIpAddress,omitempty"`
	PrimaryEndIpAddress     string `xml:"http://www.cisco.com/AXL/API/9.0 primaryEndIpAddress,omitempty"`
	SecondaryStartIpAddress string `xml:"http://www.cisco.com/AXL/API/9.0 secondaryStartIpAddress,omitempty"`
	SecondaryEndIpAddress   string `xml:"http://www.cisco.com/AXL/API/9.0 secondaryEndIpAddress,omitempty"`
}

type Anon19 struct {
	VoiceMailPilot []LVoiceMailPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot,omitempty"`
}

type Anon190 struct {
	DhcpSubnet []LDhcpSubnet `xml:"http://www.cisco.com/AXL/API/9.0 dhcpSubnet,omitempty"`
}

type Anon191 struct {
	CallPark RCallPark `xml:"http://www.cisco.com/AXL/API/9.0 callPark"`
}

type Anon192 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallManagerName    string `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
}

type Anon193 struct {
	CallPark []LCallPark `xml:"http://www.cisco.com/AXL/API/9.0 callPark,omitempty"`
}

type Anon194 struct {
	DirectedCallPark RDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 directedCallPark"`
}

type Anon195 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReversionPattern   string `xml:"http://www.cisco.com/AXL/API/9.0 reversionPattern,omitempty"`
}

type Anon196 struct {
	DirectedCallPark []LDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 directedCallPark,omitempty"`
}

type Anon197 struct {
	MeetMe RMeetMe `xml:"http://www.cisco.com/AXL/API/9.0 meetMe"`
}

type Anon198 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon199 struct {
	MeetMe []LMeetMe `xml:"http://www.cisco.com/AXL/API/9.0 meetMe,omitempty"`
}

type Anon2 struct {
	SipTrunkSecurityProfile RSipTrunkSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkSecurityProfile"`
}

type Anon20 struct {
	ProcessNode RProcessNode `xml:"http://www.cisco.com/AXL/API/9.0 processNode"`
}

type Anon200 struct {
	Locale []XMobileVoiceMember `xml:"http://www.cisco.com/AXL/API/9.0 locale"`
}

type Anon201 struct {
	MobileVoiceAccess RMobileVoiceAccess `xml:"http://www.cisco.com/AXL/API/9.0 mobileVoiceAccess"`
}

type Anon202 struct {
	Member []XRouteListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon203 struct {
	Member []XRouteListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon204 struct {
	Member []XRouteListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon205 struct {
	Member []XRouteListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon206 struct {
	RouteList RRouteList `xml:"http://www.cisco.com/AXL/API/9.0 routeList"`
}

type Anon207 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon208 struct {
	RouteList []LRouteList `xml:"http://www.cisco.com/AXL/API/9.0 routeList,omitempty"`
}

type Anon209 struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type Anon21 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon210 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon211 struct {
	UserGroup []Anon212 `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon212 struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	UserRoles Anon213 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type Anon213 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon214 struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
}

type Anon215 struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Anon216 struct {
	PinCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pinCredPolicyName,omitempty"`
	PinCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserCantChange,omitempty"`
	PinCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserMustChange,omitempty"`
	PinCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredDoesNotExpire,omitempty"`
	PinCredTimeChanged           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeChanged,omitempty"`
	PinCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeAdminLockout,omitempty"`
	PinCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredLockedByAdministrator,omitempty"`
}

type Anon217 struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
}

type Anon218 struct {
	CustomUserField []XUserCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
}

type Anon219 struct {
	LineAppearanceAssociationForPresence []XLineAppearanceAssociationForPresence `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresence,omitempty"`
}

type Anon22 struct {
	ProcessNode []LProcessNode `xml:"http://www.cisco.com/AXL/API/9.0 processNode,omitempty"`
}

type Anon220 struct {
	User RUser `xml:"http://www.cisco.com/AXL/API/9.0 user"`
}

type Anon221 struct {
	FirstName  string `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	LastName   string `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	Userid     string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Department string `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
}

type Anon222 struct {
	User []LUser `xml:"http://www.cisco.com/AXL/API/9.0 user,omitempty"`
}

type Anon223 struct {
	LicenseCapabilities RLicenseCapabilities `xml:"http://www.cisco.com/AXL/API/9.0 licenseCapabilities"`
}

type Anon224 struct {
	Userid string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
}

type Anon225 struct {
	LicenseCapabilities []LLicenseCapabilities `xml:"http://www.cisco.com/AXL/API/9.0 licenseCapabilities,omitempty"`
}

type Anon226 struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Anon227 struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type Anon228 struct {
	UserGroup []Anon229 `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon229 struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	UserRoles Anon230 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type Anon23 struct {
	Member []XCallerFilterListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon230 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon231 struct {
	DeviceProfile []string `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile,omitempty"`
}

type Anon232 struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Anon233 struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type Anon234 struct {
	UserGroup []Anon235 `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon235 struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	UserRoles Anon236 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type Anon236 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon237 struct {
	DeviceProfile []string `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile,omitempty"`
}

type Anon238 struct {
	AppUser RAppUser `xml:"http://www.cisco.com/AXL/API/9.0 appUser"`
}

type Anon239 struct {
	Userid string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
}

type Anon24 struct {
	Member []XCallerFilterListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon240 struct {
	AppUser []LAppUser `xml:"http://www.cisco.com/AXL/API/9.0 appUser,omitempty"`
}

type Anon241 struct {
	SipRealm RSipRealm `xml:"http://www.cisco.com/AXL/API/9.0 sipRealm"`
}

type Anon242 struct {
	Realm  string `xml:"http://www.cisco.com/AXL/API/9.0 realm,omitempty"`
	Userid string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
}

type Anon243 struct {
	SipRealm []LSipRealm `xml:"http://www.cisco.com/AXL/API/9.0 sipRealm,omitempty"`
}

type Anon244 struct {
	PhoneNtp RPhoneNtp `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtp"`
}

type Anon245 struct {
	IpAddress   string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon246 struct {
	PhoneNtp []LPhoneNtp `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtp,omitempty"`
}

type Anon247 struct {
	SelectedPhoneNtpReference []XDateTimeGroupNtpReference `xml:"http://www.cisco.com/AXL/API/9.0 selectedPhoneNtpReference"`
}

type Anon248 struct {
	DateTimeGroup RDateTimeGroup `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeGroup"`
}

type Anon249 struct {
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	TimeZone string `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
}

type Anon25 struct {
	Member []XCallerFilterListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon250 struct {
	DateTimeGroup []LDateTimeGroup `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeGroup,omitempty"`
}

type Anon251 struct {
	PresenceGroup []XPresenceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup,omitempty"`
}

type Anon252 struct {
	PresenceGroup RPresenceGroup `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup"`
}

type Anon253 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon254 struct {
	PresenceGroup []LPresenceGroup `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup,omitempty"`
}

type Anon255 struct {
	GeoLocation RGeoLocation `xml:"http://www.cisco.com/AXL/API/9.0 geoLocation"`
}

type Anon256 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon257 struct {
	GeoLocation []LGeoLocation `xml:"http://www.cisco.com/AXL/API/9.0 geoLocation,omitempty"`
}

type Anon258 struct {
	Srst RSrst `xml:"http://www.cisco.com/AXL/API/9.0 srst"`
}

type Anon259 struct {
	Name      string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IpAddress string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
}

type Anon26 struct {
	Member []XCallerFilterListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon260 struct {
	Srst []LSrst `xml:"http://www.cisco.com/AXL/API/9.0 srst,omitempty"`
}

type Anon261 struct {
	MlppDomain RMlppDomain `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomain"`
}

type Anon262 struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
}

type Anon263 struct {
	MlppDomain []LMlppDomain `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomain,omitempty"`
}

type Anon264 struct {
	CumaServerSecurityProfile RCumaServerSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 cumaServerSecurityProfile"`
}

type Anon265 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon266 struct {
	CumaServerSecurityProfile []LCumaServerSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 cumaServerSecurityProfile,omitempty"`
}

type Anon267 struct {
	SelectedAppUser []Anon268 `xml:"http://www.cisco.com/AXL/API/9.0 selectedAppUser"`
}

type Anon268 struct {
	AppUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 appUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon269 struct {
	SelectedEndUser []Anon270 `xml:"http://www.cisco.com/AXL/API/9.0 selectedEndUser"`
}

type Anon27 struct {
	CallerFilterList RCallerFilterList `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterList"`
}

type Anon270 struct {
	EndUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 endUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon271 struct {
	ApplicationServer RApplicationServer `xml:"http://www.cisco.com/AXL/API/9.0 applicationServer"`
}

type Anon272 struct {
	Name      string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IpAddress string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
}

type Anon273 struct {
	ApplicationServer []LApplicationServer `xml:"http://www.cisco.com/AXL/API/9.0 applicationServer,omitempty"`
}

type Anon274 struct {
	ApplicationUserCapfProfile RApplicationUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 applicationUserCapfProfile"`
}

type Anon275 struct {
	ApplicationUser string `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	InstanceId      string `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
}

type Anon276 struct {
	ApplicationUserCapfProfile []LApplicationUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 applicationUserCapfProfile,omitempty"`
}

type Anon277 struct {
	EndUserCapfProfile REndUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 endUserCapfProfile"`
}

type Anon278 struct {
	EndUserId  string `xml:"http://www.cisco.com/AXL/API/9.0 endUserId,omitempty"`
	InstanceId string `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
}

type Anon279 struct {
	EndUserCapfProfile []LEndUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 endUserCapfProfile,omitempty"`
}

type Anon28 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon280 struct {
	ServiceParameter RServiceParameter `xml:"http://www.cisco.com/AXL/API/9.0 serviceParameter"`
}

type Anon281 struct {
	GeoLocationFilter RGeoLocationFilter `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilter"`
}

type Anon282 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon283 struct {
	GeoLocationFilter []LGeoLocationFilter `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilter,omitempty"`
}

type Anon284 struct {
	VoiceMailProfile RVoiceMailProfile `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfile"`
}

type Anon285 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon286 struct {
	VoiceMailProfile []LVoiceMailProfile `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfile,omitempty"`
}

type Anon287 struct {
	VoiceMailPort RVoiceMailPort `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPort"`
}

type Anon288 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	SecurityProfileName    string `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	DnPattern              string `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
}

type Anon289 struct {
	VoiceMailPort []LVoiceMailPort `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPort,omitempty"`
}

type Anon29 struct {
	CallerFilterList []LCallerFilterList `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterList,omitempty"`
}

type Anon290 struct {
	Gatekeeper RGatekeeper `xml:"http://www.cisco.com/AXL/API/9.0 gatekeeper"`
}

type Anon291 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon292 struct {
	Gatekeeper []LGatekeeper `xml:"http://www.cisco.com/AXL/API/9.0 gatekeeper,omitempty"`
}

type Anon293 struct {
	Button []XButton `xml:"http://www.cisco.com/AXL/API/9.0 button,omitempty"`
}

type Anon294 struct {
	PhoneButtonTemplate RPhoneButtonTemplate `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate"`
}

type Anon295 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon296 struct {
	PhoneButtonTemplate []LPhoneButtonTemplate `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate,omitempty"`
}

type Anon297 struct {
	CommonPhoneConfig RCommonPhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfig"`
}

type Anon298 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon299 struct {
	CommonPhoneConfig []LCommonPhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfig,omitempty"`
}

type Anon3 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon30 struct {
	RoutePartition RRoutePartition `xml:"http://www.cisco.com/AXL/API/9.0 routePartition"`
}

type Anon300 struct {
	MessageWaiting RMessageWaiting `xml:"http://www.cisco.com/AXL/API/9.0 messageWaiting"`
}

type Anon301 struct {
	Pattern                string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName     string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon302 struct {
	MessageWaiting []LMessageWaiting `xml:"http://www.cisco.com/AXL/API/9.0 messageWaiting,omitempty"`
}

type Anon303 struct {
	Parameter []XIpPhoneServicesParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter"`
}

type Anon304 struct {
	IpPhoneServices RIpPhoneServices `xml:"http://www.cisco.com/AXL/API/9.0 ipPhoneServices"`
}

type Anon305 struct {
	ServiceName        string `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
	ServiceDescription string `xml:"http://www.cisco.com/AXL/API/9.0 serviceDescription,omitempty"`
}

type Anon306 struct {
	IpPhoneServices []LIpPhoneServices `xml:"http://www.cisco.com/AXL/API/9.0 ipPhoneServices,omitempty"`
}

type Anon307 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon308 struct {
	CtiRoutePoint RCtiRoutePoint `xml:"http://www.cisco.com/AXL/API/9.0 ctiRoutePoint"`
}

type Anon309 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon31 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon310 struct {
	CtiRoutePoint []LCtiRoutePoint `xml:"http://www.cisco.com/AXL/API/9.0 ctiRoutePoint,omitempty"`
}

type Anon311 struct {
	TransPattern RTransPattern `xml:"http://www.cisco.com/AXL/API/9.0 transPattern"`
}

type Anon312 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon313 struct {
	TransPattern []LTransPattern `xml:"http://www.cisco.com/AXL/API/9.0 transPattern,omitempty"`
}

type Anon314 struct {
	CallingPartyTransformationPattern RCallingPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationPattern"`
}

type Anon315 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       string `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    string `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
}

type Anon316 struct {
	CallingPartyTransformationPattern []LCallingPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationPattern,omitempty"`
}

type Anon317 struct {
	SipRoutePattern RSipRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 sipRoutePattern"`
}

type Anon318 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DnOrPatternIpv6    string `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPatternIpv6,omitempty"`
}

type Anon319 struct {
	SipRoutePattern []LSipRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 sipRoutePattern,omitempty"`
}

type Anon32 struct {
	RoutePartition []LRoutePartition `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
}

type Anon320 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *Anon320) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon320
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type Anon321 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *Anon321) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon321
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type Anon322 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *Anon322) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon322
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type Anon323 struct {
	HuntPilot RHuntPilot `xml:"http://www.cisco.com/AXL/API/9.0 huntPilot"`
}

type Anon324 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon325 struct {
	HuntPilot []LHuntPilot `xml:"http://www.cisco.com/AXL/API/9.0 huntPilot,omitempty"`
}

type Anon326 struct {
	GatewayName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gatewayName"`
	RouteListName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeListName"`
}

type Anon327 struct {
	Cic                    string       `xml:"http://www.cisco.com/AXL/API/9.0 cic,omitempty"`
	NetworkServiceProtocol XPriProtocol `xml:"http://www.cisco.com/AXL/API/9.0 networkServiceProtocol"`
	NetworkService         XNSFService  `xml:"http://www.cisco.com/AXL/API/9.0 networkService,omitempty"`
	ParamValue             string       `xml:"http://www.cisco.com/AXL/API/9.0 paramValue,omitempty"`
}

type Anon328 struct {
	RoutePattern RRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 routePattern"`
}

type Anon329 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon33 struct {
	Member []XCallingSearchSpaceMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon330 struct {
	RoutePattern []LRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 routePattern,omitempty"`
}

type Anon331 struct {
	ApplicationDialRules RApplicationDialRules `xml:"http://www.cisco.com/AXL/API/9.0 applicationDialRules"`
}

type Anon332 struct {
	Name            string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description     string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith string `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
}

type Anon333 struct {
	ApplicationDialRules []LApplicationDialRules `xml:"http://www.cisco.com/AXL/API/9.0 applicationDialRules,omitempty"`
}

type Anon334 struct {
	DirectoryLookupDialRules RDirectoryLookupDialRules `xml:"http://www.cisco.com/AXL/API/9.0 directoryLookupDialRules"`
}

type Anon335 struct {
	Name            string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description     string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith string `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
}

type Anon336 struct {
	DirectoryLookupDialRules []LDirectoryLookupDialRules `xml:"http://www.cisco.com/AXL/API/9.0 directoryLookupDialRules,omitempty"`
}

type Anon337 struct {
	PhoneSecurityProfile RPhoneSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 phoneSecurityProfile"`
}

type Anon338 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon339 struct {
	PhoneSecurityProfile []LPhoneSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 phoneSecurityProfile,omitempty"`
}

type Anon34 struct {
	Member []XCallingSearchSpaceMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon340 struct {
	Pattern []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
}

type Anon341 struct {
	Plar []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 plar"`
}

type Anon342 struct {
	SipDialRules RSipDialRules `xml:"http://www.cisco.com/AXL/API/9.0 sipDialRules"`
}

type Anon343 struct {
	DialPattern string `xml:"http://www.cisco.com/AXL/API/9.0 dialPattern,omitempty"`
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon344 struct {
	SipDialRules []LSipDialRules `xml:"http://www.cisco.com/AXL/API/9.0 sipDialRules,omitempty"`
}

type Anon345 struct {
	NormalizationScriptInfo []XNormalizationScriptInfo `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfo,omitempty"`
}

type Anon346 struct {
	ConferenceBridge RConferenceBridge `xml:"http://www.cisco.com/AXL/API/9.0 conferenceBridge"`
}

type Anon347 struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description    string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon348 struct {
	ConferenceBridge []LConferenceBridge `xml:"http://www.cisco.com/AXL/API/9.0 conferenceBridge,omitempty"`
}

type Anon349 struct {
	Annunciator RAnnunciator `xml:"http://www.cisco.com/AXL/API/9.0 annunciator"`
}

type Anon35 struct {
	Member []XCallingSearchSpaceMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon350 struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description    string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon351 struct {
	Annunciator []LAnnunciator `xml:"http://www.cisco.com/AXL/API/9.0 annunciator,omitempty"`
}

type Anon352 struct {
	Mtp RMtp `xml:"http://www.cisco.com/AXL/API/9.0 mtp"`
}

type Anon353 struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description    string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon354 struct {
	Mtp []LMtp `xml:"http://www.cisco.com/AXL/API/9.0 mtp,omitempty"`
}

type Anon355 struct {
	FixedMohAudioSource RFixedMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 fixedMohAudioSource"`
}

type Anon356 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon357 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon358 struct {
	RemoteDestinationProfile RRemoteDestinationProfile `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfile"`
}

type Anon359 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon36 struct {
	Member []XCallingSearchSpaceMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon360 struct {
	RemoteDestinationProfile []LRemoteDestinationProfile `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfile,omitempty"`
}

type Anon361 struct {
	DirectoryUri []XDirectoryUri `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
}

type Anon362 struct {
	Line RLine `xml:"http://www.cisco.com/AXL/API/9.0 line"`
}

type Anon363 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon364 struct {
	Line []LLine `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
}

type Anon365 struct {
	DefaultDeviceProfile RDefaultDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 defaultDeviceProfile"`
}

type Anon366 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon367 struct {
	DefaultDeviceProfile []LDefaultDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 defaultDeviceProfile,omitempty"`
}

type Anon368 struct {
	Line           []XH323Line          `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon369 struct {
	GateKeeperName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperName,omitempty"`
	E164             string  `xml:"http://www.cisco.com/AXL/API/9.0 e164,omitempty"`
	TechnologyPrefix string  `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix"`
	Zone             string  `xml:"http://www.cisco.com/AXL/API/9.0 zone"`
}

type Anon37 struct {
	Css RCss `xml:"http://www.cisco.com/AXL/API/9.0 css"`
}

type Anon370 struct {
	Line           []XH323Line          `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon371 struct {
	H323Phone RH323Phone `xml:"http://www.cisco.com/AXL/API/9.0 h323Phone"`
}

type Anon372 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon373 struct {
	H323Phone []LH323Phone `xml:"http://www.cisco.com/AXL/API/9.0 h323Phone,omitempty"`
}

type Anon374 struct {
	AudioSource []Anon375 `xml:"http://www.cisco.com/AXL/API/9.0 audioSource,omitempty"`
}

type Anon375 struct {
	SourceId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	MaxHops  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHops,omitempty"`
}

func (t *Anon375) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon375
	var overlay struct {
		*T
		MaxHops *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHops,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxHops = (*XInteger)(&overlay.T.MaxHops)
	return d.DecodeElement(&overlay, &start)
}

type Anon376 struct {
	MohServer RMohServer `xml:"http://www.cisco.com/AXL/API/9.0 mohServer"`
}

type Anon377 struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description    string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon378 struct {
	MohServer []LMohServer `xml:"http://www.cisco.com/AXL/API/9.0 mohServer,omitempty"`
}

type Anon379 struct {
	GateKeeper       XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeper,omitempty"`
	TerminalType     XTerminal `xml:"http://www.cisco.com/AXL/API/9.0 terminalType,omitempty"`
	TechnologyPrefix string    `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix,omitempty"`
	Zone             string    `xml:"http://www.cisco.com/AXL/API/9.0 zone,omitempty"`
}

type Anon38 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon380 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon381 struct {
	GateKeeper       XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeper,omitempty"`
	TerminalType     XTerminal `xml:"http://www.cisco.com/AXL/API/9.0 terminalType,omitempty"`
	TechnologyPrefix string    `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix,omitempty"`
	Zone             string    `xml:"http://www.cisco.com/AXL/API/9.0 zone,omitempty"`
}

type Anon382 struct {
	Server1 string `xml:"http://www.cisco.com/AXL/API/9.0 server1,omitempty"`
	Server2 string `xml:"http://www.cisco.com/AXL/API/9.0 server2,omitempty"`
	Server3 string `xml:"http://www.cisco.com/AXL/API/9.0 server3,omitempty"`
}

type Anon383 struct {
	Destination []XH323TrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon384 struct {
	H323Trunk RH323Trunk `xml:"http://www.cisco.com/AXL/API/9.0 h323Trunk"`
}

type Anon385 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon386 struct {
	H323Trunk []LH323Trunk `xml:"http://www.cisco.com/AXL/API/9.0 h323Trunk,omitempty"`
}

type Anon387 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon388 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon389 struct {
	Speeddial []XSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

type Anon39 struct {
	Css []LCss `xml:"http://www.cisco.com/AXL/API/9.0 css,omitempty"`
}

type Anon390 struct {
	BusyLampField []XBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Anon391 struct {
	BlfDirectedCallPark []XBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

type Anon392 struct {
	AddOnModule []XAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type Anon393 struct {
	Service []XSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon394 struct {
	Phone RPhone `xml:"http://www.cisco.com/AXL/API/9.0 phone"`
}

type Anon395 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Protocol               string `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	SecurityProfileName    string `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
}

type Anon396 struct {
	Phone []LPhone `xml:"http://www.cisco.com/AXL/API/9.0 phone,omitempty"`
}

type Anon397 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon398 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon399 struct {
	H323Gateway RH323Gateway `xml:"http://www.cisco.com/AXL/API/9.0 h323Gateway"`
}

type Anon4 struct {
	SipTrunkSecurityProfile []LSipTrunkSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkSecurityProfile,omitempty"`
}

type Anon40 struct {
	StartDn            string  `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
	EndDn              string  `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
	NextDn             string  `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	E164Mask           string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
}

func (t *Anon40) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon40
	var overlay struct {
		*T
		StartDn *string `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
		EndDn   *string `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
		NextDn  *string `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDn = (*string)(&overlay.T.StartDn)
	overlay.EndDn = (*string)(&overlay.T.EndDn)
	overlay.NextDn = (*string)(&overlay.T.NextDn)
	return d.DecodeElement(&overlay, &start)
}

type Anon400 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Protocol               string `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon401 struct {
	H323Gateway []LH323Gateway `xml:"http://www.cisco.com/AXL/API/9.0 h323Gateway,omitempty"`
}

type Anon402 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon403 struct {
	Speeddial []XSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

type Anon404 struct {
	BusyLampField []XBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Anon405 struct {
	BlfDirectedCallPark []XBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

type Anon406 struct {
	AddOnModule []XAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type Anon407 struct {
	Service []XSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon408 struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon409 struct {
	Speeddial []XSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

type Anon41 struct {
	EthernetPhonePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ethernetPhonePort,omitempty"`
	MgcpPorts         Anon42   `xml:"http://www.cisco.com/AXL/API/9.0 mgcpPorts"`
	SipPorts          Anon43   `xml:"http://www.cisco.com/AXL/API/9.0 sipPorts"`
}

func (t *Anon41) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon41
	var overlay struct {
		*T
		EthernetPhonePort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ethernetPhonePort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EthernetPhonePort = (*XInteger)(&overlay.T.EthernetPhonePort)
	return d.DecodeElement(&overlay, &start)
}

type Anon410 struct {
	BusyLampField []XBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Anon411 struct {
	BlfDirectedCallPark []XBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

type Anon412 struct {
	AddOnModule []XAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type Anon413 struct {
	Service []XSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon414 struct {
	DeviceProfile RDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile"`
}

type Anon415 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon416 struct {
	DeviceProfile []LDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile,omitempty"`
}

type Anon417 struct {
	LineAssociation []XLineAssociation `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociation"`
}

type Anon418 struct {
	RemoteDestination RRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestination"`
}

type Anon419 struct {
	Name                         string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RemoteDestinationProfileName string `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfileName,omitempty"`
	DualModeDeviceName           string `xml:"http://www.cisco.com/AXL/API/9.0 dualModeDeviceName,omitempty"`
}

type Anon42 struct {
	Listen    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 listen,omitempty"`
	KeepAlive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 keepAlive,omitempty"`
}

func (t *Anon42) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon42
	var overlay struct {
		*T
		Listen    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 listen,omitempty"`
		KeepAlive *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 keepAlive,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Listen = (*XInteger)(&overlay.T.Listen)
	overlay.KeepAlive = (*XInteger)(&overlay.T.KeepAlive)
	return d.DecodeElement(&overlay, &start)
}

type Anon420 struct {
	RemoteDestination []LRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestination,omitempty"`
}

type Anon421 struct {
	Gateway RGateway `xml:"http://www.cisco.com/AXL/API/9.0 gateway"`
}

type Anon422 struct {
	DomainName  string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon423 struct {
	Gateway []LGateway `xml:"http://www.cisco.com/AXL/API/9.0 gateway,omitempty"`
}

type Anon424 struct {
	GatewayEndpointAnalogAccess RGatewayEndpointAnalogAccess `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointAnalogAccess"`
}

type Anon425 struct {
	GatewayEndpointDigitalAccessPri RGatewayEndpointDigitalAccessPri `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessPri"`
}

type Anon426 struct {
	GatewayEndpointDigitalAccessBri RGatewayEndpointDigitalAccessBri `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessBri"`
}

type Anon427 struct {
	GatewayEndpointDigitalAccessT1 RGatewayEndpointDigitalAccessT1 `xml:"http://www.cisco.com/AXL/API/9.0 gatewayEndpointDigitalAccessT1"`
}

type Anon428 struct {
	Unit Anon429 `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
}

type Anon429 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon430         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

func (t *Anon429) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon429
	var overlay struct {
		*T
		Index *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	return d.DecodeElement(&overlay, &start)
}

type Anon43 struct {
	SipPhonePort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	SipPhoneSecurePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhoneSecurePort,omitempty"`
}

func (t *Anon43) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon43
	var overlay struct {
		*T
		SipPhonePort       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
		SipPhoneSecurePort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhoneSecurePort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SipPhonePort = (*XInteger)(&overlay.T.SipPhonePort)
	overlay.SipPhoneSecurePort = (*XInteger)(&overlay.T.SipPhoneSecurePort)
	return d.DecodeElement(&overlay, &start)
}

type Anon430 struct {
	Subunit Anon431 `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
}

type Anon431 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon432 struct {
	Vg224 RVg224 `xml:"http://www.cisco.com/AXL/API/9.0 vg224"`
}

type Anon433 struct {
	Port []XAnalogPort `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type Anon434 struct {
	Port []XAnalogPort `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type Anon435 struct {
	CiscoCatalyst600024PortFXSGateway RCiscoCatalyst600024PortFXSGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst600024PortFXSGateway"`
}

type Anon436 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon437 struct {
	CiscoCatalyst600024PortFXSGateway []LCiscoCatalyst600024PortFXSGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst600024PortFXSGateway,omitempty"`
}

type Anon438 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon439 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon44 struct {
	CallManager RCallManager `xml:"http://www.cisco.com/AXL/API/9.0 callManager"`
}

type Anon440 struct {
	CiscoCatalyst6000E1VoIPGateway RCiscoCatalyst6000E1VoIPGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000E1VoIPGateway"`
}

type Anon441 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon442 struct {
	CiscoCatalyst6000E1VoIPGateway []LCiscoCatalyst6000E1VoIPGateway `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000E1VoIPGateway,omitempty"`
}

type Anon443 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon444 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon445 struct {
	CiscoCatalyst6000T1VoIPGatewayPri RCiscoCatalyst6000T1VoIPGatewayPri `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayPri"`
}

type Anon446 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon447 struct {
	CiscoCatalyst6000T1VoIPGatewayPri []LCiscoCatalyst6000T1VoIPGatewayPri `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayPri,omitempty"`
}

type Anon448 struct {
	Port []XT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type Anon449 struct {
	Port []XT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type Anon45 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon450 struct {
	CiscoCatalyst6000T1VoIPGatewayT1 RCiscoCatalyst6000T1VoIPGatewayT1 `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayT1"`
}

type Anon451 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon452 struct {
	CiscoCatalyst6000T1VoIPGatewayT1 []LCiscoCatalyst6000T1VoIPGatewayT1 `xml:"http://www.cisco.com/AXL/API/9.0 ciscoCatalyst6000T1VoIPGatewayT1,omitempty"`
}

type Anon453 struct {
	Member []XPickupGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon454 struct {
	Member []XPickupGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon455 struct {
	Member []XPickupGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon456 struct {
	Member []XPickupGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon457 struct {
	CallingPartyInfo Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
	CalledPartyInfo  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
}

func (t *Anon457) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon457
	var overlay struct {
		*T
		CallingPartyInfo *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
		CalledPartyInfo  *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallingPartyInfo = (*Boolean)(&overlay.T.CallingPartyInfo)
	overlay.CalledPartyInfo = (*Boolean)(&overlay.T.CalledPartyInfo)
	return d.DecodeElement(&overlay, &start)
}

type Anon458 struct {
	CallPickupGroup RCallPickupGroup `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroup"`
}

type Anon459 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon46 struct {
	CallManager []LCallManager `xml:"http://www.cisco.com/AXL/API/9.0 callManager,omitempty"`
}

type Anon460 struct {
	CallPickupGroup []LCallPickupGroup `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroup,omitempty"`
}

type Anon461 struct {
	DnOrPattern string `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPattern,omitempty"`
	Partition   string `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Type        string `xml:"http://www.cisco.com/AXL/API/9.0 type,omitempty"`
}

type Anon462 struct {
	RoutePlan []LRoutePlan `xml:"http://www.cisco.com/AXL/API/9.0 routePlan,omitempty"`
}

type Anon463 struct {
	RelatedPolicy []XPolicyRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicy"`
}

type Anon464 struct {
	GeoLocationPolicy RGeoLocationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicy"`
}

type Anon465 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon466 struct {
	GeoLocationPolicy []LGeoLocationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicy,omitempty"`
}

type Anon467 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon468 struct {
	Destination []XSipTrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon469 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon47 struct {
	Member []XMediaResourceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon470 struct {
	Destination []XSipTrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon471 struct {
	Destination []XSipTrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon472 struct {
	Destination []XSipTrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon473 struct {
	SipTrunk RSipTrunk `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunk"`
}

type Anon474 struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName string `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName         string `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
}

type Anon475 struct {
	SipTrunk []LSipTrunk `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunk,omitempty"`
}

type Anon476 struct {
	CalledPartyTransformationPattern RCalledPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationPattern"`
}

type Anon477 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       string `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    string `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
}

type Anon478 struct {
	CalledPartyTransformationPattern []LCalledPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationPattern,omitempty"`
}

type Anon479 struct {
	ExternalCallControlProfile RExternalCallControlProfile `xml:"http://www.cisco.com/AXL/API/9.0 externalCallControlProfile"`
}

type Anon48 struct {
	Member []XMediaResourceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon480 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon481 struct {
	ExternalCallControlProfile []LExternalCallControlProfile `xml:"http://www.cisco.com/AXL/API/9.0 externalCallControlProfile,omitempty"`
}

type Anon482 struct {
	SafSecurityProfile RSafSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile"`
}

type Anon483 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Userid      string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
}

type Anon484 struct {
	SafSecurityProfile []LSafSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile,omitempty"`
}

type Anon485 struct {
	AssociatedCucm []XSafForwarderMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucm"`
}

type Anon486 struct {
	SafForwarder RSafForwarder `xml:"http://www.cisco.com/AXL/API/9.0 safForwarder"`
}

type Anon487 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon488 struct {
	SafForwarder []LSafForwarder `xml:"http://www.cisco.com/AXL/API/9.0 safForwarder,omitempty"`
}

type Anon489 struct {
	CcdHostedDN RCcdHostedDN `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDN"`
}

type Anon49 struct {
	Member []XMediaResourceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon490 struct {
	HostedPattern string `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern,omitempty"`
	Description   string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon491 struct {
	CcdHostedDN []LCcdHostedDN `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDN,omitempty"`
}

type Anon492 struct {
	CcdHostedDNGroup RCcdHostedDNGroup `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDNGroup"`
}

type Anon493 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon494 struct {
	CcdHostedDNGroup []LCcdHostedDNGroup `xml:"http://www.cisco.com/AXL/API/9.0 ccdHostedDNGroup,omitempty"`
}

type Anon495 struct {
	AssociatedTrunk []XCcdRequestingServiceMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunk"`
}

type Anon496 struct {
	CcdRequestingService RCcdRequestingService `xml:"http://www.cisco.com/AXL/API/9.0 ccdRequestingService"`
}

type Anon497 struct {
	InterClusterServiceProfile RInterClusterServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 interClusterServiceProfile"`
}

type Anon498 struct {
	RemoteCluster RRemoteCluster `xml:"http://www.cisco.com/AXL/API/9.0 remoteCluster"`
}

type Anon499 struct {
	ClusterId   string `xml:"http://www.cisco.com/AXL/API/9.0 clusterId,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon5 struct {
	TimePeriod RTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 timePeriod"`
}

type Anon50 struct {
	Member []XMediaResourceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon500 struct {
	RemoteCluster []LRemoteCluster `xml:"http://www.cisco.com/AXL/API/9.0 remoteCluster,omitempty"`
}

type Anon501 struct {
	CcdAdvertisingService RCcdAdvertisingService `xml:"http://www.cisco.com/AXL/API/9.0 ccdAdvertisingService"`
}

type Anon502 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon503 struct {
	CcdAdvertisingService []LCcdAdvertisingService `xml:"http://www.cisco.com/AXL/API/9.0 ccdAdvertisingService,omitempty"`
}

type Anon504 struct {
	Unit []Anon505 `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
}

type Anon505 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon506         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

func (t *Anon505) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon505
	var overlay struct {
		*T
		Index *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	return d.DecodeElement(&overlay, &start)
}

type Anon506 struct {
	Subunit []Anon507 `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
}

type Anon507 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon508 struct {
	Subunit []Anon509 `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
}

type Anon509 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon51 struct {
	MediaResourceGroup RMediaResourceGroup `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroup"`
}

type Anon510 struct {
	Server []Anon511 `xml:"http://www.cisco.com/AXL/API/9.0 server"`
}

type Anon511 struct {
	HostName       string   `xml:"http://www.cisco.com/AXL/API/9.0 hostName"`
	LdapPortNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ldapPortNumber"`
	SslEnabled     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 sslEnabled,omitempty"`
}

type Anon512 struct {
	LdapDirectory RLdapDirectory `xml:"http://www.cisco.com/AXL/API/9.0 ldapDirectory"`
}

type Anon513 struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	LdapDn         string `xml:"http://www.cisco.com/AXL/API/9.0 ldapDn,omitempty"`
	UserSearchBase string `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
}

type Anon514 struct {
	LdapDirectory []LLdapDirectory `xml:"http://www.cisco.com/AXL/API/9.0 ldapDirectory,omitempty"`
}

type Anon515 struct {
	EmccFeatureConfig REmccFeatureConfig `xml:"http://www.cisco.com/AXL/API/9.0 emccFeatureConfig"`
}

type Anon516 struct {
	SafCcdPurgeBlockLearnedRoutes RSafCcdPurgeBlockLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 safCcdPurgeBlockLearnedRoutes"`
}

type Anon517 struct {
	LearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
}

type Anon518 struct {
	SafCcdPurgeBlockLearnedRoutes []LSafCcdPurgeBlockLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 safCcdPurgeBlockLearnedRoutes,omitempty"`
}

type Anon519 struct {
	Certificate []XVpnGatewayMember `xml:"http://www.cisco.com/AXL/API/9.0 certificate"`
}

type Anon52 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon520 struct {
	VpnGateway RVpnGateway `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway"`
}

type Anon521 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon522 struct {
	VpnGateway []LVpnGateway `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway,omitempty"`
}

type Anon523 struct {
	VpnGateway []XVpnGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway,omitempty"`
}

type Anon524 struct {
	VpnGroup RVpnGroup `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroup"`
}

type Anon525 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon526 struct {
	VpnGroup []LVpnGroup `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroup,omitempty"`
}

type Anon527 struct {
	VpnProfile RVpnProfile `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfile"`
}

type Anon528 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon529 struct {
	VpnProfile []LVpnProfile `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfile,omitempty"`
}

type Anon53 struct {
	MediaResourceGroup []LMediaResourceGroup `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroup,omitempty"`
}

type Anon530 struct {
	ImeServer RImeServer `xml:"http://www.cisco.com/AXL/API/9.0 imeServer"`
}

type Anon531 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon532 struct {
	ImeServer []LImeServer `xml:"http://www.cisco.com/AXL/API/9.0 imeServer,omitempty"`
}

type Anon533 struct {
	ImeRouteFilterGroup RImeRouteFilterGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroup"`
}

type Anon534 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon535 struct {
	ImeRouteFilterGroup []LImeRouteFilterGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroup,omitempty"`
}

type Anon536 struct {
	ImeRouteFilterElement RImeRouteFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterElement"`
}

type Anon537 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon538 struct {
	ImeRouteFilterElement []LImeRouteFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterElement,omitempty"`
}

type Anon539 struct {
	Member []XImeClientMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon54 struct {
	Member []XMediaResourceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon540 struct {
	Member []XImeClientMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon541 struct {
	Member []XImeClientMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon542 struct {
	Member []XImeClientMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon543 struct {
	CcmExternalIpMap []XCcmExternalIpMap `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMap,omitempty"`
}

type Anon544 struct {
	ImeClient RImeClient `xml:"http://www.cisco.com/AXL/API/9.0 imeClient"`
}

type Anon545 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Domain      string `xml:"http://www.cisco.com/AXL/API/9.0 domain,omitempty"`
}

type Anon546 struct {
	ImeClient []LImeClient `xml:"http://www.cisco.com/AXL/API/9.0 imeClient,omitempty"`
}

type Anon547 struct {
	ImeEnrolledPattern RImeEnrolledPattern `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPattern"`
}

type Anon548 struct {
	Pattern                     string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeEnrolledPatternGroupName string `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
}

type Anon549 struct {
	ImeEnrolledPattern []LImeEnrolledPattern `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPattern,omitempty"`
}

type Anon55 struct {
	Member []XMediaResourceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon550 struct {
	ImeEnrolledPatternGroup RImeEnrolledPatternGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroup"`
}

type Anon551 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon552 struct {
	ImeEnrolledPatternGroup []LImeEnrolledPatternGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroup,omitempty"`
}

type Anon553 struct {
	ImeExclusionNumber RImeExclusionNumber `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumber"`
}

type Anon554 struct {
	Pattern                     string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeExclusionNumberGroupName string `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroupName,omitempty"`
}

type Anon555 struct {
	ImeExclusionNumber []LImeExclusionNumber `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumber,omitempty"`
}

type Anon556 struct {
	ImeExclusionNumberGroup RImeExclusionNumberGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroup"`
}

type Anon557 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon558 struct {
	ImeExclusionNumberGroup []LImeExclusionNumberGroup `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroup,omitempty"`
}

type Anon559 struct {
	ImeFirewall RImeFirewall `xml:"http://www.cisco.com/AXL/API/9.0 imeFirewall"`
}

type Anon56 struct {
	Member []XMediaResourceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon560 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress   string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
}

type Anon561 struct {
	ImeFirewall []LImeFirewall `xml:"http://www.cisco.com/AXL/API/9.0 imeFirewall,omitempty"`
}

type Anon562 struct {
	ImeE164Transformation RImeE164Transformation `xml:"http://www.cisco.com/AXL/API/9.0 imeE164Transformation"`
}

type Anon563 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon564 struct {
	ImeE164Transformation []LImeE164Transformation `xml:"http://www.cisco.com/AXL/API/9.0 imeE164Transformation,omitempty"`
}

type Anon565 struct {
	TransformationProfile RTransformationProfile `xml:"http://www.cisco.com/AXL/API/9.0 transformationProfile"`
}

type Anon566 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon567 struct {
	TransformationProfile []LTransformationProfile `xml:"http://www.cisco.com/AXL/API/9.0 transformationProfile,omitempty"`
}

type Anon568 struct {
	FallbackProfile RFallbackProfile `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfile"`
}

type Anon569 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon57 struct {
	Member []XMediaResourceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon570 struct {
	FallbackProfile []LFallbackProfile `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfile,omitempty"`
}

type Anon571 struct {
	LdapFilter RLdapFilter `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter"`
}

type Anon572 struct {
	Name   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Filter string `xml:"http://www.cisco.com/AXL/API/9.0 filter,omitempty"`
}

type Anon573 struct {
	LdapFilter []LLdapFilter `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter,omitempty"`
}

type Anon574 struct {
	Service []XTvsCertificateService `xml:"http://www.cisco.com/AXL/API/9.0 service"`
}

type Anon575 struct {
	TvsCertificate RTvsCertificate `xml:"http://www.cisco.com/AXL/API/9.0 tvsCertificate"`
}

type Anon576 struct {
	SubjectName  string `xml:"http://www.cisco.com/AXL/API/9.0 subjectName,omitempty"`
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName,omitempty"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber,omitempty"`
	TimeToLive   string `xml:"http://www.cisco.com/AXL/API/9.0 timeToLive,omitempty"`
}

type Anon577 struct {
	TvsCertificate []LTvsCertificate `xml:"http://www.cisco.com/AXL/API/9.0 tvsCertificate,omitempty"`
}

type Anon578 struct {
	Feature []XFeatureControlConfig `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
}

type Anon579 struct {
	FeatureControlPolicy RFeatureControlPolicy `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy"`
}

type Anon58 struct {
	MediaResourceList RMediaResourceList `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceList"`
}

type Anon580 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon581 struct {
	FeatureControlPolicy []LFeatureControlPolicy `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
}

type Anon582 struct {
	MobilityProfile RMobilityProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfile"`
}

type Anon583 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon584 struct {
	MobilityProfile []LMobilityProfile `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfile,omitempty"`
}

type Anon585 struct {
	EnterpriseFeatureAccessConfiguration REnterpriseFeatureAccessConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseFeatureAccessConfiguration"`
}

type Anon586 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon587 struct {
	EnterpriseFeatureAccessConfiguration []LEnterpriseFeatureAccessConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseFeatureAccessConfiguration,omitempty"`
}

type Anon588 struct {
	HandoffConfiguration RHandoffConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 handoffConfiguration"`
}

type Anon589 struct {
	Directorynumber string `xml:"http://www.cisco.com/AXL/API/9.0 directorynumber,omitempty"`
}

type Anon59 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon590 struct {
	CalledPartyTracing []LCalledPartyTracing `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTracing,omitempty"`
}

type Anon591 struct {
	SIPNormalizationScript RSIPNormalizationScript `xml:"http://www.cisco.com/AXL/API/9.0 sIPNormalizationScript"`
}

type Anon592 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon593 struct {
	SIPNormalizationScript []LSIPNormalizationScript `xml:"http://www.cisco.com/AXL/API/9.0 sIPNormalizationScript,omitempty"`
}

type Anon594 struct {
	CustomUserField RCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
}

type Anon595 struct {
	Field string `xml:"http://www.cisco.com/AXL/API/9.0 field,omitempty"`
}

type Anon596 struct {
	CustomUserField []LCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
}

type Anon597 struct {
	GatewaySccpEndpoints RGatewaySccpEndpoints `xml:"http://www.cisco.com/AXL/API/9.0 gatewaySccpEndpoints"`
}

type Anon598 struct {
	HostName string `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
}

type Anon599 struct {
	BillingServer []LBillingServer `xml:"http://www.cisco.com/AXL/API/9.0 billingServer,omitempty"`
}

type Anon6 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon60 struct {
	MediaResourceList []LMediaResourceList `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceList,omitempty"`
}

type Anon600 struct {
	LbmGroup RLbmGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup"`
}

type Anon601 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 Description,omitempty"`
}

type Anon602 struct {
	LbmGroup []LLbmGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup,omitempty"`
}

type Anon603 struct {
	Announcement RAnnouncement `xml:"http://www.cisco.com/AXL/API/9.0 announcement"`
}

type Anon604 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon605 struct {
	Announcement []LAnnouncement `xml:"http://www.cisco.com/AXL/API/9.0 announcement,omitempty"`
}

type Anon606 struct {
	ServiceProfileInfo []XServiceProfileList `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfo,omitempty"`
}

type Anon607 struct {
	ServiceProfile RServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile"`
}

type Anon608 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon609 struct {
	ServiceProfile []LServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile,omitempty"`
}

type Anon61 struct {
	RelatedRegion []XRegionRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegion"`
}

type Anon610 struct {
	LdapSyncCustomField RLdapSyncCustomField `xml:"http://www.cisco.com/AXL/API/9.0 ldapSyncCustomField"`
}

type Anon611 struct {
	CodecNames []string `xml:"http://www.cisco.com/AXL/API/9.0 codecNames"`
}

type Anon612 struct {
	AudioCodecPreferenceList RAudioCodecPreferenceList `xml:"http://www.cisco.com/AXL/API/9.0 audioCodecPreferenceList"`
}

type Anon613 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon614 struct {
	AudioCodecPreferenceList []LAudioCodecPreferenceList `xml:"http://www.cisco.com/AXL/API/9.0 audioCodecPreferenceList,omitempty"`
}

type Anon615 struct {
	UcService RUcService `xml:"http://www.cisco.com/AXL/API/9.0 ucService"`
}

type Anon616 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon617 struct {
	UcService []LUcService `xml:"http://www.cisco.com/AXL/API/9.0 ucService,omitempty"`
}

type Anon618 struct {
	LbmHubGroup RLbmHubGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup"`
}

type Anon619 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon62 struct {
	Region RRegion `xml:"http://www.cisco.com/AXL/API/9.0 region"`
}

type Anon620 struct {
	LbmHubGroup []LLbmHubGroup `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup,omitempty"`
}

type Anon621 struct {
	ImportedDirectoryUriCatalogs RImportedDirectoryUriCatalogs `xml:"http://www.cisco.com/AXL/API/9.0 importedDirectoryUriCatalogs"`
}

type Anon622 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RouteString string `xml:"http://www.cisco.com/AXL/API/9.0 routeString,omitempty"`
}

type Anon623 struct {
	ImportedDirectoryUriCatalogs []LImportedDirectoryUriCatalogs `xml:"http://www.cisco.com/AXL/API/9.0 importedDirectoryUriCatalogs,omitempty"`
}

type Anon624 struct {
	StartDn            string  `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
	EndDn              string  `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
	NextDn             string  `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	E164Mask           string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
}

type Anon625 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon626 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon627 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon628 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon629 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon63 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon630 struct {
	GateKeeper       XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeper,omitempty"`
	TerminalType     XTerminal `xml:"http://www.cisco.com/AXL/API/9.0 terminalType,omitempty"`
	TechnologyPrefix string    `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix,omitempty"`
	Zone             string    `xml:"http://www.cisco.com/AXL/API/9.0 zone,omitempty"`
}

type Anon631 struct {
	Server1 string `xml:"http://www.cisco.com/AXL/API/9.0 server1,omitempty"`
	Server2 string `xml:"http://www.cisco.com/AXL/API/9.0 server2,omitempty"`
	Server3 string `xml:"http://www.cisco.com/AXL/API/9.0 server3,omitempty"`
}

type Anon632 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon633 struct {
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpaceName,omitempty"`
	DeviceName                        string            `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DeviceProtocol                    XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 deviceProtocol,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	AddressMode                       XIPAddressingMode `xml:"http://www.cisco.com/AXL/API/9.0 addressMode,omitempty"`
	AllowAutoConfig                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfig,omitempty"`
	RemoteSrstOption                  string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstOption,omitempty"`
	RemoteSrstIp                      string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstIp,omitempty"`
	RemoteSrstPort                    XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstPort,omitempty"`
	RemoteSipSrstIp                   string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstIp,omitempty"`
	RemoteSipSrstPort                 XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstPort,omitempty"`
	GeolocationInfo                   string            `xml:"http://www.cisco.com/AXL/API/9.0 geolocationInfo,omitempty"`
}

type Anon634 struct {
	Unit Anon635 `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
}

type Anon635 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon636         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

type Anon636 struct {
	Subunit Anon637 `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
}

type Anon637 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon638 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon639 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon64 struct {
	Region []LRegion `xml:"http://www.cisco.com/AXL/API/9.0 region,omitempty"`
}

type Anon640 struct {
	CallingPartyInfo Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
	CalledPartyInfo  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
}

type Anon641 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon642 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon643 struct {
	Line           LPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier LNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon644 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon645 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon646 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon647 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

type Anon648 struct {
	Line           LPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier LNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon649 struct {
	Member []RTimeScheduleTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon65 struct {
	AarGroup RAarGroup `xml:"http://www.cisco.com/AXL/API/9.0 aarGroup"`
}

type Anon650 struct {
	Member RTODAccessMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon651 struct {
	Member []RCallerFilterListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon652 struct {
	Member []RCallingSearchSpaceMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon653 struct {
	StartDn            string  `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
	EndDn              string  `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
	NextDn             string  `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	E164Mask           string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
}

type Anon654 struct {
	EthernetPhonePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ethernetPhonePort,omitempty"`
	MgcpPorts         Anon655  `xml:"http://www.cisco.com/AXL/API/9.0 mgcpPorts,omitempty"`
	SipPorts          Anon656  `xml:"http://www.cisco.com/AXL/API/9.0 sipPorts,omitempty"`
}

type Anon655 struct {
	Listen    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 listen,omitempty"`
	KeepAlive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 keepAlive,omitempty"`
}

type Anon656 struct {
	SipPhonePort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	SipPhoneSecurePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhoneSecurePort,omitempty"`
}

type Anon657 struct {
	Member []RMediaResourceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon658 struct {
	Member []RMediaResourceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon659 struct {
	RelatedRegion []RRegionRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegion,omitempty"`
}

type Anon66 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon660 struct {
	Member []RRouteGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon661 struct {
	RelatedLocation []RLocationRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocation,omitempty"`
}

type Anon662 struct {
	BetweenLocation []RLocationBetween `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocation,omitempty"`
}

type Anon663 struct {
	Member []RResourcePriorityNamespaceListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon664 struct {
	Member []RDevicePoolDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon665 struct {
	Member []RHuntListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon666 struct {
	Member []RLineGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon667 struct {
	Member []RRouteFilterMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon668 struct {
	Member []RCallManagerMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon669 struct {
	Member []RUserGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon67 struct {
	AarGroup []LAarGroup `xml:"http://www.cisco.com/AXL/API/9.0 aarGroup,omitempty"`
}

type Anon670 struct {
	UserRole []RUserGroupRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon671 struct {
	Member []RDigitDiscardInstructionMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon672 struct {
	Locale []RMobileVoiceMember `xml:"http://www.cisco.com/AXL/API/9.0 locale,omitempty"`
}

type Anon673 struct {
	Member []RRouteListMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon674 struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type Anon675 struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon676 struct {
	UserGroup []Anon677 `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon677 struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	UserRoles Anon678 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type Anon678 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon679 struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName,omitempty"`
}

type Anon68 struct {
	PhysicalLocation RPhysicalLocation `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocation"`
}

type Anon680 struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Anon681 struct {
	PinCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pinCredPolicyName,omitempty"`
	PinCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserCantChange,omitempty"`
	PinCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserMustChange,omitempty"`
	PinCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredDoesNotExpire,omitempty"`
	PinCredTimeChanged           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeChanged,omitempty"`
	PinCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeAdminLockout,omitempty"`
	PinCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredLockedByAdministrator,omitempty"`
}

type Anon682 struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName,omitempty"`
}

type Anon683 struct {
	CustomUserField []RUserCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
}

type Anon684 struct {
	LineAppearanceAssociationForPresence []RLineAppearanceAssociationForPresence `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresence,omitempty"`
}

type Anon685 struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Anon686 struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type Anon687 struct {
	UserGroup []Anon688 `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type Anon688 struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	UserRoles Anon689 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type Anon689 struct {
	UserRole []string `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type Anon69 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon690 struct {
	CapfProfileInstanceId []string `xml:"http://www.cisco.com/AXL/API/9.0 capfProfileInstanceId,omitempty"`
}

type Anon691 struct {
	DeviceProfile []string `xml:"http://www.cisco.com/AXL/API/9.0 deviceProfile,omitempty"`
}

type Anon692 struct {
	SelectedPhoneNtpReference []RDateTimeGroupNtpReference `xml:"http://www.cisco.com/AXL/API/9.0 selectedPhoneNtpReference,omitempty"`
}

type Anon693 struct {
	PresenceGroup []RPresenceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup,omitempty"`
}

type Anon694 struct {
	SelectedAppUser []Anon695 `xml:"http://www.cisco.com/AXL/API/9.0 selectedAppUser,omitempty"`
}

type Anon695 struct {
	AppUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 appUserName,omitempty"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon696 struct {
	SelectedEndUser []Anon697 `xml:"http://www.cisco.com/AXL/API/9.0 selectedEndUser,omitempty"`
}

type Anon697 struct {
	EndUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 endUserName,omitempty"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Anon698 struct {
	Button []RButton `xml:"http://www.cisco.com/AXL/API/9.0 button,omitempty"`
}

type Anon699 struct {
	Parameter []RIpPhoneServicesParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter,omitempty"`
}

type Anon7 struct {
	TimePeriod []LTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 timePeriod,omitempty"`
}

type Anon70 struct {
	PhysicalLocation []LPhysicalLocation `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocation,omitempty"`
}

type Anon700 struct {
	Line           []RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier []RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon701 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon702 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon703 struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

type Anon704 struct {
	GatewayName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gatewayName,omitempty"`
	RouteListName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeListName,omitempty"`
}

type Anon705 struct {
	Cic                    string       `xml:"http://www.cisco.com/AXL/API/9.0 cic,omitempty"`
	NetworkServiceProtocol XPriProtocol `xml:"http://www.cisco.com/AXL/API/9.0 networkServiceProtocol,omitempty"`
	NetworkService         XNSFService  `xml:"http://www.cisco.com/AXL/API/9.0 networkService,omitempty"`
	ParamValue             string       `xml:"http://www.cisco.com/AXL/API/9.0 paramValue,omitempty"`
}

type Anon706 struct {
	Pattern []RPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
}

type Anon707 struct {
	Plar []RPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 plar,omitempty"`
}

type Anon708 struct {
	NormalizationScriptInfo []RNormalizationScriptInfo `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfo,omitempty"`
}

type Anon709 struct {
	Line           []RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier []RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon71 struct {
	Member []XRouteGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon710 struct {
	DirectoryUri []RDirectoryUri `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
}

type Anon711 struct {
	GateKeeperName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperName,omitempty"`
	E164             string  `xml:"http://www.cisco.com/AXL/API/9.0 e164,omitempty"`
	TechnologyPrefix string  `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix,omitempty"`
	Zone             string  `xml:"http://www.cisco.com/AXL/API/9.0 zone,omitempty"`
}

type Anon712 struct {
	Line           []RH323Line          `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier []RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon713 struct {
	AudioSource []Anon714 `xml:"http://www.cisco.com/AXL/API/9.0 audioSource,omitempty"`
}

type Anon714 struct {
	SourceId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	MaxHops  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHops,omitempty"`
}

type Anon715 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon716 struct {
	GateKeeper       XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeper,omitempty"`
	TerminalType     XTerminal `xml:"http://www.cisco.com/AXL/API/9.0 terminalType,omitempty"`
	TechnologyPrefix string    `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix,omitempty"`
	Zone             string    `xml:"http://www.cisco.com/AXL/API/9.0 zone,omitempty"`
}

type Anon717 struct {
	Server1 string `xml:"http://www.cisco.com/AXL/API/9.0 server1,omitempty"`
	Server2 string `xml:"http://www.cisco.com/AXL/API/9.0 server2,omitempty"`
	Server3 string `xml:"http://www.cisco.com/AXL/API/9.0 server3,omitempty"`
}

type Anon718 struct {
	Destination []RH323TrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon719 struct {
	Line           []RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier []RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon72 struct {
	Member []XRouteGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon720 struct {
	Speeddial []RSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

type Anon721 struct {
	BusyLampField []RBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Anon722 struct {
	BlfDirectedCallPark []RBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

type Anon723 struct {
	AddOnModule []RAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type Anon724 struct {
	Service []RSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon725 struct {
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpaceName,omitempty"`
	DeviceName                        string            `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DeviceProtocol                    XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 deviceProtocol,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	AddressMode                       XIPAddressingMode `xml:"http://www.cisco.com/AXL/API/9.0 addressMode,omitempty"`
	AllowAutoConfig                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfig,omitempty"`
	RemoteSrstOption                  string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstOption,omitempty"`
	RemoteSrstIp                      string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstIp,omitempty"`
	RemoteSrstPort                    XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstPort,omitempty"`
	RemoteSipSrstIp                   string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstIp,omitempty"`
	RemoteSipSrstPort                 XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstPort,omitempty"`
	GeolocationInfo                   string            `xml:"http://www.cisco.com/AXL/API/9.0 geolocationInfo,omitempty"`
}

type Anon726 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon727 struct {
	Line           []RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier []RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon728 struct {
	Speeddial []RSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

type Anon729 struct {
	BusyLampField []RBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Anon73 struct {
	Member []XRouteGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon730 struct {
	BlfDirectedCallPark []RBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

type Anon731 struct {
	AddOnModule []RAddOnModule `xml:"http://www.cisco.com/AXL/API/9.0 addOnModule,omitempty"`
}

type Anon732 struct {
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpaceName,omitempty"`
	DeviceName                        string            `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DeviceProtocol                    XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 deviceProtocol,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	AddressMode                       XIPAddressingMode `xml:"http://www.cisco.com/AXL/API/9.0 addressMode,omitempty"`
	AllowAutoConfig                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfig,omitempty"`
	RemoteSrstOption                  string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstOption,omitempty"`
	RemoteSrstIp                      string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstIp,omitempty"`
	RemoteSrstPort                    XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstPort,omitempty"`
	RemoteSipSrstIp                   string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstIp,omitempty"`
	RemoteSipSrstPort                 XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstPort,omitempty"`
	GeolocationInfo                   string            `xml:"http://www.cisco.com/AXL/API/9.0 geolocationInfo,omitempty"`
}

type Anon733 struct {
	Service []RSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon734 struct {
	LineAssociation []RLineAssociation `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociation,omitempty"`
}

type Anon735 struct {
	Unit []Anon736 `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
}

type Anon736 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon737         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

type Anon737 struct {
	Subunit []Anon738 `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
}

type Anon738 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon739 struct {
	Unit Anon740 `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
}

type Anon74 struct {
	Member []XRouteGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon740 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon741         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

type Anon741 struct {
	Subunit Anon742 `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
}

type Anon742 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon743 struct {
	Port []RAnalogPort `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

type Anon744 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon745 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon746 struct {
	Port []RT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

type Anon747 struct {
	Member []RPickupGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon748 struct {
	CallingPartyInfo Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
	CalledPartyInfo  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
}

type Anon749 struct {
	RelatedPolicy []RPolicyRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicy,omitempty"`
}

type Anon75 struct {
	RouteGroup RRouteGroup `xml:"http://www.cisco.com/AXL/API/9.0 routeGroup"`
}

type Anon750 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon751 struct {
	Destination []RSipTrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type Anon752 struct {
	AssociatedCucm []RSafForwarderMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucm,omitempty"`
}

type Anon753 struct {
	AssociatedTrunk []RCcdRequestingServiceMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunk,omitempty"`
}

type Anon754 struct {
	Unit []Anon755 `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
}

type Anon755 struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Anon756         `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

type Anon756 struct {
	Subunit []Anon757 `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
}

type Anon757 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon758 struct {
	Subunit []Anon759 `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
}

type Anon759 struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Anon76 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

type Anon760 struct {
	Server []Anon761 `xml:"http://www.cisco.com/AXL/API/9.0 server,omitempty"`
}

type Anon761 struct {
	HostName       string   `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
	LdapPortNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ldapPortNumber,omitempty"`
	SslEnabled     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 sslEnabled,omitempty"`
}

type Anon762 struct {
	Certificate []RVpnGatewayMember `xml:"http://www.cisco.com/AXL/API/9.0 certificate,omitempty"`
}

type Anon763 struct {
	VpnGateway []RVpnGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway,omitempty"`
}

type Anon764 struct {
	Member []RImeClientMember `xml:"http://www.cisco.com/AXL/API/9.0 member,omitempty"`
}

type Anon765 struct {
	CcmExternalIpMap []RCcmExternalIpMap `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMap,omitempty"`
}

type Anon766 struct {
	Role []RCertificateRole `xml:"http://www.cisco.com/AXL/API/9.0 role,omitempty"`
}

type Anon767 struct {
	Service []RTvsCertificateService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type Anon768 struct {
	Feature []RFeatureControlConfig `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
}

type Anon769 struct {
	ServiceProfileInfo []RServiceProfileList `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfo,omitempty"`
}

type Anon77 struct {
	RouteGroup []LRouteGroup `xml:"http://www.cisco.com/AXL/API/9.0 routeGroup,omitempty"`
}

type Anon770 struct {
	CodecNames []string `xml:"http://www.cisco.com/AXL/API/9.0 codecNames,omitempty"`
}

type Anon771 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

type Anon772 struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon773 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon774 struct {
	Line           RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon775 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon776 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon777 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon778 struct {
	Port []RT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

type Anon779 struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon78 struct {
	DevicePool RDevicePool `xml:"http://www.cisco.com/AXL/API/9.0 devicePool"`
}

type Anon780 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

type Anon781 struct {
	Enduser []REnduserMember `xml:"http://www.cisco.com/AXL/API/9.0 enduser,omitempty"`
}

type Anon782 struct {
	Line           RPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier RNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon783 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

type Anon784 struct {
	Enduser []UEnduserMember `xml:"http://www.cisco.com/AXL/API/9.0 enduser,omitempty"`
}

type Anon785 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon786 struct {
	Line           UPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line,omitempty"`
	LineIdentifier UNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier,omitempty"`
}

type Anon787 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon788 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon789 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon79 struct {
	Name                 string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	CallManagerGroupName string `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RegionName           string `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
}

type Anon790 struct {
	Port []UT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

type Anon791 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

func (t *Anon791) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon791
	var overlay struct {
		*T
		CallerName       *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
		CallerNumber     *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
		RedirectedNumber *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
		DialedNumber     *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallerName = (*Boolean)(&overlay.T.CallerName)
	overlay.CallerNumber = (*Boolean)(&overlay.T.CallerNumber)
	overlay.RedirectedNumber = (*Boolean)(&overlay.T.RedirectedNumber)
	overlay.DialedNumber = (*Boolean)(&overlay.T.DialedNumber)
	return d.DecodeElement(&overlay, &start)
}

type Anon792 struct {
	Enduser []XEnduserMember `xml:"http://www.cisco.com/AXL/API/9.0 enduser,omitempty"`
}

type Anon793 struct {
	Feature []XBLFSDOption `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
}

type Anon794 struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon795 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon796 struct {
	Line           XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon797 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon798 struct {
	Value  int  `xml:",chardata"`
	Enable bool `xml:"enable,attr,omitempty"`
}

type Anon799 struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type Anon8 struct {
	Member []XTimeScheduleTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type Anon80 struct {
	DevicePool []LDevicePool `xml:"http://www.cisco.com/AXL/API/9.0 devicePool,omitempty"`
}

type Anon800 struct {
	Port []XT1Port `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type Anon801 struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type Anon802 struct {
	DialParameter []XParameterMember `xml:"http://www.cisco.com/AXL/API/9.0 dialParameter"`
}

type Anon803 struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

func (t *Anon803) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon803
	var overlay struct {
		*T
		CallerName       *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
		CallerNumber     *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
		RedirectedNumber *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
		DialedNumber     *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallerName = (*Boolean)(&overlay.T.CallerName)
	overlay.CallerNumber = (*Boolean)(&overlay.T.CallerNumber)
	overlay.RedirectedNumber = (*Boolean)(&overlay.T.RedirectedNumber)
	overlay.DialedNumber = (*Boolean)(&overlay.T.DialedNumber)
	return d.DecodeElement(&overlay, &start)
}

type Anon804 struct {
	Enduser []XEnduserMember `xml:"http://www.cisco.com/AXL/API/9.0 enduser,omitempty"`
}

type Anon805 struct {
	Line           XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type Anon807 struct {
	Row []string `xml:"http://www.cisco.com/AXL/API/9.0 row,omitempty"`
}

type Anon809 struct {
	RowsUpdated int `xml:"http://www.cisco.com/AXL/API/9.0 rowsUpdated"`
}

type Anon81 struct {
	DeviceMobilityGroup RDeviceMobilityGroup `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroup"`
}

type Anon810 struct {
	UserAuthenticated Boolean `xml:"http://www.cisco.com/AXL/API/9.0 userAuthenticated"`
	Code              int     `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	DaysToExpiry      int     `xml:"http://www.cisco.com/AXL/API/9.0 daysToExpiry,omitempty"`
}

type Anon811 struct {
	Os XOSVersion `xml:"http://www.cisco.com/AXL/API/9.0 os"`
}

type Anon813 struct {
	Mobility RMobility `xml:"http://www.cisco.com/AXL/API/9.0 mobility"`
}

type Anon814 struct {
	EnterprisePhoneConfig XEnterprisePhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 enterprisePhoneConfig"`
}

type Anon815 struct {
	LicenseUnitReport XLicenseUnitReport `xml:"http://www.cisco.com/AXL/API/9.0 licenseUnitReport"`
}

type Anon816 struct {
	LdapSystem XLdapSystem `xml:"http://www.cisco.com/AXL/API/9.0 ldapSystem"`
}

type Anon817 struct {
	Server []Anon818 `xml:"http://www.cisco.com/AXL/API/9.0 server,omitempty"`
}

type Anon818 struct {
	HostName       string   `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
	LdapPortNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ldapPortNumber,omitempty"`
	SslEnabled     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 sslEnabled,omitempty"`
}

type Anon819 struct {
	LdapAuthentication XLdapAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 ldapAuthentication"`
}

type Anon82 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type Anon820 struct {
	Server []Anon821 `xml:"http://www.cisco.com/AXL/API/9.0 server,omitempty"`
}

type Anon821 struct {
	HostName       string   `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
	LdapPortNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ldapPortNumber,omitempty"`
	SslEnabled     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 sslEnabled,omitempty"`
}

type Anon822 struct {
	ComponentVersion ComponentVersion `xml:"http://www.cisco.com/AXL/API/9.0 componentVersion"`
}

type Anon823 struct {
	Unit []Anon824 `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
}

type Anon824 struct {
	Index XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

func (t *Anon824) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Anon824
	var overlay struct {
		*T
		Index *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	return d.DecodeElement(&overlay, &start)
}

type Anon825 struct {
	Subunit []Anon826 `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
}

type Anon826 struct {
	Index XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type Anon827 struct {
	FallbackFeatureConfig RFallbackFeatureConfig `xml:"http://www.cisco.com/AXL/API/9.0 fallbackFeatureConfig"`
}

type Anon828 struct {
	ImeLearnedRoutes RImeLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 imeLearnedRoutes"`
}

type Anon829 struct {
	ImeFeatureConfig RImeFeatureConfig `xml:"http://www.cisco.com/AXL/API/9.0 imeFeatureConfig"`
}

type Anon83 struct {
	DeviceMobilityGroup []LDeviceMobilityGroup `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroup,omitempty"`
}

type Anon830 struct {
	AppServerInfo RAppServerInfo `xml:"http://www.cisco.com/AXL/API/9.0 appServerInfo"`
}

// May be one of
type Anon831 string

type Anon832 struct {
	SoftKey []RSoftKeyMember `xml:"http://www.cisco.com/AXL/API/9.0 softKey,omitempty"`
}

type Anon833 struct {
	SoftKeySet RSoftKeySet `xml:"http://www.cisco.com/AXL/API/9.0 softKeySet"`
}

type Anon834 struct {
	CallState []RCallStateMember `xml:"http://www.cisco.com/AXL/API/9.0 callState,omitempty"`
}

type Anon835 struct {
	AlarmConfig []XSyslogConfig `xml:"http://www.cisco.com/AXL/API/9.0 AlarmConfig"`
}

type Anon836 struct {
	SyslogConfiguration RSyslogConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 syslogConfiguration"`
}

type Anon837 struct {
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName,omitempty"`
}

type Anon838 struct {
	LdapSyncCustomField []NewLLdapSyncCustomField `xml:"http://www.cisco.com/AXL/API/9.0 ldapSyncCustomField,omitempty"`
}

type Anon839 struct {
	IlsConfig NewIlsConfig `xml:"http://www.cisco.com/AXL/API/9.0 ilsConfig"`
}

type Anon84 struct {
	RelatedLocation []XLocationRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocation"`
}

type Anon840 struct {
	SNMPCommunityString RSNMPCommunityString `xml:"http://www.cisco.com/AXL/API/9.0 SNMPCommunityString"`
}

type Anon841 struct {
	SNMPUser RSNMPGetUser `xml:"http://www.cisco.com/AXL/API/9.0 SNMPUser"`
}

type Anon842 struct {
	SNMPMIB2List RSNMPMIB2List `xml:"http://www.cisco.com/AXL/API/9.0 SNMPMIB2List"`
}

type Anon843 struct {
	BillingServer RBillingServer `xml:"http://www.cisco.com/AXL/API/9.0 billingServer"`
}

// May be one of Africa/Abidjan, Africa/Accra, Africa/Addis_Ababa, Africa/Algiers, Africa/Asmara, Africa/Bamako, Africa/Bangui, Africa/Banjul, Africa/Bissau, Africa/Blantyre, Africa/Brazzaville, Africa/Bujumbura, Africa/Cairo, Africa/Casablanca, Africa/Ceuta, Africa/Conakry, Africa/Dakar, Africa/Dar_es_Salaam, Africa/Djibouti, Africa/Douala, Africa/El_Aaiun, Africa/Freetown, Africa/Gaborone, Africa/Harare, Africa/Johannesburg, Africa/Kampala, Africa/Khartoum, Africa/Kigali, Africa/Kinshasa, Africa/Lagos, Africa/Libreville, Africa/Lome, Africa/Luanda, Africa/Lubumbashi, Africa/Lusaka, Africa/Malabo, Africa/Maputo, Africa/Maseru, Africa/Mbabane, Africa/Mogadishu, Africa/Monrovia, Africa/Nairobi, Africa/Ndjamena, Africa/Niamey, Africa/Nouakchott, Africa/Ouagadougou, Africa/Porto-Novo, Africa/Sao_Tome, Africa/Tripoli, Africa/Tunis, Africa/Windhoek, America/Adak, America/Anchorage, America/Anguilla, America/Antigua, America/Araguaina, America/Argentina/Buenos_Aires, America/Argentina/Catamarca, America/Argentina/Cordoba, America/Argentina/Jujuy, America/Argentina/La_Rioja, America/Argentina/Mendoza, America/Argentina/Rio_Gallegos, America/Argentina/Salta, America/Argentina/San_Juan, America/Argentina/San_Luis, America/Argentina/Tucuman, America/Argentina/Ushuaia, America/Aruba, America/Asuncion, America/Atikokan, America/Bahia, America/Barbados, America/Belem, America/Belize, America/Blanc-Sablon, America/Boa_Vista, America/Bogota, America/Boise, America/Cambridge_Bay, America/Campo_Grande, America/Cancun, America/Caracas, America/Cayenne, America/Cayman, America/Chicago, America/Chihuahua, America/Costa_Rica, America/Cuiaba, America/Curacao, America/Danmarkshavn, America/Dawson, America/Dawson_Creek, America/Denver, America/Detroit, America/Dominica, America/Edmonton, America/Eirunepe, America/El_Salvador, America/Fortaleza, America/Glace_Bay, America/Godthab, America/Goose_Bay, America/Grand_Turk, America/Grenada, America/Guadeloupe, America/Guatemala, America/Guayaquil, America/Guyana, America/Halifax, America/Havana, America/Hermosillo, America/Indiana/Indianapolis, America/Indiana/Knox, America/Indiana/Marengo, America/Indiana/Petersburg, America/Indiana/Tell_City, America/Indiana/Vevay, America/Indiana/Vincennes, America/Indiana/Winamac, America/Inuvik, America/Iqaluit, America/Jamaica, America/Juneau, America/Kentucky/Louisville, America/Kentucky/Monticello, America/La_Paz, America/Lima, America/Los_Angeles, America/Maceio, America/Managua, America/Manaus, America/Marigot, America/Martinique, America/Mazatlan, America/Menominee, America/Merida, America/Mexico_City, America/Miquelon, America/Moncton, America/Monterrey, America/Montevideo, America/Montreal, America/Montserrat, America/Nassau, America/New_York, America/Nipigon, America/Nome, America/Noronha, America/North_Dakota/Center, America/North_Dakota/New_Salem, America/Panama, America/Pangnirtung, America/Paramaribo, America/Phoenix, America/Port-au-Prince, America/Port_of_Spain, America/Porto_Velho, America/Puerto_Rico, America/Rainy_River, America/Rankin_Inlet, America/Recife, America/Regina, America/Resolute, America/Rio_Branco, America/Santarem, America/Santiago, America/Santo_Domingo, America/Sao_Paulo, America/Scoresbysund, America/Shiprock, America/St_Barthelemy, America/St_Johns, America/St_Kitts, America/St_Lucia, America/St_Thomas, America/St_Vincent, America/Swift_Current, America/Tegucigalpa, America/Thule, America/Thunder_Bay, America/Tijuana, America/Toronto, America/Tortola, America/Vancouver, America/Whitehorse, America/Winnipeg, America/Yakutat, America/Yellowknife, Antarctica/Casey, Antarctica/Davis, Antarctica/DumontDUrville, Antarctica/Mawson, Antarctica/McMurdo, Antarctica/Palmer, Antarctica/Rothera, Antarctica/South_Pole, Antarctica/Syowa, Antarctica/Vostok, Arctic/Longyearbyen, Asia/Aden, Asia/Almaty, Asia/Amman, Asia/Anadyr, Asia/Aqtau, Asia/Aqtobe, Asia/Ashgabat, Asia/Baghdad, Asia/Bahrain, Asia/Baku, Asia/Bangkok, Asia/Beirut, Asia/Bishkek, Asia/Brunei, Asia/Choibalsan, Asia/Chongqing, Asia/Colombo, Asia/Damascus, Asia/Dhaka, Asia/Dili, Asia/Dubai, Asia/Dushanbe, Asia/Gaza, Asia/Harbin, Asia/Ho_Chi_Minh, Asia/Hong_Kong, Asia/Hovd, Asia/Irkutsk, Asia/Istanbul, Asia/Jakarta, Asia/Jayapura, Asia/Jerusalem, Asia/Kabul, Asia/Kamchatka, Asia/Karachi, Asia/Kashgar, Asia/Kathmandu, Asia/Kolkata, Asia/Krasnoyarsk, Asia/Kuala_Lumpur, Asia/Kuching, Asia/Kuwait, Asia/Macau, Asia/Magadan, Asia/Makassar, Asia/Manila, Asia/Muscat, Asia/Nicosia, Asia/Novosibirsk, Asia/Omsk, Asia/Oral, Asia/Phnom_Penh, Asia/Pontianak, Asia/Pyongyang, Asia/Qatar, Asia/Qyzylorda, Asia/Rangoon, Asia/Riyadh, Asia/Riyadh87, Asia/Riyadh88, Asia/Riyadh89, Asia/Sakhalin, Asia/Samarkand, Asia/Seoul, Asia/Shanghai, Asia/Singapore, Asia/Taipei, Asia/Tashkent, Asia/Tbilisi, Asia/Tehran, Asia/Thimphu, Asia/Tokyo, Asia/Ulaanbaatar, Asia/Urumqi, Asia/Vientiane, Asia/Vladivostok, Asia/Yakutsk, Asia/Yekaterinburg, Asia/Yerevan, Atlantic/Azores, Atlantic/Bermuda, Atlantic/Canary, Atlantic/Cape_Verde, Atlantic/Faroe, Atlantic/Madeira, Atlantic/Reykjavik, Atlantic/South_Georgia, Atlantic/Stanley, Atlantic/St_Helena, Australia/Adelaide, Australia/Brisbane, Australia/Broken_Hill, Australia/Currie, Australia/Darwin, Australia/Eucla, Australia/Hobart, Australia/Lindeman, Australia/Lord_Howe, Australia/Melbourne, Australia/Perth, Australia/Sydney, CET, CST6CDT, EET, EST, EST5EDT, Etc/GMT, Etc/GMT0, Etc/GMT-0, Etc/GMT+0, Etc/GMT-1, Etc/GMT+1, Etc/GMT-10, Etc/GMT+10, Etc/GMT-11, Etc/GMT+11, Etc/GMT-12, Etc/GMT+12, Etc/GMT-13, Etc/GMT-14, Etc/GMT-2, Etc/GMT+2, Etc/GMT-3, Etc/GMT+3, Etc/GMT-4, Etc/GMT+4, Etc/GMT-5, Etc/GMT+5, Etc/GMT-6, Etc/GMT+6, Etc/GMT-7, Etc/GMT+7, Etc/GMT-8, Etc/GMT+8, Etc/GMT-9, Etc/GMT+9, Etc/Greenwich, Etc/UCT, Etc/Universal, Etc/UTC, Etc/Zulu, Europe/Amsterdam, Europe/Andorra, Europe/Athens, Europe/Belgrade, Europe/Berlin, Europe/Bratislava, Europe/Brussels, Europe/Bucharest, Europe/Budapest, Europe/Chisinau, Europe/Copenhagen, Europe/Dublin, Europe/Gibraltar, Europe/Guernsey, Europe/Helsinki, Europe/Isle_of_Man, Europe/Istanbul, Europe/Jersey, Europe/Kaliningrad, Europe/Kiev, Europe/Lisbon, Europe/Ljubljana, Europe/London, Europe/Luxembourg, Europe/Madrid, Europe/Malta, Europe/Mariehamn, Europe/Minsk, Europe/Monaco, Europe/Moscow, Europe/Nicosia, Europe/Oslo, Europe/Paris, Europe/Podgorica, Europe/Prague, Europe/Riga, Europe/Rome, Europe/Samara, Europe/San_Marino, Europe/Sarajevo, Europe/Simferopol, Europe/Skopje, Europe/Sofia, Europe/Stockholm, Europe/Tallinn, Europe/Tirane, Europe/Uzhgorod, Europe/Vaduz, Europe/Vatican, Europe/Vienna, Europe/Vilnius, Europe/Volgograd, Europe/Warsaw, Europe/Zagreb, Europe/Zaporozhye, Europe/Zurich, HST, Indian/Antananarivo, Indian/Chagos, Indian/Christmas, Indian/Cocos, Indian/Comoro, Indian/Kerguelen, Indian/Mahe, Indian/Maldives, Indian/Mauritius, Indian/Mayotte, Indian/Reunion, MET, Mideast/Riyadh87, Mideast/Riyadh88, Mideast/Riyadh89, MST, MST7MDT, Pacific/Apia, Pacific/Auckland, Pacific/Chatham, Pacific/Easter, Pacific/Efate, Pacific/Enderbury, Pacific/Fakaofo, Pacific/Fiji, Pacific/Funafuti, Pacific/Galapagos, Pacific/Gambier, Pacific/Guadalcanal, Pacific/Guam, Pacific/Honolulu, Pacific/Johnston, Pacific/Kiritimati, Pacific/Kosrae, Pacific/Kwajalein, Pacific/Majuro, Pacific/Marquesas, Pacific/Midway, Pacific/Nauru, Pacific/Niue, Pacific/Norfolk, Pacific/Noumea, Pacific/Pago_Pago, Pacific/Palau, Pacific/Pitcairn, Pacific/Ponape, Pacific/Port_Moresby, Pacific/Rarotonga, Pacific/Saipan, Pacific/Tahiti, Pacific/Tarawa, Pacific/Tongatapu, Pacific/Truk, Pacific/Wake, Pacific/Wallis, PST8PDT, WET
type Anon844 string

// May be one of No Changes, Use Local Value, Use Global Value ISO, Use Global Value ECMA
type Anon845 string

// May be one of FALSE, TRUE, DEFAULT
type Anon846 string

// May be one of Success, Failure, Invalid range for directory numbers, Not yet implemented. See log for more detail, Model and class are not compatible.  See log for more detail, Missing/invalid parameters. See log for more detail, Device does not suppport MLPP, Device does not support preemption, User is not a valid end user or application user, Missing default phone template, Encountered unexpected database datatype.  See log for more detail, Updated failed. A required item was not found in the database, The Cisco CallManager Group cannot be deleted because it is used by related records. Click Dependency Records to view related records and remove this Cisco CallManager Group from any item that is using it then try again., One or more Cisco CallManager Groups could not be deleted because it is used by related records. Select a Cisco CallManager Group and click the Dependancy Records link on the Cisco CallManager Configuration page to see what is using it., Cannot create DNs or duplicate DNs for the ports. Please check if a DN range is available., Partition name cannot be empty string., Change failed - Current Password is incorrect., Change failed - New Password does not match Confirm Password., Change failed - Current PIN is incorrect., Change failed - New PIN does not match Confirm PIN., Fastdials index already in use. Please choose another index., Fastdials phone number already in use. Please choose another phone number., Cisco Unity Connection Server returned a SQL Exception.  Please check the log file., Unable to delete user account from Cisco Unity Connection Server.  Please check the log file., File uploaded does not have extension .lic.  Please upload a license file with extension .lic., A file with this name already exists in the license file directory.  Please upload a file with a different name., Unable to obtain certificate for this IP address/Port.  SRST reference has been changed to non-secured and saved. Please disable the security services on the gateway if you do not use the security feature., DN/Route Pattern must be the last search parameter when using the Search Within Results option., Route Group Name and Directory Number are not allowed in the same search., user is not member of super access control group. Cannot add to groups the roles which are only accessible to super users, Only super users can update members of super access control groups, Users who are not super users cannot add him/herself to access control groups, Propagation failed for some devices. See log for a list of failed devices., Change failed - Credential locked. Please contact your administrator., Change failed - Credential locked due to inactivity. Please contact your administrator., Unknown credential validation error.  Please contact your administrator., Upload Failed. Please upload a valid Audio File., Import Failed. Please import a valid file., Normalization Script Parameters are formatted incorrectly., The maximum number of custom announcements have been added. Please use an existing announcement if one is available that meets your needs or delete an existing unused announcement to add a new one., Not all the phones are moved successfully. The following phone(s) failed to be moved: {0}., The combination of Universal Device Template, Phone model and End User is not valid, because it results in a shared line on a device that does not support shared lines. Check the Directory Number associated with the End User to determine which Directory Number is causing the problem., The combination of Universal Device Template, Phone model and End User is not valid, because it results in a shared line on a protected device, which is not allowed. Check the Directory Numbers associated with the End User to determine which Directory Number is causing the problem, or turn off the protected device setting on the Universal Device Template., The combination of Universal Device Template, Phone model and  End User is not valid, because it results in an auto answer line on a device that does not support auto answer. Check the Directory Numbers associated with the End User to determine which Directory Number is causing the problem, and turn off auto answer on that Directory Number., Could not delete Audio Codec Preference List because it is currently selected as a default audio codec on the Service Parameters page, Logged in user is not a super user and does not have authority to add users to administrative access control groups, Upload failed - Application is out of memory. Please check system resources and try again., Wrong Credential., Administrative Lock., Hack Lock., Inactive Lock., Expired Lock., Expired Lock (with ability to change)., End user status is INACTIVE in LDAP., LDAP authentication enabled. UpdateCredential failure., Invalid credential length., Trivial credential., Duplicate credential., Too recently used Credential., User does not have permission to change this credential., There is no credential value for the given credential name., There is no credential type for the given credential name., LDAP communication error. Please check log file., User type not defined. Please check log file., Failed to update Credential. Please check log file., Not a valid application user. Please check log file., Database communication error. Please check log file., Invalid credential information. Please check log file.
type Anon847 string

// May be one of Emergency, Alert, Critical, Error, Warning, Notice, Informational, Debug
type Anon848 string

// May be one of Default
type Anon849 string

type Anon85 struct {
	BetweenLocation []XLocationBetween `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocation"`
}

// May be one of Redirect to App, Redirect to Device
type Anon850 string

// May be one of Cisco Unity Voice Mail 4.x or later, Cisco Unity Connection, Cisco Unified CM IM and Presence, CUMA Provisioning Server, CER Location Management, Cisco Web Dialer, Remote Syslog Server
type Anon851 string

// May be one of UNITY KUBRIK, UNITY PRE KUBRIK
type Anon852 string

// May be one of Cisco Call Manager Administration, Cisco Call Manager Serviceability, Cisco Computer Telephone Interface (CTI), Cisco Call Manager AXL Database, Cisco Extension Mobility, Cisco Call Manager End User, Cisco Unified Reporting, Cisco Call Manager Dialed Number Analyser
type Anon853 string

// May be one of Original Dial Rule, Directory Dial Rule
type Anon854 string

// May be one of Never, Always, Per Call
type Anon855 string

// May be one of Default
type Anon856 string

// May be one of By Authentication String, By Null String, By Existing Certificate (precedence to LSC), By Existing Certificate (precedence to MIC)
type Anon857 string

// May be one of Auto Answer Off, Auto Answer with Headset, Auto Answer with Speakerphone
type Anon858 string

// May be one of None, Insert Files, Export Files, Report Files, Custom Files, Log Files, BAT Excel Template, Tar Files
type Anon859 string

type Anon86 struct {
	Location RLocation `xml:"http://www.cisco.com/AXL/API/9.0 location"`
}

// May be one of None, Specific, All
type Anon860 string

// May be one of Once, Monthly, Weekly, Daily, Hourly
type Anon861 string

// May be one of Insert Phones - All Details, Insert Phones - Specific Details, Insert Users, Insert UDP - All Details, Insert UDP - Specific Details, Insert Gateways, Insert CAT6k FXS Ports, Insert Pickup Groups, Insert Forced Authorization Codes, Insert Client Matter Codes, Insert Phones/users, Insert Managers, Insert Assistants, Insert Manager/Assistants, Delete Phones - Query, Delete UDP - Query, Delete Users - Query, Delete Managers - Query, Delete Assistants - Query, Delete Lines - Query, Delete Pickup Groups - Query, Delete Client Matter Codes, Delete Forced Authorization Codes, Delete Gateways - Query, Delete Phones - Custom File, Delete Users - Custom File, Delete Managers - Custom File, Delete CAT6k FXS Ports, Delete Managers/Assistants, Update Phones - Query, Update Users - Query, Update Phones - Custom File, Update Users - Custom File, Update CAT6k FXS Ports - Custom File, Phone Add Lines, Reset/Restart Phones Query, Reset/Restart Phones Custom File, Generate Phone Reports, Generate User Reports, Generate Manager Reports, Generate Assistant Reports, Generate User Device Profile Reports, Generate Gateway Reports, Export Phones - All Details, Export Phones - Specific Details, Export UDP - All Details, Export UDP - Specific Details, Export Users, Reset users Pwd/Pin Query, Reset users Pwd/Pin Custom, Phone CAPF Configuration, Generate UDP, Delete Assistants - Custom File, Add Phone File Format, Add UDP File Format, Add User File Format, Phone File Format, UDP File Format, User File Format, Delete UDP - Custom File, Delete VG200 Gateways - Custom File, Validate Phones - All Details, Validate Phones - Specific Details, Validate UDP - All Details, Validate UDP - Specific Details, Validate Users, UDP Add Lines, Update Phones - CSV File, Update Lines - Query, Validate Phones/Users, BAT Excel CSV Tool, Manager File Format, Assistant File Format, Add Phones Users File Format, Migrate Phones - SCCP TO SIP, Export Configuration, Import Configuration, Update CUP Users - Custom File, Export CUP Users, Populate/Depopulate Region Matrix, Update Line Appearance - Custom File, Export Line Appearance, Insert Access List, Delete Access List, Export Access List, Access List File Format, Insert Remote Destination Profiles, Delete Remote Destination Profiles, Export Remote Destination Profiles, Insert Remote Destination, Delete Remote Destination, Export Remote Destination, Remote Destination File Format, Remote Destination Profile File Format, Add Remote Destination Profile File Format, config Dependency File, Update Intercom DNs - Query, Insert Intercom DNs, Add Gateway File Format, Gateway File Format, Validate Configuration Items, Delete Unassigned DN - Query, Insert UDP Intercom DNs, Phone Migration, Insert EMCC, Update EMCC, Delete EMCC, EMCC Template, Insert Exclusion Group, Delete Exclusion Group, Insert Trust Group, Delete Trust Group, Insert Trust Element, Delete Trust Element, Insert Enrolled Group, Delete Enrolled Group, Insert FallBack Profile, Delete FallBack Profile, Insert End User CAPF Profile, Delete End User CAPF Profile, Export End User CAPF Profile, End User CAPF Profile Format, Insert Mobility Profile, Delete Mobility Profile, Export Mobility Profile, Mobility Profile Format, Update UDP - Query, Update UDP - Custom File, Insert Imported Directory URIs
type Anon862 string

// May be one of Pending, Stop Requested, Processing, Completed, InComplete, Hold
type Anon863 string

// May be one of Success, Error
type Anon864 string

// May be one of None, Phones, Users, UDP, Gateways, CAT6k FXS Ports, Lines, Pickup Groups, Forced Authorization Codes, Client Matter Codes, CAPF, Phones/users, Managers, Assistants, Managers Assistants, Import/Export, CUP Users, User Line Appearance, Access Lists, Remote Destination Profiles, Remote Destination, Intercompany Media Services, Mobility Profile, Imported Directory URIs
type Anon865 string

// May be one of Select, Set Values, File Format, UI Values, System File Format, Display Query
type Anon866 string

// May be one of Pickup
type Anon867 string

// May be one of Keep Current Setting, Use System Default, G.723, G.729, GSM, G.728, AMR-WB, iSAC, G.711, AAC-LD-LATM, Wideband
type Anon868 string

// May be one of Off, Barge, CBarge, Default
type Anon869 string

type Anon87 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

// May be one of SFTP, FTP
type Anon870 string

// May be one of bit 1, bit 2, bit 3, bit 4, bit 5, bit 6, bit 7, bit 8, bit 9, bit 10, bit 11, bit 12, bit 13, bit 14, bit 15, bit 16, bit 17, bit 18, bit 19, bit 20, bit 21, bit 22, bit 23, bit 24, bit 25, bit 26, bit 27, bit 28, bit 29, bit 30, bit 31, bit 32
type Anon871 string

// May be one of No, Yes
type Anon872 string

// May be one of BRI NET3, NI, QSIG
type Anon873 string

// May be one of Use System Default, With Configured CSS, With Activating Device/Line CSS
type Anon874 string

// May be one of Emergency Calls, Internal Calls, Inter Cluster Calls, Local Calls, Toll Free Calls, Long Distance Calls, International Calls
type Anon875 string

// May be one of Emergency Calls, Internal Calls, Inter Cluster Calls, Local Other Calls, Local Only Calls with area code, Local Only Calls without area code, Toll Free Calls, Long Distance Calls, International Calls
type Anon876 string

// May be one of 0dB, -7.5dB, -15dB, -22.5dB
type Anon877 string

// May be one of Original Dialed Number, Redirected Dialed Number, Caller Number, Caller Name
type Anon878 string

// May be one of On Hook, Connected, On Hold, Ring In, Off Hook, Connected Transfer, Digits After First, Connected Conference, Ring Out, Off Hook With Feature, Remote In Use, Connected No Feature
type Anon879 string

type Anon88 struct {
	Location []LLocation `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
}

// May be one of Allow Calls, Block Calls
type Anon880 string

// May be one of Directory Number, Not Available, Private
type Anon881 string

// May be one of ANI, DNIS
type Anon882 string

// May be one of Default, Strict From URI presentation Only, Strict Identity Headers presentation Only
type Anon883 string

// May be one of Originator, First Redirect Number, Last Redirect Number, First Redirect Number (External), Last Redirect Number (External)
type Anon884 string

// May be one of Long Distance Fixed, Long Distance Mobile, International
type Anon885 string

// May be one of Unknown, No Certificate Exists, Locally Significant Certificate, Manufacture Installed Certificate Exists, Locally Significant Certificate and Manufacture Installed Certificate Exists
type Anon886 string

// May be one of No Pending Operation, Install/Upgrade, Delete, Troubleshoot
type Anon887 string

// May be one of Phone-trust, Phone-VPN-trust, CallManager, CallManager-trust, tomcat, tomcat-trust, ipsec, ipsec-trust, CAPF, CAPF-trust, TVS, TVS-trust, directory-trust, Phone-SAST-trust, Phone-CTL-trust, userlicensing-trust
type Anon888 string

// May be one of None, Operation Pending, Upgrade Success, Delete Success, Troubleshoot Success, Upgrade Failed, Delete Failed, Troubleshoot Failed, Upgrade Failed: Invalid LSC, Upgrade Failed: Invalid Authentication String, Upgrade Failed: Invalid MIC, Upgrade Failed: Invalid Credentials, Upgrade Failed: Phone Communication Failure, Upgrade Failed: Key Generation Failed/Timeout, Upgrade Failed: CA Communication Failure, Upgrade Failed: CA Rejected Connection, Upgrade Failed: User Initiated Request Late/Timedout, Delete Failed: Invalid LSC, Delete Failed: Invalid Authentication String, Delete Failed: Invalid MIC, Delete Failed: Invalid Credentials, Delete Failed: Phone Communication Failure, Delete Failed: Key Generation Failed/Timeout, Delete Failed: CA Communication Failure, Delete Failed: CA Rejected Connection, Delete Failed: User Initiated Request Late/Timedout, Troubleshoot Failed: Invalid LSC, Troubleshoot Failed: Invalid Authentication String, Troubleshoot Failed: Invalid MIC, Troubleshoot Failed: Invalid Credentials, Troubleshoot Failed: Phone Communication Failure, Troubleshoot Failed: Key Generation Failed/Timeout, Troubleshoot Failed: User Initiated Request Late/Timedout
type Anon889 string

type Anon89 struct {
	SoftKeyTemplate RSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplate"`
}

// May be one of Any Certificate, Self-signed or Keystore, Keystore Only
type Anon890 string

// May be one of User, Line, Phone
type Anon891 string

// May be one of Phone, Gateway, Conference Bridge, Media Termination Point, Route List, Voice Mail, CTI Route Point, Music On Hold, Simulation, Pilot, GateKeeper, Add-on modules, Hidden Phone, Trunk, Tone Announcement Player, Remote Destination Profile, EMCC Base Phone Template, EMCC Base Phone, Remote Destination Profile Template, Gateway Template, UDP Template, Phone Template, Device Profile, Invalid
type Anon892 string

// May be one of None, Standard, CUMA Client
type Anon893 string

// May be one of Network, Internal, Span 1, Span 2, Span 3, Span 4, Span 5, Span 6, Span 7, Span 8
type Anon894 string

// May be one of G.711 A-Law 64k, G.711 A-Law 56k, G.711 U-Law 64k, G.711 U-Law 56k, G.722 64k, G.722 56k, G.722 48k, G.723.1 7k, G.728 16k, G.729 8k, G.729a 8k, G.729b 8k, G.729ab 8k, GSM Full Rate 13k, GSM Half Rate 6k, GSM Enhanced Full Rate 13k, L16 256k, G.722.1 32k, G.722.1 24k, AAC-LD (MP4A Generic), MP4A-LATM 128k, MP4A-LATM 64k, MP4A-LATM 56k, MP4A-LATM 48k, MP4A-LATM 32k, MP4A-LATM 24k, ILBC 16k, ISAC 32k, AMR (5k-13k), AMR-WB (7k-24k)
type Anon895 string

// May be one of Application Dial Rules, Cisco Unified Communications Manager, Cisco Unified Communications Manager Group, Calling Search Space, Date/Time Group, Device Pool, Enterprise Parameters, Location, Partition (Class of Control), Phone NTP Reference, Region, Route Filter, Server, Service Parameters, SRST, Security Profile (Phone & SIP Trunk), Time Period, Time Schedule, Translation Pattern, AAR Group, Annunciator, Conference Bridge, Media Resource Group, Media Resource Group List, Media Termination Point, Physical Location, Device Mobility Group, Transcoder, SIP Realm, Application User, Access Control Group, Role, Application User CAPF Profile, Presence Group, Credential Policy Default, Credential Policy, LDAP System, End User, End User CAPF Profile, Softkey Template, Gatekeeper, Trunk, SIP Profile, Phone Services, Forced Authorization Codes, Phone Button Template, Directory Lookup Dial Rules, Common Phone Profile, Client Matter Codes, Call Park, Call Pickup Group, Directory Number (Unassigned), Message Waiting Numbers, Music On Hold Server, Meet-Me Number / Pattern, Device Mobility Info, DHCP Server, DHCP Subnet, Gateway, Voice Mail Pilot, Voice Mail Profile, Voice Mail Port, Device Defaults, Device Profile, Common Device Configuration, CTI Route Point, Application Server, Phone, Directed Call Park, SIP Dial Rules, LDAP Directory, LDAP Authentication, MLPP Domain, Line Group, Route Group, Recording Profile, Hunt List, Route List, Hunt Pilot, Remote Destination, Intercom Route Partition, Intercom CSS, Access List, Remote Destination Profile, Route Pattern, Called Party Transformation Pattern, SIP Route Pattern, Intercom Directory Number (Unassigned), SlotConfiguration, PRI, BRI, T1CAS, FXS, FXO, ANALOG, H323, VGC, CAT6K, CAT6K E1 VOIP, CAT6K T1 PRI, Mobile Voice Access, Resource Priority Namespace Network Domain, Intercom Translation Pattern, Resource Priority Namespace List, Calling Party Transformation Pattern, CUMA Server Security Profile, CAT6K T1 CAS, Geo Location Configuration, Geo Location Filter, Logical Partition Policy Configuration, Enterprise Phone Configuration, SAF Forwarder, Requesting Service, SAF Security Profile, Hosted DN Group, Block Learned Pattern, Hosted DN Patterns, Advertising Service, EMCC Remote Cluster, EMCC Intercluster Service Profile, External Call Control Profile, Intercompany Media Engine Server Connections, Intercompany Media Service, Intercompany Media Services Trust Group, Intercompany Media Services Trust Element, Intercompany Media Services Enrolled Pattern, Intercompany Media Services Enrolled Group, Intercompany Media Services Exclusion Group, Fallback Profile, Intercompany Media Services Learned Route, Certificate, VPN Profile, VPN Gateway, VPN Group, Feature Control Policy, EMCC Feature Configuration, Intercompany Media Services Firewall, LDAP Custom Filter, Intercompany Media Services Exclusion Number, Intercompany Media Services E.164 Transformation, Intercompany Media Services Feature Configuration, Fallback Feature Configuration, Transformation Profile, VPN Feature Configuration, CCD Feature Configuration, CCD Partition, Default Device Profile, IPMA Configuration, Mobility Profile, Handoff Configuration, Enterprise Feature Access Configuration, SIP Normalization Script, Called Party Tracing, E1 R2, Location Bandwidth Manager Group, Location Edge Configaration, UC Service, Service Profile, Audio Codec Preference Lists
type Anon896 string

// May be one of None, System Data, Call Routing Data, Media Resources Data, User Data, Device Data, Advanced Features
type Anon897 string

// May be one of HTTP, HTTPS, TCP, TCP + UDP, UDP, SSL, TLS, SIP, OWA, SOAP, EWS, XMPP
type Anon898 string

// May be one of None, Siemens Hicom, Ericsson MD-110, Alcatel PBX, Meridian Option 11C, Lucent Definity G3, IPC MX, Cisco CCM
type Anon899 string

type Anon9 struct {
	TimeSchedule RTimeSchedule `xml:"http://www.cisco.com/AXL/API/9.0 timeSchedule"`
}

type Anon90 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

// May be one of E1 PRI, T1 PRI, T1 CAS, FXO, SIP Trunk, E1 R2
type Anon900 string

// May be one of All Call Types, Emergency Calls Only
type Anon901 string

// May be one of 'Corporate / Federated Domain User', 'Private Manually Entered Contact', 'Enterprise User Group As Contact / Buddy Reference'
type Anon902 string

// May be one of Default
type Anon903 string

// May be one of 'General Purpose Contact Folder', 'Contact Folder to contain BuddyList members'
type Anon904 string

// May be one of Argentina, Australia, Austria, Belgium, Brazil, Canada, China, Colombia, Cyprus, Czech Republic, Denmark, Egypt, Finland, France, Germany, Ghana, Greece, Hong Kong, Hungary, Iceland, India, Indonesia, Ireland, Israel, Italy, Japan, Jordan, Kenya, Korea Republic, Lebanon, Luxembourg, Malaysia, Mexico, Nepal, Netherlands, New Zealand, Nigeria, Norway, Pakistan, Panama, Peru, Philippines, Poland, Portugal, Russian Federation, Saudi Arabia, Singapore, Slovakia, Slovenia, South Africa, Spain, Sweden, Switzerland, Taiwan, Thailand, Turkey, United Kingdom, United States, Venezuela, Zimbabwe, Itu, Chile, Bulgaria, Croatia, Romania, Serbia and Montenegro, United Arab Emirates, Oman, Kuwait, Algeria, Bahrain, Iraq, Mauritania, Republic of Montenegro, Morocco, Qatar, Republic of Serbia, Sudan, Tunisia, Vietnam, Yemen, Lithuania, Latvia, Estonia
type Anon905 string

// May be one of Password, PIN
type Anon906 string

// May be one of End User, Application User
type Anon907 string

// May be one of CUCMBE3000, ISR2901, SPA8800, BE3000
type Anon908 string

// May be one of Analog Phones, Hardware IP Phones, Software IP Phones, Dual Mode Phones
type Anon909 string

type Anon91 struct {
	SoftKeyTemplate []LSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplate,omitempty"`
}

// May be one of CustomField1, CustomField2, CustomField3, CustomField4, CustomField5
type Anon910 string

// May be one of Ringer Off, Call Reject, Use Common Phone Profile Setting
type Anon911 string

// May be one of Undefined, Primary, ICD
type Anon912 string

// May be one of telnet, ssh, https, ftp, sftp, smtp
type Anon913 string

// May be one of Scheduled Collection, Scheduled Trace Modification and Collection
type Anon914 string

// May be one of Scheduled, Running, Completed, Pending, Aborted, Canceled
type Anon915 string

// May be one of Cisco Unified Communications Manager, Cisco Unified Communications Manager Business Edition, Cisco Unified Customer Voice Portal, Cisco Unified Intelligent Contact Management Enterprise, Cisco Unified Contact Center Express, IOS Gateway Devices, Cisco Unified Expert Advisor, Cisco Unity Connection, Cisco Unified Presence, Cisco Unified Contact Center Enterprise, Other
type Anon916 string

// May be one of Level 0, Level 1, Level 2, Level 3, Custom, No Change
type Anon917 string

// May be one of Not Done, Failed, Success
type Anon918 string

// May be one of REST, SOAP, Not Applicable
type Anon919 string

type Anon92 struct {
	Transcoder RTranscoder `xml:"http://www.cisco.com/AXL/API/9.0 transcoder"`
}

// May be one of No Preference, Out of Band, RFC 2833, OOB and RFC 2833
type Anon920 string

// May be one of SMALLINT, INTEGER, INT8, INT
type Anon921 string

// May be one of Last, None, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
type Anon922 string

// May be one of Sun, Mon, Tue, Wed, Thu, Fri, Sat, None
type Anon923 string

// May be one of Presence Status Report
type Anon924 string

// May be one of SCCP, Digital Access PRI, H.225, Analog Access, Digital Access T1, Route Point, Unicast Bridge, Multicast Point, Inter-Cluster Trunk, RAS, Digital Access BRI, SIP, MGCP, Static SIP Mobile Subscriber, SIP Connector, Remote Destination, Mobile Smart Client, Digital Access E1 R2, CTI Remote Device, Protocol Not Specified
type Anon925 string

// May be one of Non Secure, Authenticated, Encrypted
type Anon926 string

// May be one of Not Trusted, Trusted
type Anon927 string

// May be one of Pattern, Button, Timeout, User
type Anon928 string

// May be one of 7905_7912, 7940_7960_OTHER
type Anon929 string

type Anon93 struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

// May be one of Dial via Office Reverse, Dial via Office Forward
type Anon930 string

// May be one of DTMF, MF, PULSE
type Anon931 string

// May be one of Top Down, Circular, Longest Idle Time, Broadcast
type Anon932 string

// May be one of Default
type Anon933 string

// May be one of NotRegistered, Registered
type Anon934 string

// May be one of Backup, Restore
type Anon935 string

// May be one of No Location Information, Off Premise Location Needed, Off Premise Declined, On Premise Location Not Needed, Off Premise Have Location, Off Premise Location Update Failed
type Anon936 string

// May be one of Agreement, Disclaimer, Error
type Anon937 string

// May be one of Default
type Anon938 string

// May be one of A-law, u-law
type Anon939 string

type Anon94 struct {
	Transcoder []LTranscoder `xml:"http://www.cisco.com/AXL/API/9.0 transcoder,omitempty"`
}

// May be one of Single Server Round Robin, Primary Fail Over Secondary, Load Share Write Primary, Load Share Write Anywhere
type Anon940 string

// May be one of AT&T 54016, ANSI T1.403 NI, ANSI T1.403.CI, None
type Anon941 string

// May be one of Calling device AAR Calling Search Space, Trunk ReRoute Calling Search Space
type Anon942 string

// May be one of Disable Fallback (No PSTN fallback option), Utility (Lowest tolerable quality, not for extended duration calls), Accommodative (Minimum acceptable quality), Nominal (Default sensitivity, almost all enterprise deployments qualify), Moderate (More sensitive, not all deployments qualify), Aggressive (Most sensitive, not all deployments qualify)
type Anon943 string

// May be one of Redial, Speed Dial, Hold, Transfer, Forward All, Display, Line, Chat, Whiteboard, Application Sharing, File Transfer, Video, Message Waiting, Answer/Release, Auto Answer, Settings, Privacy, Service URL, Speed Dial BLF, Call Park BLF, Intercom, Malicious Call Identification, Meet Me Conference, Conference, Call Park, Call Pickup, Group Call Pickup, Mobility, Do Not Disturb, Conference List, Remove Last Participant, Quality Reporting Tool, CallBack, Other Pickup, Video Mode, New Call, End Call, Hunt Group Logout, All Calls, Answer Oldest, Alerting Calls, Queue Status, Record, Services, Messages, Directories, Information, Application Menu, Headset, AEC, None
type Anon944 string

// May be one of EMCC, VPN, Intercompany Media Services, Fallback, CCD, Intercluster Lookup Service
type Anon945 string

// May be one of Forward All, Park, Divert (Alerting), Conference List, Speed Dial, Call Back, Redial, Barge, Divert (Connected), Call PickUp, Other Call PickUp, Group Call PickUp, Mobility, Meet Me, Report Quality, Report Caller
type Anon946 string

// May be one of All, Busy, No Answer
type Anon947 string

// May be one of D4, ESF, CRC4, Non CRC4
type Anon948 string

// May be one of Disabled, CLEARMODE, CCD, G.nX64, X-CCD
type Anon949 string

type Anon95 struct {
	CommonDeviceConfig RCommonDeviceConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfig"`
}

// May be one of All Gateways, Local Gateways Only, Custom
type Anon950 string

// May be one of Border, Interior
type Anon951 string

// May be one of None, Remote
type Anon952 string

// May be one of Mobility Default EFA DN NumPlan Reference, Do Not Disturb Option, Incoming Alert Signal On DND, Username of Secure Shell Client User, Password of Secure Shell Client User, Display Format for Internal CallerID, Display Format for Line Text Label, Maximum size of DN Trace Log File in MegaBytes., Maximum number of DN Trace log Files, Dial by name status of last saved mode, All hours dial by name status, Open and Closed hours dial by name status
type Anon953 string

// May be one of Generic Group
type Anon954 string

// May be one of SHA-1
type Anon955 string

// May be one of Try next member; then, try next group in Hunt List, Try next member, but do not go to next group, Skip remaining members, and go directly to next group, Stop hunting
type Anon956 string

// May be one of Schema Only, Administrative Tasks, Database Updates, Database Reads
type Anon957 string

// May be one of Up to date, Disabled, Requires sync
type Anon958 string

// May be one of Default
type Anon959 string

type Anon96 struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
}

// May be one of IPv4 Only, IPv6 Only, IPv4 and IPv6
type Anon960 string

// May be one of IPv4, IPv6, Use System Default
type Anon961 string

// May be one of Proxy, Shared
type Anon962 string

// May be one of Manager/Assistant, Diverted
type Anon963 string

// May be one of 'Username and Domain pair', 'Username sans Domain', 'Eight digit phone number', 'Biometric Fingerprint Scan'
type Anon964 string

// May be one of Default
type Anon965 string

// May be one of EMCC, PSTN Access, RSVP Agent, TFTP, LBM, UDS
type Anon966 string

// May be one of Pre-Alloc. Key type/blocksize -- Users, Pre-Alloc. Key type/blocksize -- Contacts
type Anon967 string

// May be one of none, lsc, mic, symmetric key
type Anon968 string

// May be one of Default
type Anon969 string

type Anon97 struct {
	CommonDeviceConfig []LCommonDeviceConfig `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfig,omitempty"`
}

// May be one of 512, 1024, 2048
type Anon970 string

// May be one of ldap_AD, gc, ldap_ND, ldap_OP, ldap_ADAM
type Anon971 string

// May be one of Lamp Off, Lamp On, Wink, Flash, Blink
type Anon972 string

// May be one of Afar, Abkhazian, Afrikaans, Amharic, Arabic, Assamese, Aymara, Azerbaijani, Bashkir, Byelorussian, Bulgarian, Bihari, Bislama, Bengali; Bangla, Tibetan, Breton, Catalan, Corsican, Czech, Welsh, Danish, German, Bhutani, Greek, English, Esperanto, Spanish, Estonian, Basque, Persian, Finnish, Fiji, Faroese, French, Frisian, Irish, Scots Gaelic, Galician, Guarani, Gujarati, Hausa, Hebrew, Hindi, Croatian, Hungarian, Armenian, Interlingua, Indonesian, Interlingue, Inupiak, Icelandic, Italian, Inuktitut, Japanese, Javanese, Georgian, Kazakh, Greenlandic, Cambodian, Kannada, Korean, Kashmiri, Kurdish, Kirghiz, Latin, Lingala, Laothian, Lithuanian, Latvian, Lettish, Malagasy, Maori, Macedonian, Malayalam, Mongolian, Moldavian, Marathi, Malay, Maltese, Burmese, Nauru, Nepali, Dutch, Norwegian, Occitan, (Afan) Oromo, Oriya, Punjabi, Polish, Pashto, Pushto, Portuguese, Quechua, Rhaeto-Romance, Kirundi, Romanian, Russian, Kinyarwanda, Sanskrit, Sindhi, Sangho, Serbo-Croatian, Sinhalese, Slovak, Slovenian, Samoan, Shona, Somali, Albanian, Serbian, Siswati, Sesotho, Sundanese, Swedish, Swahili, Tamil, Telugu, Tajik, Thai, Tigrinya, Turkmen, Tagalog, Setswana, Tonga, Turkish, Tsonga, Tatar, Twi, Uighur, Ukrainian, Urdu, Uzbek, Vietnamese, Volapuk, Wolof, Xhosa, Yiddish, Yoruba, Zhuang, Chinese, Zulu, Chinese (Simplified) Spoken Mandarin, Chinese (Traditional) Spoken Mandarin, Chinese (Traditional) Spoken Cantonese, Portuguese (Brazilian), English (British)
type Anon973 string

// May be one of Western European, Eastern European, Baltic, Cyrillic, Arabic, Greek, Hebrew, Turkish, Japanese, Simplified Chinese, Traditional Chinese, Korean, Thai, Vietnamese
type Anon974 string

// May be one of Microsoft Active Directory, Sun or Oracle Directory Server, OpenLDAP, Microsoft ADAM or Lightweight Directory Services
type Anon975 string

// May be one of UniqueIdentifier, UserId, FirstName, MiddleName, LastName, Manager, Department, TelephoneNumber, Mailid, Title, HomePhone, Mobile, Pager, OCSPrimaryUserAddress, DirectoryURI, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5
type Anon976 string

// May be one of CCM Node, Phone Unit, SW Version, Enhanced User License, Basic User License, Essential User License, Adjunct Device License, Voice Mail License
type Anon977 string

// May be one of CCM Node, Cisco 7902, Cisco ATA 186, Cisco 7905, Cisco 7910, Cisco 7912, Cisco 7935, Cisco 7936, Cisco IP Communicator, Cisco 7920, Cisco 7940, Cisco 7941, Cisco 7960, Cisco 7961, Cisco 7970, Cisco 7971, Cisco 7941G-GE, Cisco 7961G-GE, Cisco 7985, Cisco 7911, H.323 Client, CTI Port, Other Phone, IP-STE, Motorola CN622, Cisco 12 S, Cisco 12 SP, Cisco 12 SP+, Cisco 30 SP+, Cisco 30 VIP, Cisco VGC Phone, Cisco VGC Virtual Phone, Analog Phone, Cisco 7906, Cisco Unified Presence Server End User Feature License, Cisco Unified Personal Client End User Feature License, Cisco 7921, Cisco 3951, Nokia S60, Cisco 7931, Third-party SIP Device (Basic), Third-party SIP Device (Advanced), Cisco TelePresence, Cisco 7962, Cisco 7942, Cisco 7945, Cisco 7965, Cisco 7937, Cisco 7975, Cisco Unified Personal Communicator, Mobility Enabled End Users, Cisco 3911, Cisco Unified Mobile Communicator, Cisco TelePresence 1000, Cisco TelePresence 3000, Cisco TelePresence 3200, Cisco TelePresence 500-37, Cisco 7925, Cisco 9971, Cisco 6921, Cisco 6941, Cisco 6961, Cisco Unified Client Services Framework, Cisco TelePresence 1300-65, Cisco TelePresence 1100, Transnova S3, Cisco 9951, Cisco 8961, Cisco 6901, Cisco 6911, Cisco ATA 187, Cisco TelePresence 200, Cisco TelePresence 400, Cisco Dual Mode for iPhone, Cisco 6945, Cisco Dual Mode for Android, Cisco 7926, Cisco E20, Generic Single Screen Room System, Generic Multiple Screen Room System, Cisco TelePresence EX90, Cisco 8945, Cisco 8941, Generic Desktop Video Endpoint, Cisco TelePresence 500-32, Cisco TelePresence 1300-47, Cisco Cius, Cisco TelePresence 1310-65, Cisco 3905, Cisco TelePresence EX60, Cisco TelePresence Codec C90, Cisco TelePresence Codec C60, Cisco TelePresence Codec C40, Cisco TelePresence Quick Set C20, Cisco TelePresence Profile 42 (C20), Cisco TelePresence Profile 42 (C60), Cisco TelePresence Profile 52 (C40), Cisco TelePresence Profile 52 (C60), Cisco TelePresence Profile 52 Dual (C60), Cisco TelePresence Profile 65 (C60), Cisco TelePresence Profile 65 Dual (C90), Cisco TelePresence MX200, Cisco TelePresence TX9000, Cisco TelePresence TX9200, Cisco TelePresence SX20, Cisco TelePresence MX300, IMS-integrated Mobile (Basic), Third-party AS-SIP Endpoint, Cisco Cius SP, Cisco TelePresence Profile 42 (C40), CTI Remote Device, Carrier-integrated Mobile, Universal Device Template, Cisco Unified Communications for RTX, Cisco VXC 6215, Cisco Jabber for Tablet
type Anon978 string

// May be one of Tin, Copper, Bronze, Silver, Gold, Telepresence
type Anon979 string

type Anon98 struct {
	ResourcePriorityNamespace RResourcePriorityNamespace `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace"`
}

// May be one of System Capacity Licensing of Nodes in the cluster, System Utilization Licensing Per DLU Consumption, System Capability Licensing by Software & Version, System Utilization Licensing Per UCL Consumption, System Utilization Licensing Per User Consumption, System Utilization Licensing for HCS deployments, System Utilization Licensing for HCS Large Enterprise deployments
type Anon980 string

// May be one of Demo, compliant, Overage, No Contact, Security Failure, No Provisioning, Grace
type Anon981 string

// May be one of Use Default Policy, Allow, Deny
type Anon982 string

// May be one of Default
type Anon983 string

// May be one of Keep Current Setting, Use System Default, Low Loss, Lossy
type Anon984 string

// May be one of NM-1V, NM-2V, NM-HDV, VIC-SLOT, NONE, VWIC-SLOT, FLEX-SLOT, ANALOG, DIGITAL, VGC_PORT, WS-X6600, AIM-VOICE-30 (2 subunits), NM-HDA, PA-VXA, PA-VXB, PA-VXC, PA-MCX, NM-HD-1V, NM-HD-2V, NM-HD-2VE, GENERIC-SLOT, NM-4VWIC-MBRD, EVM-HD, NM-HDV2-0PORT, NM-HDV2-1PORT-T1, NM-HDV2-1PORT-E1, NM-HDV2-2PORT-T1, NM-HDV2-2PORT-E1, AIM-VOICE-30-SLOT-0 (3 subunits- slot 0 only), NM-3VWIC-MBRD
type Anon985 string

// May be one of VIC-2FXS, VIC-2FXO, VWIC-1MFT-T1, VWIC-2MFT-T1, VIC_NONE, VWIC-1MFT-E1, VWIC-2MFT-E1, WS-U4604-8FXS, 8FXS, 16FXS, 1T1, 16FXS8FXO, 48_PORTS, VIC-4FXS, VIC-4FXO, VIC-8FXS, VIC-16FXS, WS-X6600-24FXS, WS-X6600-6T1, WS-X6600-6E1, EM-4FXO-EM0, EM-4FXO-EM1, EM-8FXS-EM0, EM-8FXS-EM1, NM-HDA-4FXS, PA-VXA-1TE1-24-T1, PA-VXA-1TE1-30-E1, PA-VXB-2TE1-T1, PA-VXB-2TE1-E1, PA-VXC-2TE1-T1, PA-VXC-2TE1-E1, PA-MCX-2TE1-T1, PA-MCX-2TE1-E1, PA-MCX-4TE1-T1, PA-MCX-4TE1-E1, PA-MCX-6TE1-T1, PA-MCX-6TE1-E1, PA-MCX-8TE1-T1, PA-MCX-8TE1-E1, VIC-8FXO, WS-U4604-8FXO-2FXS, WS-U4604-16FXS, VIC-2BRI, VIC-2FXS-SCCP, VIC-4FXS-SCCP, VIC2-2FXS-SCCP, VIC2-2BRI-NT/TE-SCCP, NM-HDA-4FXS-SCCP, EM-8FXS-EM0-SCCP, 24FXS-SCCP, EM-8FXS-EM1-SCCP, EVM-HD-8FXS/DID-SCCP, EM-4BRI-NT/TE-SCCP, EM-HDA-8FXS-SCCP, EM-HDA-3FXS/4FXO-SCCP, VIC3-2FXS/DID, VIC3-4FXS/DID, EM3-HDA-8FXS/DID, VIC3-2FXS/DID-SCCP, VIC3-4FXS/DID-SCCP, EM3-HDA-8FXS/DID-SCCP, 4FXS-MGCP, 4FXS-SCCP, 2FXS-MGCP, 2FXS-SCCP, VGD-DFC-CT3, VIC3-2FXS-E/DID, VIC3-2FXS-E/DID-SCCP, VIC2-1FXO, VIC2-1BRI, HWIC-1CE1T1-PRI-T1, HWIC-1CE1T1-PRI-E1, HWIC-2CE1T1-PRI-T1, HWIC-2CE1T1-PRI-E1, HWIC-4CE1T1-PRI-T1, HWIC-4CE1T1-PRI-E1, VWIC3-1MFT-T1E1-T1, VWIC3-1MFT-T1E1-E1, VWIC3-1MFT-G703-T1, VWIC3-1MFT-G703-E1, VWIC3-2MFT-T1E1-T1, VWIC3-2MFT-T1E1-E1, VWIC3-2MFT-G703-T1, VWIC3-2MFT-G703-E1, VWIC3-4MFT-T1E1-T1, VWIC3-4MFT-T1E1-E1, SM-D-48FXS-E, SM-D-72FXS, SM-D-48FXS-E-SCCP, SM-D-72FXS-SCCP, WS-SVC-CMM-MS, VIC2-2FXS, VIC2-2FXO, VIC2-2BRI, VIC-4FXS/DID, VIC2-4FXO, NM-HDV2-ONBOARD-T1, NM-HDV2-ONBOARD-E1, VWIC2-1MFT-T1E1-T1, VWIC2-1MFT-T1E1-E1, VWIC2-2MFT-T1E1-T1, VWIC2-2MFT-T1E1-E1, VWIC2-1MFT-G703-T1, VWIC2-1MFT-G703-E1, VWIC2-2MFT-G703-T1, VWIC2-2MFT-G703-E1, EVM-HD-8FXS/DID, EM-4BRI-NT/TE-EM0, EM-4BRI-NT/TE-EM1, 24FXS, NM-HDV2-ONBOARD-T1-2PORT, NM-HDV2-ONBOARD-E1-2PORT, EM-HDA-8FXS, EM-HDA-6FXO, EM-HDA-3FXS/4FXO, EM-4BRI-NT/TE, VIC2-1MFT-T1E1-T1, VIC2-1MFT-T1E1-E1, VIC2-2MFT-T1E1-T1, VIC2-2MFT-T1E1-E1, EM2-4FXO-EM0, EM2-4FXO-EM1
type Anon986 string

// May be one of 711 ulaw, 711 alaw, 729, wideband
type Anon987 string

// May be one of Use System Policy, Light and Prompt, Prompt Only, Light Only, None
type Anon988 string

// May be one of Offline Out of Service, Active Primary Peer, Active Standby
type Anon989 string

type Anon99 struct {
	Namespace   string `xml:"http://www.cisco.com/AXL/API/9.0 namespace,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

// May be one of Presence Group, RSVP Policy
type Anon990 string

// May be one of Use System Default, No Reservation, Optional(Video Desired), Mandatory, Mandatory(Video Desired), Allow Subscription, Disallow Subscription, Use System Default
type Anon991 string

// May be one of Invalid, Audio
type Anon992 string

// May be one of G711 a-law 64K, G711 u-law 64K, G723, G729, G729AnnexA, G729AnnexB, G729AnnexA-AnnexB
type Anon993 string

// May be one of Not Selected, Multicast Point, Unicast Bridge
type Anon994 string

// May be one of CUMC, Standard
type Anon995 string

// May be one of Cisco 30 SP+, Cisco 12 SP+, Cisco 12 SP, Cisco 12 S, Cisco 30 VIP, Cisco 7910, Cisco 7960, Cisco 7940, Cisco 7935, Cisco VGC Phone, Cisco VGC Virtual Phone, Cisco ATA 186, EMCC Base Phone, SCCP Phone, Analog Access, Digital Access, Digital Access+, Digital Access WS-X6608, Analog Access WS-X6624, VGC Gateway, Conference Bridge, Conference Bridge WS-X6608, Cisco IOS Conference Bridge (HDV2), Cisco Conference Bridge (WS-SVC-CMM), H.323 Phone, H.323 Gateway, Music On Hold, Device Pilot, CTI Port, CTI Route Point, Voice Mail Port, Cisco IOS Software Media Termination Point (HDV2), Cisco Media Server (WS-SVC-CMM-MS), Cisco Video Conference Bridge (IPVC-35xx), Cisco IOS Heterogeneous Video Conference Bridge, Cisco IOS Guaranteed Audio Video Conference Bridge, Cisco IOS Homogeneous Video Conference Bridge, Route List, Load Simulator, Media Termination Point, Media Termination Point Hardware, Cisco IOS Media Termination Point (HDV2), Cisco Media Termination Point (WS-SVC-CMM), Cisco 7941, Cisco 7971, MGCP Station, MGCP Trunk, GateKeeper, 7914 14-Button Line Expansion Module, Trunk, Tone Announcement Player, SIP Trunk, SIP Gateway, WSM Trunk, Remote Destination Profile, 7915 12-Button Line Expansion Module, 7915 24-Button Line Expansion Module, 7916 12-Button Line Expansion Module, 7916 24-Button Line Expansion Module, CKEM 36-Button Line Expansion Module, SPA8800, Unknown MGCP Gateway, Unknown, Cisco 7985, Cisco 7911, Cisco 7961G-GE, Cisco 7941G-GE, Motorola CN622, Third-party SIP Device (Basic), Cisco 7931, Cisco Unified Personal Communicator, Cisco 7921, Cisco 7906, Third-party SIP Device (Advanced), Cisco TelePresence, Nokia S60, Cisco 7962, Cisco 3951, Cisco 7937, Cisco 7942, Cisco 7945, Cisco 7965, Cisco 7975, Cisco 3911, Cisco Unified Mobile Communicator, Cisco TelePresence 1000, Cisco TelePresence 3000, Cisco TelePresence 3200, Cisco TelePresence 500-37, Cisco 7925, Cisco 9971, Cisco 6921, Cisco 6941, Cisco 6961, Cisco Unified Client Services Framework, Cisco TelePresence 1300-65, Cisco TelePresence 1100, Transnova S3, BlackBerry MVS VoWifi, Cisco 9951, Cisco 8961, Cisco 6901, Cisco 6911, Cisco ATA 187, Cisco TelePresence 200, Cisco TelePresence 400, Cisco Dual Mode for iPhone, Cisco 6945, Cisco Dual Mode for Android, Cisco 7926, Cisco E20, Generic Single Screen Room System, Generic Multiple Screen Room System, Cisco TelePresence EX90, Cisco 8945, Cisco 8941, Generic Desktop Video Endpoint, Cisco TelePresence 500-32, Cisco TelePresence 1300-47, Cisco 3905, Cisco Cius, VKEM 36-Button Line Expansion Module, Cisco TelePresence 1310-65, Cisco TelePresence MCU, Cisco TelePresence EX60, Cisco TelePresence Codec C90, Cisco TelePresence Codec C60, Cisco TelePresence Codec C40, Cisco TelePresence Quick Set C20, Cisco TelePresence Profile 42 (C20), Cisco TelePresence Profile 42 (C60), Cisco TelePresence Profile 52 (C40), Cisco TelePresence Profile 52 (C60), Cisco TelePresence Profile 52 Dual (C60), Cisco TelePresence Profile 65 (C60), Cisco TelePresence Profile 65 Dual (C90), Cisco TelePresence MX200, Cisco TelePresence TX9000, Cisco TelePresence TX9200, Cisco TelePresence SX20, Cisco TelePresence MX300, IMS-integrated Mobile (Basic), Third-party AS-SIP Endpoint, Cisco Cius SP, Cisco TelePresence Profile 42 (C40), Cisco VXC 6215, CTI Remote Device, Usage Profile, Carrier-integrated Mobile, Universal Device Template, Cisco Unified Communications for RTX, Cisco Jabber for Tablet, Cisco 7905, Cisco 7920, Cisco 7970, Cisco 7912, Cisco 7902, Cisco IP Communicator, Cisco 7961, Cisco 7936, Analog Phone, ISDN BRI Phone, SCCP gateway virtual phone, IP-STE
type Anon996 string

// May be one of Event Log, Sys Log, AST, SDI, SDL, Data Collector, SNMP Traps, Alert Manager, Alternate Syslog
type Anon997 string

// May be one of None, Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec
type Anon998 string

// May be one of ACCUNET Switched Digital Service, Billing Number Only, Billing Number Preferred, Calling Party Number Only, Calling Party Number Preferred, Foreign Exchange, Foreign Exchange Selection, International Long Distance Service, InterLATAOUTWATS, IntraLATAOUTWATS, Long Distance Service, MEGACOM Telecom Service, National ISDN Banded OUTWATS, National ISDN Unbanded OUTWATS, OUTWATS Selection, Private, Private Selection, Software Defined Network, Tie Trunk (Cut-through), Tie Trunk (Senderized), Tie Trunk Selection (Cut-through), Tie Trunk Selection (Senderized), WATS Band Selection, WATS Band Selection, WATS Maximal Subscribed Band
type Anon999 string

type AppUsers struct {
	SelectedAppUser []SelectedAppUser `xml:"http://www.cisco.com/AXL/API/9.0 selectedAppUser"`
}

type Applications struct {
	Application []string `xml:"http://www.cisco.com/AXL/API/9.0 application,omitempty"`
}

type AssociatedBlfSdFeatures struct {
	Feature []XBLFSDOption `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
}

type AssociatedCapfProfiles struct {
	CapfProfileInstanceId []string `xml:"http://www.cisco.com/AXL/API/9.0 capfProfileInstanceId,omitempty"`
}

type AssociatedCucms struct {
	AssociatedCucm []XSafForwarderMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucm"`
}

type AssociatedDevices struct {
	Device []string `xml:"http://www.cisco.com/AXL/API/9.0 device,omitempty"`
}

type AssociatedEndusers struct {
	Enduser []REnduserMember `xml:"http://www.cisco.com/AXL/API/9.0 enduser,omitempty"`
}

type AssociatedGroups struct {
	UserGroup []UserGroup `xml:"http://www.cisco.com/AXL/API/9.0 userGroup,omitempty"`
}

type AssociatedRemoteDestination struct {
	RemoteDestination []string `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestination,omitempty"`
}

type AssociatedRemoteDestinationProfiles struct {
	RemoteDestinationProfile []string `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfile,omitempty"`
}

type AssociatedTodAccess struct {
	TodAccess []string `xml:"http://www.cisco.com/AXL/API/9.0 todAccess,omitempty"`
}

type AssociatedTrunks struct {
	AssociatedTrunk []XCcdRequestingServiceMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunk"`
}

type AudioSource struct {
	SourceId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	MaxHops  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHops,omitempty"`
}

func (t *AudioSource) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AudioSource
	var overlay struct {
		*T
		MaxHops *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHops,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxHops = (*XInteger)(&overlay.T.MaxHops)
	return d.DecodeElement(&overlay, &start)
}

type AudioSources struct {
	AudioSource []AudioSource `xml:"http://www.cisco.com/AXL/API/9.0 audioSource,omitempty"`
}

type AutoRegistration struct {
	StartDn            string  `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
	EndDn              string  `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
	NextDn             string  `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	E164Mask           string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
}

func (t *AutoRegistration) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T AutoRegistration
	var overlay struct {
		*T
		StartDn *string `xml:"http://www.cisco.com/AXL/API/9.0 startDn,omitempty"`
		EndDn   *string `xml:"http://www.cisco.com/AXL/API/9.0 endDn,omitempty"`
		NextDn  *string `xml:"http://www.cisco.com/AXL/API/9.0 nextDn,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartDn = (*string)(&overlay.T.StartDn)
	overlay.EndDn = (*string)(&overlay.T.EndDn)
	overlay.NextDn = (*string)(&overlay.T.NextDn)
	return d.DecodeElement(&overlay, &start)
}

type BetweenLocations struct {
	BetweenLocation []XLocationBetween `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocation"`
}

type BlfDirectedCallParks struct {
	BlfDirectedCallPark []XBLFDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallPark,omitempty"`
}

// Must match the pattern (t)|(f)|(true)|(false)|(0)|(1)
type Boolean string

type BusyLampFields struct {
	BusyLampField []XBusyLampField `xml:"http://www.cisco.com/AXL/API/9.0 busyLampField,omitempty"`
}

type Buttons struct {
	Button []XButton `xml:"http://www.cisco.com/AXL/API/9.0 button,omitempty"`
}

type CallInfoDisplay struct {
	CallerName       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callerNumber,omitempty"`
	RedirectedNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 redirectedNumber,omitempty"`
	DialedNumber     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 dialedNumber,omitempty"`
}

type CallInfoForPickupNotification struct {
	CallingPartyInfo Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
	CalledPartyInfo  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
}

func (t *CallInfoForPickupNotification) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T CallInfoForPickupNotification
	var overlay struct {
		*T
		CallingPartyInfo *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInfo,omitempty"`
		CalledPartyInfo  *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInfo,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallingPartyInfo = (*Boolean)(&overlay.T.CallingPartyInfo)
	overlay.CalledPartyInfo = (*Boolean)(&overlay.T.CalledPartyInfo)
	return d.DecodeElement(&overlay, &start)
}

type CallStates struct {
	CallState []XCallStateMember `xml:"http://www.cisco.com/AXL/API/9.0 callState"`
}

type CcmExternalIpMaps struct {
	CcmExternalIpMap []XCcmExternalIpMap `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMap,omitempty"`
}

type CcmNodeLicenseFeature struct {
	UnitsAuthorized int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsAuthorized,omitempty"`
	UnitsUsed       int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsUsed,omitempty"`
	UnitsRemaining  int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsRemaining,omitempty"`
	Status          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 status,omitempty"`
}

type Certificates struct {
	Certificate []XVpnGatewayMember `xml:"http://www.cisco.com/AXL/API/9.0 certificate"`
}

type CodecsInList struct {
	CodecNames []string `xml:"http://www.cisco.com/AXL/API/9.0 codecNames"`
}

type ComponentVersion struct {
	Version string `xml:"http://www.cisco.com/AXL/API/9.0 version"`
}

type CtiControlledDeviceProfiles struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
}

type CurrentConfig struct {
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpaceName,omitempty"`
	DeviceName                        string            `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DeviceProtocol                    XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 deviceProtocol,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	AddressMode                       XIPAddressingMode `xml:"http://www.cisco.com/AXL/API/9.0 addressMode,omitempty"`
	AllowAutoConfig                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfig,omitempty"`
	RemoteSrstOption                  string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstOption,omitempty"`
	RemoteSrstIp                      string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstIp,omitempty"`
	RemoteSrstPort                    XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSrstPort,omitempty"`
	RemoteSipSrstIp                   string            `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstIp,omitempty"`
	RemoteSipSrstPort                 XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 remoteSipSrstPort,omitempty"`
	GeolocationInfo                   string            `xml:"http://www.cisco.com/AXL/API/9.0 geolocationInfo,omitempty"`
}

type CustomUserFields struct {
	CustomUserField []XUserCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
}

type Destination struct {
	GatewayName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gatewayName"`
	RouteListName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeListName"`
}

type Destinations struct {
	Destination []XH323TrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type DialParameters struct {
	DialParameter []RParameterMember `xml:"http://www.cisco.com/AXL/API/9.0 dialParameter,omitempty"`
}

type DirectedCallParkDnAndPartition struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type DirectoryURIs struct {
	DirectoryUri []XDirectoryUri `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
}

// Authenticates the user on the basis of pin or password.
type DoAuthenticateUserReq struct {
	Userid   string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Password string `xml:"http://www.cisco.com/AXL/API/9.0 password"`
	Pin      Pin    `xml:"http://www.cisco.com/AXL/API/9.0 pin"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type DoAuthenticateUserRes struct {
	Return   Anon810 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

// Logs-in the specified user to the specified phone.
type DoDeviceLoginReq struct {
	DeviceName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName"`
	LoginDuration int     `xml:"http://www.cisco.com/AXL/API/9.0 loginDuration"`
	ProfileName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
	UserId        string  `xml:"http://www.cisco.com/AXL/API/9.0 userId"`
	Sequence      uint64  `xml:"sequence,attr,omitempty"`
}

// Returns "true" if the login was performed successfully.
type DoDeviceLoginRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// This method logs-out whichever user is logged-into the device.
type DoDeviceLogoutReq struct {
	DeviceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName"`
	Sequence   uint64  `xml:"sequence,attr,omitempty"`
}

// Returns "true" if the log-out was performed successfully.
type DoDeviceLogoutRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// Performs either a hard or soft reset on the specified device.  If resetting an MGCP box, then set isMGCP attribute to true.
type DoDeviceResetReq struct {
	DeviceName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName"`
	IsHardReset     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isHardReset"`
	DeviceResetType XReset  `xml:"http://www.cisco.com/AXL/API/9.0 deviceResetType"`
	IsMGCP          Boolean `xml:"isMGCP,attr,omitempty"`
	Sequence        uint64  `xml:"sequence,attr,omitempty"`
}

func (t *DoDeviceResetReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T DoDeviceResetReq
	var overlay struct {
		*T
		IsMGCP *Boolean `xml:"isMGCP,attr,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsMGCP = (*Boolean)(&overlay.T.IsMGCP)
	return d.DecodeElement(&overlay, &start)
}

// Returns "true" if the reset was performed successfully.
type DoDeviceResetRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// Initiates the sync
type DoLdapSyncReq struct {
	Name     string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sync     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 sync"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

// Returns "true" in case of success.
type DoLdapSyncRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationAckReq struct {
	RegistrationId string `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	Object         string `xml:"http://www.cisco.com/AXL/API/9.0 object"`
	Count          string `xml:"http://www.cisco.com/AXL/API/9.0 count"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationAckRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationObjectReq struct {
	RegistrationId string `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	Operation      string `xml:"http://www.cisco.com/AXL/API/9.0 operation"`
	Object         string `xml:"http://www.cisco.com/AXL/API/9.0 object"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationObjectRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationRegisterReq struct {
	NetworkId  string `xml:"http://www.cisco.com/AXL/API/9.0 networkId"`
	ClientName string `xml:"http://www.cisco.com/AXL/API/9.0 clientName"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationRegisterRes struct {
	RegistrationId   string `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	PollingInterval  string `xml:"http://www.cisco.com/AXL/API/9.0 pollingInterval"`
	PollingStartTime string `xml:"http://www.cisco.com/AXL/API/9.0 pollingStartTime"`
	Sequence         uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationUnregisterReq struct {
	RegistrationId string `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type DoNotificationUnregisterRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type DoUpdateRemoteClusterReq struct {
	Server    string `xml:"http://www.cisco.com/AXL/API/9.0 server"`
	ClusterId string `xml:"http://www.cisco.com/AXL/API/9.0 clusterId"`
	Sequence  uint64 `xml:"sequence,attr,omitempty"`
}

type DoUpdateRemoteClusterRes struct {
	Value    string `xml:"http://www.cisco.com/AXL/API/9.0 value"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type EndUsers struct {
	SelectedEndUser []SelectedEndUser `xml:"http://www.cisco.com/AXL/API/9.0 selectedEndUser"`
}

type ExecuteSQLQueryReq struct {
	Sql      string `xml:"http://www.cisco.com/AXL/API/9.0 sql"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ExecuteSQLQueryRes struct {
	Return   Anon807 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ExecuteSQLUpdateReq struct {
	Sql      string `xml:"http://www.cisco.com/AXL/API/9.0 sql"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ExecuteSQLUpdateRes struct {
	Return   Anon809 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type Features struct {
	Feature []XFeatureControlConfig `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
}

type ForwardHuntBusy struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *ForwardHuntBusy) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ForwardHuntBusy
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type ForwardHuntNoAnswer struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *ForwardHuntNoAnswer) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ForwardHuntNoAnswer
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type GateKeeperInfo struct {
	GateKeeperName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperName,omitempty"`
	E164             string  `xml:"http://www.cisco.com/AXL/API/9.0 e164,omitempty"`
	TechnologyPrefix string  `xml:"http://www.cisco.com/AXL/API/9.0 technologyPrefix"`
	Zone             string  `xml:"http://www.cisco.com/AXL/API/9.0 zone"`
}

type GetAarGroupReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAarGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetAarGroupRes struct {
	Return   Anon65 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetAnnouncementReq struct {
	Name         string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAnnouncement `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type GetAnnouncementRes struct {
	Return   Anon603 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetAnnunciatorReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAnnunciator `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetAnnunciatorRes struct {
	Return   Anon349 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetAppServerInfoReq struct {
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAppServerInfo `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetAppServerInfoRes struct {
	Return   Anon830 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetAppUserReq struct {
	Userid       string   `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Uuid         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAppUser `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64   `xml:"sequence,attr,omitempty"`
}

type GetAppUserRes struct {
	Return   Anon238 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetApplicationDialRulesReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RApplicationDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetApplicationDialRulesRes struct {
	Return   Anon331 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetApplicationServerReq struct {
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RApplicationServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetApplicationServerRes struct {
	Return   Anon271 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetApplicationUserCapfProfileReq struct {
	InstanceId   string                      `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	Uuid         XUUID                       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RApplicationUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                      `xml:"sequence,attr,omitempty"`
}

type GetApplicationUserCapfProfileRes struct {
	Return   Anon274 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetAudioCodecPreferenceListReq struct {
	Name         string                    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RAudioCodecPreferenceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                    `xml:"sequence,attr,omitempty"`
}

type GetAudioCodecPreferenceListRes struct {
	Return   Anon612 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetBillingServerReq struct {
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RBillingServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetBillingServerRes struct {
	Return   Anon843 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCCMVersionReq struct {
	ProcessNodeName string `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
}

type GetCCMVersionRes struct {
	Return   Anon822 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCallManagerGroupReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCallManagerGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetCallManagerGroupRes struct {
	Return   Anon155 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCallManagerReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCallManager `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetCallManagerRes struct {
	Return   Anon44 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetCallParkReq struct {
	Uuid               XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string    `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RCallPark `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64    `xml:"sequence,attr,omitempty"`
}

type GetCallParkRes struct {
	Return   Anon191 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCallPickupGroupReq struct {
	Uuid               XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Name               string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Pattern            string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RCallPickupGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64           `xml:"sequence,attr,omitempty"`
}

type GetCallPickupGroupRes struct {
	Return   Anon458 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCalledPartyTransformationPatternReq struct {
	Uuid               XUUID                             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string                            `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType                           `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType                           `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType                           `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	ReturnedTags       RCalledPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64                            `xml:"sequence,attr,omitempty"`
}

type GetCalledPartyTransformationPatternRes struct {
	Return   Anon476 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCallerFilterListReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCallerFilterList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetCallerFilterListRes struct {
	Return   Anon27 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetCallingPartyTransformationPatternReq struct {
	Uuid               XUUID                              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string                             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType                            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType                            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType                            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	ReturnedTags       RCallingPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64                             `xml:"sequence,attr,omitempty"`
}

type GetCallingPartyTransformationPatternRes struct {
	Return   Anon314 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCcdAdvertisingServiceReq struct {
	Name         string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCcdAdvertisingService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                 `xml:"sequence,attr,omitempty"`
}

type GetCcdAdvertisingServiceRes struct {
	Return   Anon501 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCcdHostedDNGroupReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCcdHostedDNGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetCcdHostedDNGroupRes struct {
	Return   Anon492 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCcdHostedDNReq struct {
	HostedPattern string       `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern"`
	Uuid          XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags  RCcdHostedDN `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence      uint64       `xml:"sequence,attr,omitempty"`
}

type GetCcdHostedDNRes struct {
	Return   Anon489 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCcdRequestingServiceReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCcdRequestingService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetCcdRequestingServiceRes struct {
	Return   Anon496 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst600024PortFXSGatewayReq struct {
	Name         string                             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCiscoCatalyst600024PortFXSGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                             `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst600024PortFXSGatewayRes struct {
	Return   Anon435 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000E1VoIPGatewayReq struct {
	Name         string                          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCiscoCatalyst6000E1VoIPGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                          `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000E1VoIPGatewayRes struct {
	Return   Anon440 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000T1VoIPGatewayPriReq struct {
	Name         string                             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCiscoCatalyst6000T1VoIPGatewayPri `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                             `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000T1VoIPGatewayPriRes struct {
	Return   Anon445 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000T1VoIPGatewayT1Req struct {
	Name         string                            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCiscoCatalyst6000T1VoIPGatewayT1 `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                            `xml:"sequence,attr,omitempty"`
}

type GetCiscoCatalyst6000T1VoIPGatewayT1Res struct {
	Return   Anon450 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCmcInfoReq struct {
	Code         string   `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	Uuid         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCmcInfo `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64   `xml:"sequence,attr,omitempty"`
}

type GetCmcInfoRes struct {
	Return   Anon115 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCommonDeviceConfigReq struct {
	Name         string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCommonDeviceConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetCommonDeviceConfigRes struct {
	Return   Anon95 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetCommonPhoneConfigReq struct {
	Name         string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCommonPhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetCommonPhoneConfigRes struct {
	Return   Anon297 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetConferenceBridgeReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RConferenceBridge `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetConferenceBridgeRes struct {
	Return   Anon346 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCredentialPolicyReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCredentialPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetCredentialPolicyRes struct {
	Return   Anon118 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCssReq struct {
	Name         string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCss   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetCssRes struct {
	Return   Anon37 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetCtiRoutePointReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCtiRoutePoint `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetCtiRoutePointRes struct {
	Return   Anon308 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCumaServerSecurityProfileReq struct {
	Name         string                     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCumaServerSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                     `xml:"sequence,attr,omitempty"`
}

type GetCumaServerSecurityProfileRes struct {
	Return   Anon264 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetCustomUserFieldReq struct {
	Field        string           `xml:"http://www.cisco.com/AXL/API/9.0 field"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type GetCustomUserFieldRes struct {
	Return   Anon594 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDateTimeGroupReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDateTimeGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetDateTimeGroupRes struct {
	Return   Anon248 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDdiReq struct {
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DialPlanName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName"`
	ReturnedTags RDdi    `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type GetDdiRes struct {
	Return   Anon173 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDefaultDeviceProfileReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDefaultDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetDefaultDeviceProfileRes struct {
	Return   Anon365 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDeviceMobilityGroupReq struct {
	Name         string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDeviceMobilityGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

type GetDeviceMobilityGroupRes struct {
	Return   Anon81 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetDeviceMobilityReq struct {
	Name         string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64          `xml:"sequence,attr,omitempty"`
}

type GetDeviceMobilityRes struct {
	Return   Anon112 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDevicePoolReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDevicePool `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetDevicePoolRes struct {
	Return   Anon78 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetDeviceProfileReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetDeviceProfileRes struct {
	Return   Anon414 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDhcpServerReq struct {
	ProcessNodeName XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Uuid            XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags    RDhcpServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence        uint64      `xml:"sequence,attr,omitempty"`
}

type GetDhcpServerRes struct {
	Return   Anon185 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDhcpSubnetReq struct {
	Uuid            XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DhcpServerName  XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName"`
	SubnetIpAddress string      `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress"`
	ReturnedTags    RDhcpSubnet `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence        uint64      `xml:"sequence,attr,omitempty"`
}

type GetDhcpSubnetRes struct {
	Return   Anon188 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDialPlanReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDialPlan `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetDialPlanRes struct {
	Return   Anon166 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDialPlanTagReq struct {
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DialPlanName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName"`
	ReturnedTags RDialPlanTag `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetDialPlanTagRes struct {
	Return   Anon169 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDirectedCallParkReq struct {
	Uuid               XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string            `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64            `xml:"sequence,attr,omitempty"`
}

type GetDirectedCallParkRes struct {
	Return   Anon194 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetDirectoryLookupDialRulesReq struct {
	Name         string                    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RDirectoryLookupDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                    `xml:"sequence,attr,omitempty"`
}

type GetDirectoryLookupDialRulesRes struct {
	Return   Anon334 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetEmccFeatureConfigReq struct {
	ParameterName string             `xml:"http://www.cisco.com/AXL/API/9.0 parameterName"`
	Uuid          XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags  REmccFeatureConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence      uint64             `xml:"sequence,attr,omitempty"`
}

type GetEmccFeatureConfigRes struct {
	Return   Anon515 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetEndUserCapfProfileReq struct {
	InstanceId   string              `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags REndUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetEndUserCapfProfileRes struct {
	Return   Anon277 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetEnterpriseFeatureAccessConfigurationReq struct {
	Uuid               XUUID                                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string                                `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       REnterpriseFeatureAccessConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64                                `xml:"sequence,attr,omitempty"`
}

type GetEnterpriseFeatureAccessConfigurationRes struct {
	Return   Anon585 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetEnterprisePhoneConfigReq struct {
}

type GetEnterprisePhoneConfigRes struct {
	Return   Anon814 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetExternalCallControlProfileReq struct {
	Name         string                      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RExternalCallControlProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                      `xml:"sequence,attr,omitempty"`
}

type GetExternalCallControlProfileRes struct {
	Return   Anon479 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetFacInfoReq struct {
	Name         string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RFacInfo `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64   `xml:"sequence,attr,omitempty"`
}

type GetFacInfoRes struct {
	Return   Anon121 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetFallbackFeatureConfigReq struct {
}

type GetFallbackFeatureConfigRes struct {
	Return   Anon827 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetFallbackProfileReq struct {
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RFallbackProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type GetFallbackProfileRes struct {
	Return   Anon568 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetFeatureControlPolicyReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RFeatureControlPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetFeatureControlPolicyRes struct {
	Return   Anon579 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetFixedMohAudioSourceReq struct {
	Name         string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RFixedMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

type GetFixedMohAudioSourceRes struct {
	Return   Anon355 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatekeeperReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatekeeper `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetGatekeeperRes struct {
	Return   Anon290 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointAnalogAccessReq struct {
	Name         string                       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatewayEndpointAnalogAccess `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                       `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointAnalogAccessRes struct {
	Return   Anon424 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessBriReq struct {
	Name         string                           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatewayEndpointDigitalAccessBri `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                           `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessBriRes struct {
	Return   Anon426 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessPriReq struct {
	Name         string                           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatewayEndpointDigitalAccessPri `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                           `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessPriRes struct {
	Return   Anon425 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessT1Req struct {
	Name         string                          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatewayEndpointDigitalAccessT1 `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                          `xml:"sequence,attr,omitempty"`
}

type GetGatewayEndpointDigitalAccessT1Res struct {
	Return   Anon427 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewayReq struct {
	DomainName   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64   `xml:"sequence,attr,omitempty"`
}

type GetGatewayRes struct {
	Return   Anon421 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGatewaySccpEndpointsReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGatewaySccpEndpoints `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetGatewaySccpEndpointsRes struct {
	Return   Anon597 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationFilterReq struct {
	Name         string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGeoLocationFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationFilterRes struct {
	Return   Anon281 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationPolicyReq struct {
	Name         string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGeoLocationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationPolicyRes struct {
	Return   Anon464 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RGeoLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetGeoLocationRes struct {
	Return   Anon255 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetH323GatewayReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RH323Gateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetH323GatewayRes struct {
	Return   Anon399 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetH323PhoneReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RH323Phone `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetH323PhoneRes struct {
	Return   Anon371 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetH323TrunkReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RH323Trunk `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetH323TrunkRes struct {
	Return   Anon384 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetHandoffConfigurationReq struct {
	Uuid               XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string                `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RHandoffConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64                `xml:"sequence,attr,omitempty"`
}

type GetHandoffConfigurationRes struct {
	Return   Anon588 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetHuntListReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RHuntList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetHuntListRes struct {
	Return   Anon128 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetHuntPilotReq struct {
	Uuid               XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string     `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType    `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RHuntPilot `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64     `xml:"sequence,attr,omitempty"`
}

type GetHuntPilotRes struct {
	Return   Anon323 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetIlsConfigReq struct {
	ClusterId    string       `xml:"http://www.cisco.com/AXL/API/9.0 clusterId,omitempty"`
	ReturnedTags NewIlsConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
}

type GetIlsConfigRes struct {
	Return   Anon839 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeClientReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeClient `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetImeClientRes struct {
	Return   Anon544 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeE164TransformationReq struct {
	Name         string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeE164Transformation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                 `xml:"sequence,attr,omitempty"`
}

type GetImeE164TransformationRes struct {
	Return   Anon562 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeEnrolledPatternGroupReq struct {
	Name         string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeEnrolledPatternGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                   `xml:"sequence,attr,omitempty"`
}

type GetImeEnrolledPatternGroupRes struct {
	Return   Anon550 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeEnrolledPatternReq struct {
	Pattern      string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeEnrolledPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetImeEnrolledPatternRes struct {
	Return   Anon547 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeExclusionNumberGroupReq struct {
	Name         string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeExclusionNumberGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                   `xml:"sequence,attr,omitempty"`
}

type GetImeExclusionNumberGroupRes struct {
	Return   Anon556 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeExclusionNumberReq struct {
	Pattern      string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeExclusionNumber `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetImeExclusionNumberRes struct {
	Return   Anon553 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeFeatureConfigReq struct {
}

type GetImeFeatureConfigRes struct {
	Return   Anon829 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeFirewallReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeFirewall `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetImeFirewallRes struct {
	Return   Anon559 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeLearnedRoutesReq struct {
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	E164Did      string            `xml:"http://www.cisco.com/AXL/API/9.0 e164Did"`
	ReturnedTags RImeLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetImeLearnedRoutesRes struct {
	Return   Anon828 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeRouteFilterElementReq struct {
	Name         string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeRouteFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                 `xml:"sequence,attr,omitempty"`
}

type GetImeRouteFilterElementRes struct {
	Return   Anon536 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeRouteFilterGroupReq struct {
	Name         string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeRouteFilterGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

type GetImeRouteFilterGroupRes struct {
	Return   Anon533 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImeServerReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImeServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetImeServerRes struct {
	Return   Anon530 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetImportedDirectoryUriCatalogsReq struct {
	Name         string                        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RImportedDirectoryUriCatalogs `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                        `xml:"sequence,attr,omitempty"`
}

type GetImportedDirectoryUriCatalogsRes struct {
	Return   Anon621 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetInterClusterServiceProfileReq struct {
	InterClusterService XInterClusterService        `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	Uuid                XUUID                       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags        RInterClusterServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence            uint64                      `xml:"sequence,attr,omitempty"`
}

func (t *GetInterClusterServiceProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GetInterClusterServiceProfileReq
	var overlay struct {
		*T
		InterClusterService *XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InterClusterService = (*XInterClusterService)(&overlay.T.InterClusterService)
	return d.DecodeElement(&overlay, &start)
}

type GetInterClusterServiceProfileRes struct {
	Return   Anon497 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetIpPhoneServicesReq struct {
	ServiceName  string           `xml:"http://www.cisco.com/AXL/API/9.0 serviceName"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RIpPhoneServices `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type GetIpPhoneServicesRes struct {
	Return   Anon304 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetIvrUserLocaleReq struct {
	UserLocale   XUserLocale    `xml:"http://www.cisco.com/AXL/API/9.0 userLocale"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RIvrUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetIvrUserLocaleRes struct {
	Return   Anon131 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLbmGroupReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLbmGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetLbmGroupRes struct {
	Return   Anon600 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLbmHubGroupReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLbmHubGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetLbmHubGroupRes struct {
	Return   Anon618 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLdapAuthenticationReq struct {
}

type GetLdapAuthenticationRes struct {
	Return   Anon819 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLdapDirectoryReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLdapDirectory `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetLdapDirectoryRes struct {
	Return   Anon512 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLdapFilterReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLdapFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetLdapFilterRes struct {
	Return   Anon571 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLdapSyncCustomFieldReq struct {
	Uuid                  XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LdapConfigurationName string               `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName"`
	CustomUserField       string               `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
	ReturnedTags          RLdapSyncCustomField `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence              uint64               `xml:"sequence,attr,omitempty"`
}

type GetLdapSyncCustomFieldRes struct {
	Return   Anon610 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

// Cancels the sync which is currently under process.
type GetLdapSyncStatusReq struct {
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// Returns "true" if the sync is currently under process.
type GetLdapSyncStatusRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetLdapSystemReq struct {
}

type GetLdapSystemRes struct {
	Return   Anon816 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLicenseCapabilitiesReq struct {
	Userid       string               `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Uuid         XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLicenseCapabilities `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

type GetLicenseCapabilitiesRes struct {
	Return   Anon223 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLicenseUnitReportReq struct {
}

type GetLicenseUnitReportRes struct {
	Return   Anon815 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLineGroupReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLineGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetLineGroupRes struct {
	Return   Anon138 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLineReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RLine   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type GetLineRes struct {
	Return   Anon362 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetLocationReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetLocationRes struct {
	Return   Anon86 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetMediaResourceGroupReq struct {
	Name         string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMediaResourceGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetMediaResourceGroupRes struct {
	Return   Anon51 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetMediaResourceListReq struct {
	Name         string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMediaResourceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetMediaResourceListRes struct {
	Return   Anon58 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetMeetMeReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RMeetMe `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type GetMeetMeRes struct {
	Return   Anon197 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMessageWaitingReq struct {
	Uuid               XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string          `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RMessageWaiting `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64          `xml:"sequence,attr,omitempty"`
}

type GetMessageWaitingRes struct {
	Return   Anon300 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMlppDomainReq struct {
	DomainName   string      `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMlppDomain `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetMlppDomainRes struct {
	Return   Anon261 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMobileSmartClientProfileReq struct {
	Name         string                    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMobileSmartClientProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                    `xml:"sequence,attr,omitempty"`
}

type GetMobileSmartClientProfileRes struct {
	Return   Anon176 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMobileVoiceAccessReq struct {
	Pattern      string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMobileVoiceAccess `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetMobileVoiceAccessRes struct {
	Return   Anon201 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMobilityProfileReq struct {
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMobilityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type GetMobilityProfileRes struct {
	Return   Anon582 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

// Retrieves mobility configuration information.
type GetMobilityReq struct {
	HandoffNumber XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 handoffNumber,omitempty"`
	DTMFNumber    XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 DTMFNumber,omitempty"`
	ReturnedTags  RMobility `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
}

type GetMobilityRes struct {
	Return   Anon813 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMohAudioSourceReq struct {
	SourceId     XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMohAudioSource   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetMohAudioSourceRes struct {
	Return   Anon182 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMohServerReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMohServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetMohServerRes struct {
	Return   Anon376 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetMtpReq struct {
	Name         string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RMtp   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetMtpRes struct {
	Return   Anon352 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetNotificationChangesReq struct {
	RegistrationId string              `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	ReturnedTags   RNotificationChange `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type GetNotificationChangesRes struct {
	ChangeNotification RNotificationChange `xml:"http://www.cisco.com/AXL/API/9.0 changeNotification,omitempty"`
	PollingInterval    string              `xml:"http://www.cisco.com/AXL/API/9.0 pollingInterval"`
	PollingStartTime   string              `xml:"http://www.cisco.com/AXL/API/9.0 pollingStartTime"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

type GetNotificationStatusReq struct {
	RegistrationId string `xml:"http://www.cisco.com/AXL/API/9.0 registrationId"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type GetNotificationStatusRes struct {
	ObjectList       []RObjectList `xml:"http://www.cisco.com/AXL/API/9.0 objectList"`
	PollingInterval  string        `xml:"http://www.cisco.com/AXL/API/9.0 pollingInterval"`
	PollingStartTime string        `xml:"http://www.cisco.com/AXL/API/9.0 pollingStartTime"`
	Sequence         uint64        `xml:"sequence,attr,omitempty"`
}

// This method returns the number of devices found.  The caller specifies what class of device they want counted.
type GetNumDevicesReq struct {
	Class    XClass `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

// Response to GetNumDevices.  Returns an integer value which is the number of devices found.  The class of device counted is represented by the "class" attribute.
type GetNumDevicesRes struct {
	Return   int    `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetNumDevicesResponse struct {
	Return   int    `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Class    string `xml:"class,attr,omitempty"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetOSVersionReq struct {
}

type GetOSVersionRes struct {
	Return   Anon811 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetPhoneButtonTemplateReq struct {
	Name         string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPhoneButtonTemplate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

type GetPhoneButtonTemplateRes struct {
	Return   Anon294 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetPhoneNtpReq struct {
	IpAddress    string    `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPhoneNtp `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetPhoneNtpRes struct {
	Return   Anon244 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetPhoneReq struct {
	Name         string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPhone `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetPhoneRes struct {
	Return   Anon394 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetPhoneSecurityProfileReq struct {
	Name         string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPhoneSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                `xml:"sequence,attr,omitempty"`
}

type GetPhoneSecurityProfileRes struct {
	Return   Anon337 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetPhoneTypeDisplayInstanceReq struct {
	ProductName string `xml:"http://www.cisco.com/AXL/API/9.0 productName"`
	Protocol    string `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type GetPhoneTypeDisplayInstanceRes struct {
	DisplayInstance string `xml:"http://www.cisco.com/AXL/API/9.0 displayInstance"`
	Sequence        uint64 `xml:"sequence,attr,omitempty"`
}

type GetPhysicalLocationReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPhysicalLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetPhysicalLocationRes struct {
	Return   Anon68 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetPresenceGroupReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RPresenceGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetPresenceGroupRes struct {
	Return   Anon252 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetProcessNodeReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RProcessNode `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetProcessNodeRes struct {
	Return   Anon20 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetProcessNodeServiceReq struct {
	Uuid            XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ProcessNodeName XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Service         XService            `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	ReturnedTags    RProcessNodeService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence        uint64              `xml:"sequence,attr,omitempty"`
}

type GetProcessNodeServiceRes struct {
	Return   Anon179 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRecordingProfileReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRecordingProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetRecordingProfileRes struct {
	Return   Anon141 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRegionReq struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRegion `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type GetRegionRes struct {
	Return   Anon62 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetRemoteClusterReq struct {
	ClusterId    string         `xml:"http://www.cisco.com/AXL/API/9.0 clusterId"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRemoteCluster `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetRemoteClusterRes struct {
	Return   Anon498 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRemoteDestinationProfileReq struct {
	Name         string                    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRemoteDestinationProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                    `xml:"sequence,attr,omitempty"`
}

type GetRemoteDestinationProfileRes struct {
	Return   Anon358 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRemoteDestinationReq struct {
	Destination  string             `xml:"http://www.cisco.com/AXL/API/9.0 destination"`
	Uuid         XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64             `xml:"sequence,attr,omitempty"`
}

type GetRemoteDestinationRes struct {
	Return   Anon418 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetResourcePriorityNamespaceListReq struct {
	Name         string                         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RResourcePriorityNamespaceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                         `xml:"sequence,attr,omitempty"`
}

type GetResourcePriorityNamespaceListRes struct {
	Return   Anon105 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetResourcePriorityNamespaceReq struct {
	Namespace    string                     `xml:"http://www.cisco.com/AXL/API/9.0 namespace"`
	Uuid         XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RResourcePriorityNamespace `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                     `xml:"sequence,attr,omitempty"`
}

type GetResourcePriorityNamespaceRes struct {
	Return   Anon98 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetRouteFilterReq struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRouteFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64       `xml:"sequence,attr,omitempty"`
}

type GetRouteFilterRes struct {
	Return   Anon148 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRouteGroupReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRouteGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetRouteGroupRes struct {
	Return   Anon75 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetRouteListReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRouteList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetRouteListRes struct {
	Return   Anon206 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetRoutePartitionReq struct {
	Name         string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RRoutePartition `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64          `xml:"sequence,attr,omitempty"`
}

type GetRoutePartitionRes struct {
	Return   Anon30 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetRoutePatternReq struct {
	Uuid               XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	ReturnedTags       RRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64        `xml:"sequence,attr,omitempty"`
}

type GetRoutePatternRes struct {
	Return   Anon328 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSIPNormalizationScriptReq struct {
	Name         string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSIPNormalizationScript `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                  `xml:"sequence,attr,omitempty"`
}

type GetSIPNormalizationScriptRes struct {
	Return   Anon591 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSNMPCommunityStringReq struct {
	CommunityName string `xml:"http://www.cisco.com/AXL/API/9.0 communityName"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type GetSNMPCommunityStringRes struct {
	Return   Anon840 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSNMPMIB2ListReq struct {
	SysContact string `xml:"http://www.cisco.com/AXL/API/9.0 sysContact"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type GetSNMPMIB2ListRes struct {
	Return   Anon842 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSNMPUserReq struct {
	UserName string `xml:"http://www.cisco.com/AXL/API/9.0 userName"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetSNMPUserRes struct {
	Return   Anon841 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSafCcdPurgeBlockLearnedRoutesReq struct {
	Uuid                 XUUID                          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LearnedPattern       string                         `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string                         `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string                         `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string                         `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	ReturnedTags         RSafCcdPurgeBlockLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence             uint64                         `xml:"sequence,attr,omitempty"`
}

type GetSafCcdPurgeBlockLearnedRoutesRes struct {
	Return   Anon516 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSafForwarderReq struct {
	Name         string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSafForwarder `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type GetSafForwarderRes struct {
	Return   Anon486 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSafSecurityProfileReq struct {
	Name         string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSafSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64              `xml:"sequence,attr,omitempty"`
}

type GetSafSecurityProfileRes struct {
	Return   Anon482 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetServiceParameterReq struct {
	Uuid            XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ProcessNodeName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Name            string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Service         XService          `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	ReturnedTags    RServiceParameter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence        uint64            `xml:"sequence,attr,omitempty"`
}

type GetServiceParameterRes struct {
	Return   Anon280 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetServiceProfileReq struct {
	Name         string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64          `xml:"sequence,attr,omitempty"`
}

type GetServiceProfileRes struct {
	Return   Anon607 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSipDialRulesReq struct {
	Name         string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSipDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type GetSipDialRulesRes struct {
	Return   Anon342 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSipProfileReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSipProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetSipProfileRes struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetSipRealmReq struct {
	Realm        string    `xml:"http://www.cisco.com/AXL/API/9.0 realm"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSipRealm `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetSipRealmRes struct {
	Return   Anon241 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSipRoutePatternReq struct {
	Uuid               XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	ReturnedTags       RSipRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64           `xml:"sequence,attr,omitempty"`
}

type GetSipRoutePatternRes struct {
	Return   Anon317 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSipTrunkReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSipTrunk `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetSipTrunkRes struct {
	Return   Anon473 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSipTrunkSecurityProfileReq struct {
	Name         string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSipTrunkSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                   `xml:"sequence,attr,omitempty"`
}

type GetSipTrunkSecurityProfileRes struct {
	Return   Anon2  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetSoftKeySetReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSoftKeySet `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetSoftKeySetRes struct {
	Return   Anon833 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSoftKeyTemplateReq struct {
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type GetSoftKeyTemplateRes struct {
	Return   Anon89 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetSrstReq struct {
	Name         string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RSrst  `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetSrstRes struct {
	Return   Anon258 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetSyslogConfigurationReq struct {
	ServerName   string               `xml:"http://www.cisco.com/AXL/API/9.0 serverName"`
	ServiceGroup XServiceGrouping     `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	Service      string               `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	ReturnedTags RSyslogConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64               `xml:"sequence,attr,omitempty"`
}

func (t *GetSyslogConfigurationReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T GetSyslogConfigurationReq
	var overlay struct {
		*T
		ServiceGroup *XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ServiceGroup = (*XServiceGrouping)(&overlay.T.ServiceGroup)
	return d.DecodeElement(&overlay, &start)
}

type GetSyslogConfigurationRes struct {
	Return   Anon836 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetTimePeriodReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetTimePeriodRes struct {
	Return   Anon5  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetTimeScheduleReq struct {
	Name         string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RTimeSchedule `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64        `xml:"sequence,attr,omitempty"`
}

type GetTimeScheduleRes struct {
	Return   Anon9  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetTodAccessReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RTodAccess `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetTodAccessRes struct {
	Return   Anon14 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetTransPatternReq struct {
	Uuid               XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	ReturnedTags       RTransPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence           uint64        `xml:"sequence,attr,omitempty"`
}

type GetTransPatternRes struct {
	Return   Anon311 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetTranscoderReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RTranscoder `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetTranscoderRes struct {
	Return   Anon92 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetTransformationProfileReq struct {
	Name         string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RTransformationProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64                 `xml:"sequence,attr,omitempty"`
}

type GetTransformationProfileRes struct {
	Return   Anon565 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetTvsCertificateReq struct {
	Uuid         XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	IssuerName   string          `xml:"http://www.cisco.com/AXL/API/9.0 issuerName"`
	SerialNumber string          `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber"`
	ReturnedTags RTvsCertificate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64          `xml:"sequence,attr,omitempty"`
}

type GetTvsCertificateRes struct {
	Return   Anon575 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetUcServiceReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RUcService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetUcServiceRes struct {
	Return   Anon615 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetUserGroupReq struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RUserGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

type GetUserGroupRes struct {
	Return   Anon163 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetUserReq struct {
	Userid       string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RUser  `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetUserRes struct {
	Return   Anon220 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVg224Req struct {
	DomainName   string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVg224 `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type GetVg224Res struct {
	Return   Anon432 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailPilotReq struct {
	Uuid         XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Dirn         string          `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	ReturnedTags RVoiceMailPilot `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64          `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailPilotRes struct {
	Return   Anon17 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailPortReq struct {
	Name         string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVoiceMailPort `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64         `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailPortRes struct {
	Return   Anon287 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailProfileReq struct {
	Name         string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVoiceMailProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64            `xml:"sequence,attr,omitempty"`
}

type GetVoiceMailProfileRes struct {
	Return   Anon284 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVpnGatewayReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVpnGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetVpnGatewayRes struct {
	Return   Anon520 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVpnGroupReq struct {
	Name         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVpnGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64    `xml:"sequence,attr,omitempty"`
}

type GetVpnGroupRes struct {
	Return   Anon524 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type GetVpnProfileReq struct {
	Name         string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ReturnedTags RVpnProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags,omitempty"`
	Sequence     uint64      `xml:"sequence,attr,omitempty"`
}

type GetVpnProfileRes struct {
	Return   Anon527 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type IsdnNsfInfoElement struct {
	Cic                    string       `xml:"http://www.cisco.com/AXL/API/9.0 cic,omitempty"`
	NetworkServiceProtocol XPriProtocol `xml:"http://www.cisco.com/AXL/API/9.0 networkServiceProtocol"`
	NetworkService         XNSFService  `xml:"http://www.cisco.com/AXL/API/9.0 networkService,omitempty"`
	ParamValue             string       `xml:"http://www.cisco.com/AXL/API/9.0 paramValue,omitempty"`
}

type LAarGroup struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Uuid XUUID  `xml:"uuid,attr,omitempty"`
}

type LAarGroupMatrix struct {
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName,omitempty"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName,omitempty"`
}

type LAarGroupRelationship struct {
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName,omitempty"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName,omitempty"`
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type LAddOnModule struct {
	LoadInformation XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	Model           XModel           `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Index           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid            XUUID            `xml:"uuid,attr,omitempty"`
}

type LAnalogPort struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon642                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Lines                       Anon643                      `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	SmdiPortNumber              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 smdiPortNumber,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type LAnnouncement struct {
	Name             string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AnnouncementFile string `xml:"http://www.cisco.com/AXL/API/9.0 announcementFile,omitempty"`
	Uuid             XUUID  `xml:"uuid,attr,omitempty"`
}

type LAnnunciator struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	UseTrustedRelayPoint XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	ServerName           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 serverName,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type LAppServerInfo struct {
	AppServerName    XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 appServerName,omitempty"`
	AppServerContent XAppServerContent `xml:"http://www.cisco.com/AXL/API/9.0 appServerContent,omitempty"`
	Content          XContent          `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	Uuid             XUUID             `xml:"uuid,attr,omitempty"`
}

type LAppUser struct {
	Userid                        string  `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	PresenceGroupName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	AcceptPresenceSubscription    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	IsStandard                    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isStandard,omitempty"`
	Uuid                          XUUID   `xml:"uuid,attr,omitempty"`
}

type LApplicationDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type LApplicationServer struct {
	AppServerType   XAppServer `xml:"http://www.cisco.com/AXL/API/9.0 appServerType,omitempty"`
	Name            string     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IpAddress       string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Url             string     `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	EndUserUrl      string     `xml:"http://www.cisco.com/AXL/API/9.0 endUserUrl,omitempty"`
	ProcessNodeName XFkType    `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	Uuid            XUUID      `xml:"uuid,attr,omitempty"`
}

type LApplicationUserCapfProfile struct {
	ApplicationUser              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	InstanceId                   string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
	CertificateOperation         XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode           XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString         string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                      XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion          string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	CertificationOperationStatus XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperationStatus,omitempty"`
	Uuid                         XUUID                 `xml:"uuid,attr,omitempty"`
}

type LAudioCodecPreferenceList struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LBLFDirectedCallPark struct {
	Label                          string                         `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	DirectedCallParkId             XUUID                          `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkId,omitempty"`
	DirectedCallParkDnAndPartition DirectedCallParkDnAndPartition `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkDnAndPartition,omitempty"`
	LabelAscii                     string                         `xml:"http://www.cisco.com/AXL/API/9.0 labelAscii,omitempty"`
	Index                          XInteger                       `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type LBillingServer struct {
	HostName              string                 `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
	UserId                string                 `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Password              string                 `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Directory             string                 `xml:"http://www.cisco.com/AXL/API/9.0 directory,omitempty"`
	ResendOnFailure       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
	BillingServerProtocol XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
	Uuid                  XUUID                  `xml:"uuid,attr,omitempty"`
}

type LBusyLampField struct {
	BlfDest        string   `xml:"http://www.cisco.com/AXL/API/9.0 blfDest,omitempty"`
	BlfDirn        string   `xml:"http://www.cisco.com/AXL/API/9.0 blfDirn,omitempty"`
	RoutePartition string   `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	Label          string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel     string   `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Index          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type LButton struct {
	Feature      XFeature `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
	Label        string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	ButtonNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 buttonNumber,omitempty"`
	Uuid         XUUID    `xml:"uuid,attr,omitempty"`
}

type LCallForwardAll struct {
	ForwardToVoiceMail              Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName          XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	SecondaryCallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 secondaryCallingSearchSpaceName,omitempty"`
	Destination                     string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardAlternateParty struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type LCallForwardBusy struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardBusyInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardNoAnswer struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type LCallForwardNoAnswerInt struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type LCallForwardNoCoverage struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardNoCoverageInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardNotRegistered struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardNotRegisteredInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallForwardOnFailure struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type LCallManager struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoRegistration Anon624 `xml:"http://www.cisco.com/AXL/API/9.0 autoRegistration,omitempty"`
	ProcessNodeName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	LbmGroup         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
	Ctiid            int     `xml:"ctiid,attr,omitempty"`
}

type LCallManagerGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	TftpDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 tftpDefault,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LCallManagerMember struct {
	CallManagerName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Priority        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type LCallPark struct {
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage              XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallManagerName    XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Uuid               XUUID         `xml:"uuid,attr,omitempty"`
}

type LCallPickupGroup struct {
	Pattern                       string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                   string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                         XPatternUsage       `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName            XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Name                          string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	PickupNotification            XPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
	PickupNotificationTimer       XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	CallInfoForPickupNotification Anon640             `xml:"http://www.cisco.com/AXL/API/9.0 callInfoForPickupNotification,omitempty"`
	Uuid                          XUUID               `xml:"uuid,attr,omitempty"`
}

type LCalledPartyTracing struct {
	Directorynumber string `xml:"http://www.cisco.com/AXL/API/9.0 directorynumber,omitempty"`
	Description     string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid            XUUID  `xml:"uuid,attr,omitempty"`
}

type LCalledPartyTransformationPattern struct {
	Pattern                       string         `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                   string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                         XPatternUsage  `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CalledPartyTransformationMask string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	DialPlanName                  XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName   XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	RouteFilterName               XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CalledPartyPrefixDigits       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyPrefixDigits,omitempty"`
	CalledPartyNumberingPlan      XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType         XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Uuid                          XUUID          `xml:"uuid,attr,omitempty"`
}

type LCallerFilterList struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsAllowedType Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isAllowedType,omitempty"`
	EndUserIdName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 endUserIdName,omitempty"`
	Uuid          XUUID   `xml:"uuid,attr,omitempty"`
}

type LCallerFilterListMember struct {
	DnMask           string            `xml:"http://www.cisco.com/AXL/API/9.0 DnMask,omitempty"`
	CallerFilterMask XCallerFilterMask `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterMask,omitempty"`
	Uuid             XUUID             `xml:"uuid,attr,omitempty"`
}

type LCallingPartyTransformationPattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage    `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	DialPlanName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	RouteFilterName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	Uuid                           XUUID            `xml:"uuid,attr,omitempty"`
}

type LCallingSearchSpaceMember struct {
	RoutePartitionName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Index              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type LCallsQueue struct {
	MaxCallersInQueue                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxCallersInQueue,omitempty"`
	QueueFullDestination             string   `xml:"http://www.cisco.com/AXL/API/9.0 queueFullDestination,omitempty"`
	CallingSearchSpacePilotQueueFull XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpacePilotQueueFull,omitempty"`
	MaxWaitTimeInQueue               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeInQueue,omitempty"`
	MaxWaitTimeDestination           string   `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeDestination,omitempty"`
	CallingSearchSpaceMaxWaitTime    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceMaxWaitTime,omitempty"`
	NoAgentDestination               string   `xml:"http://www.cisco.com/AXL/API/9.0 noAgentDestination,omitempty"`
	CallingSearchSpaceNoAgent        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceNoAgent,omitempty"`
	NetworkHoldMohAudioSourceID      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceID,omitempty"`
	Uuid                             XUUID    `xml:"uuid,attr,omitempty"`
}

type LCcdAdvertisingService struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LCcdHostedDN struct {
	HostedPattern             string   `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CcdHostedDnGroup          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 CcdHostedDnGroup,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Uuid                      XUUID    `xml:"uuid,attr,omitempty"`
}

type LCcdHostedDNGroup struct {
	Name                      string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Uuid                      XUUID    `xml:"uuid,attr,omitempty"`
}

type LCcdRequestingService struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	RoutePartitionName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	LearnedPatternPrefix string  `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	PstnPrefix           string  `xml:"http://www.cisco.com/AXL/API/9.0 pstnPrefix,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type LCcdRequestingServiceMember struct {
	TrunkName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 trunkName,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type LCcmExternalIpMap struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	IpAddressHost   string  `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressHost,omitempty"`
	Port            string  `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type LCertificateRole struct {
	RoleName XTrustRole `xml:"http://www.cisco.com/AXL/API/9.0 roleName,omitempty"`
	Uuid     XUUID      `xml:"uuid,attr,omitempty"`
}

type LCiscoCatalyst600024PortFXSGateway struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                    XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	PortSelectionOrder               XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 portSelectionOrder,omitempty"`
	TransmitUtf8                     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type LCiscoCatalyst6000E1VoIPGateway struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon638                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type LCiscoCatalyst6000T1VoIPGatewayPri struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon639                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type LCiscoCatalyst6000T1VoIPGatewayT1 struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type LCmcInfo struct {
	Code        string `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LCommonDeviceConfig struct {
	Name                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SoftkeyTemplateName               XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	UserLocale                        XUserLocale                  `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	MlppIndicationStatus              XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	UseTrustedRelayPoint              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	Preemption                        XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	IpAddressingMode                  XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
	IpAddressingModePreferenceControl XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
	AllowAutoConfigurationForPhones   XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
	UseImeForOutboundCalls            XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
	Uuid                              XUUID                        `xml:"uuid,attr,omitempty"`
}

type LCommonPhoneConfig struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndAlertingType                   XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
	BackgroundImage                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
	PhonePersonalization              XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	VpnGroupName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroupName,omitempty"`
	VpnProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfileName,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Uuid                              XUUID                 `xml:"uuid,attr,omitempty"`
}

type LConferenceBridge struct {
	Name                       string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                    XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DevicePoolName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName     XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName               XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	SubUnit                    XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	LoadInformation            XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	MaximumCapacity            XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	UseTrustedRelayPoint       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	DestinationAddress         string           `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	McuConferenceBridgeSipPort XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
	SipProfile                 XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile,omitempty"`
	SrtpAllowed                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	NormalizationScript        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScript,omitempty"`
	EnableTrace                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 enableTrace,omitempty"`
	UserName                   string           `xml:"http://www.cisco.com/AXL/API/9.0 userName,omitempty"`
	Password                   string           `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	HttpPort                   XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
	UseHttps                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
	Uuid                       XUUID            `xml:"uuid,attr,omitempty"`
}

type LCredentialPolicy struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	FailedLogon              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
	ResetFailedLogonAttempts XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
	LockoutDuration          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
	CredChangeDuration       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
	CredExpiresAfter         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
	MinCredLength            XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
	PrevCredStoredNum        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
	InactiveDaysAllowed      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
	ExpiryWarningDays        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
	TrivialCredCheck         Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
	Uuid                     XUUID    `xml:"uuid,attr,omitempty"`
}

type LCss struct {
	Name                string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description         string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Clause              string          `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanWizardGenId XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	PartitionUsage      XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	Uuid                XUUID           `xml:"uuid,attr,omitempty"`
}

type LCtiRoutePoint struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                         XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UseTrustedRelayPoint          XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	Uuid                          XUUID             `xml:"uuid,attr,omitempty"`
}

type LCumaServerSecurityProfile struct {
	Name             string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	TransportType    XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	X509SubjectName  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	ServerIpHostName string              `xml:"http://www.cisco.com/AXL/API/9.0 serverIpHostName,omitempty"`
	Uuid             XUUID               `xml:"uuid,attr,omitempty"`
}

type LCustomUserField struct {
	Field string `xml:"http://www.cisco.com/AXL/API/9.0 field,omitempty"`
	Uuid  XUUID  `xml:"uuid,attr,omitempty"`
}

type LDateTimeGroup struct {
	Name       string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	TimeZone   XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	Dateformat string    `xml:"http://www.cisco.com/AXL/API/9.0 dateformat,omitempty"`
	Uuid       XUUID     `xml:"uuid,attr,omitempty"`
}

type LDateTimeGroupNtpReference struct {
	PhoneNtpName   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpName,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type LDdi struct {
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause          string   `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanName    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitAnalysisId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitAnalysisId,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type LDefaultDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PhoneButtonTemplate               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate,omitempty"`
	SoftkeyTemplate                   XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplate,omitempty"`
	Privacy                           XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	IgnorePi                          Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePi,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	MlppIndication                    XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	Uuid                              XUUID             `xml:"uuid,attr,omitempty"`
}

type LDeviceMobility struct {
	Name         string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SubNet       string   `xml:"http://www.cisco.com/AXL/API/9.0 subNet,omitempty"`
	SubNetMaskSz XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subNetMaskSz,omitempty"`
	Uuid         XUUID    `xml:"uuid,attr,omitempty"`
}

type LDeviceMobilityGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LDevicePool struct {
	Name                                           string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	AutoSearchSpaceName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 autoSearchSpaceName,omitempty"`
	DateTimeSettingName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeSettingName,omitempty"`
	CallManagerGroupName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	MediaResourceListName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	RegionName                                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
	NetworkLocale                                  XCountry        `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	SrstName                                       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 srstName,omitempty"`
	ConnectionMonitorDuration                      XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LocationName                                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MobilityCssName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mobilityCssName,omitempty"`
	PhysicalLocationName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocationName,omitempty"`
	DeviceMobilityGroupName                        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroupName,omitempty"`
	RevertPriority                                 XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
	SingleButtonBarge                              XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                                XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CgpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	CdpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	LocalRouteGroupName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 localRouteGroupName,omitempty"`
	GeoLocationName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CallingPartyNationalPrefix                     string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	AdjunctCallingSearchSpace                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 adjunctCallingSearchSpace,omitempty"`
	CallingPartyNationalStripDigits                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	ImeEnrolledPatternGroupName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	Uuid                                           XUUID           `xml:"uuid,attr,omitempty"`
}

type LDevicePoolDeviceMobility struct {
	DevicePoolName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	Uuid           XUUID   `xml:"uuid,attr,omitempty"`
}

type LDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	TraceFlag                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	DefaultProfileName                string            `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	CurrentProfileName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 currentProfileName,omitempty"`
	LoginTime                         XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 loginTime,omitempty"`
	LoginDuration                     XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 loginDuration,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	LoginUserId                       XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	CurrentConfig                     Anon633           `xml:"http://www.cisco.com/AXL/API/9.0 currentConfig,omitempty"`
	FeatureControlPolicy              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Ctiid                             int               `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID             `xml:"uuid,attr,omitempty"`
}

type LDhcpServer struct {
	ProcessNodeName              XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Uuid                         XUUID    `xml:"uuid,attr,omitempty"`
}

type LDhcpSubnet struct {
	SubnetIpAddress              string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress,omitempty"`
	PrimaryStartIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryStartIpAddress,omitempty"`
	PrimaryEndIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryEndIpAddress,omitempty"`
	SecondaryStartIpAddress      string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryStartIpAddress,omitempty"`
	SecondaryEndIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryEndIpAddress,omitempty"`
	PrimaryRouterIpAddress       string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryRouterIpAddress,omitempty"`
	SecondaryRouterIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryRouterIpAddress,omitempty"`
	SubnetMask                   string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetMask,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Uuid                         XUUID    `xml:"uuid,attr,omitempty"`
}

type LDialPlan struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LDialPlanTag struct {
	Name                    string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DialPlanName            XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	Operator                XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
	SuppressFromRouteFilter Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 suppressFromRouteFilter,omitempty"`
	Uuid                    XUUID     `xml:"uuid,attr,omitempty"`
}

type LDigitDiscardInstructionMember struct {
	DialPlanTagName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type LDirectedCallPark struct {
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage              XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	RetrievalPrefix    string        `xml:"http://www.cisco.com/AXL/API/9.0 retrievalPrefix,omitempty"`
	ReversionPattern   string        `xml:"http://www.cisco.com/AXL/API/9.0 reversionPattern,omitempty"`
	RevertCssName      XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 revertCssName,omitempty"`
	Uuid               XUUID         `xml:"uuid,attr,omitempty"`
}

type LDirectoryLookupDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type LDirectoryUri struct {
	IsPrimary Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPrimary,omitempty"`
	Uri       string  `xml:"http://www.cisco.com/AXL/API/9.0 uri,omitempty"`
	Partition XFkType `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type LDirn struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type LEmccFeatureConfig struct {
	ParameterName string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
	Value         string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	Uuid          XUUID  `xml:"uuid,attr,omitempty"`
}

type LEndUserCapfProfile struct {
	EndUserId                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 endUserId,omitempty"`
	InstanceId                   string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
	CertificationOperation       XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
	AuthenticationMode           XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString         string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                      XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion          string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	CertificationOperationStatus XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperationStatus,omitempty"`
	Uuid                         XUUID                 `xml:"uuid,attr,omitempty"`
}

type LEnduserMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
}

type LEnterpriseFeatureAccessConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type LExternalCallControlProfile struct {
	Name                      string                  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	PrimaryUri                string                  `xml:"http://www.cisco.com/AXL/API/9.0 primaryUri,omitempty"`
	SecondaryUri              string                  `xml:"http://www.cisco.com/AXL/API/9.0 secondaryUri,omitempty"`
	EnableLoadBalancing       Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
	RoutingRequestTimer       XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 routingRequestTimer,omitempty"`
	DiversionReroutingCssName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 diversionReroutingCssName,omitempty"`
	CallTreatmentOnFailure    XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
	Uuid                      XUUID                   `xml:"uuid,attr,omitempty"`
}

type LFacInfo struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Code               string   `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	AuthorizationLevel XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type LFallbackProfile struct {
	Name                                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                           string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AdvertisedFallbackDirectoryE164Number string                `xml:"http://www.cisco.com/AXL/API/9.0 advertisedFallbackDirectoryE164Number,omitempty"`
	QosSensistivityLevel                  XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	CallCss                               XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
	CallAnswerTimer                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	DirectoryNumberPartition              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumberPartition,omitempty"`
	DirectoryNumber                       string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	NumberOfDigitsForCallerIDPartialMatch XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
	NumberOfCorrelationDtmfDigits         XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfCorrelationDtmfDigits,omitempty"`
	Uuid                                  XUUID                 `xml:"uuid,attr,omitempty"`
}

type LFeatureControlConfig struct {
	FeatureName     string  `xml:"http://www.cisco.com/AXL/API/9.0 featureName,omitempty"`
	DefaultValue    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 defaultValue,omitempty"`
	OverrideDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 overrideDefault,omitempty"`
	EnableSetting   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableSetting,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type LFeatureControlPolicy struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LFixedMohAudioSource struct {
	SourceId  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	Name      string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Multicast Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Enable    string   `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	Uuid      XUUID    `xml:"uuid,attr,omitempty"`
}

type LGatekeeper struct {
	Name          string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description   string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RrqTimeToLive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
	RetryTimeout  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
	EnableDevice  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
	Uuid          XUUID    `xml:"uuid,attr,omitempty"`
}

type LGateway struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Scratch              string          `xml:"http://www.cisco.com/AXL/API/9.0 scratch,omitempty"`
	LoadInformation      string          `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointAnalog struct {
	Index                                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                              string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                    XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                 XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                             XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Port                                     LAnalogPort          `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	TrunkSelectionOrder                      XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	TransmitUtf8                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode   `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	ImeE164DirectoryNumber                   string               `xml:"http://www.cisco.com/AXL/API/9.0 imeE164DirectoryNumber,omitempty"`
	Ctiid                                    int                  `xml:"ctiid,attr,omitempty"`
	Uuid                                     XUUID                `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointAnalogAccess struct {
	DomainName  string                 `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    LGatewayEndpointAnalog `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                  `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalAccessBri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    LGatewayEndpointDigitalBri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                      `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalAccessPri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    LGatewayEndpointDigitalPri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                      `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalAccessT1 struct {
	DomainName  string                    `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    LGatewayEndpointDigitalT1 `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                     `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalBri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	BriProtocol                        XBriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 briProtocol,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	PresentationBit                    XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon645                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalPri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIE                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIE,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIe                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIe,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon644                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	RouteClassSignalling               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type LGatewayEndpointDigitalT1 struct {
	Index                            XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	V150                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	EncodeOutboundVoiceRouteClass    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 encodeOutboundVoiceRouteClass,omitempty"`
	RouteClassSignalling             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Ctiid                            int                  `xml:"ctiid,attr,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type LGatewaySccp struct {
	Index                                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                              string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct           `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                    XModel             `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass             `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                 XDeviceProtocol    `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                             XProtocolSide      `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry           `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig      `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string             `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	TransmitUtf8                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	PhoneTemplateName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	SecurityProfileName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	UserLocale                               XUserLocale        `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	DeviceMobilityMode                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	OwnerUserId                              XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserId,omitempty"`
	CommonPhoneConfigName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	AlwaysUsePrimeLine                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVM                  XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVM,omitempty"`
	AllowCtiControlFlag                      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RemoteDevice                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	SubscribeCallingSearchSpaceName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	UnattendedPort                           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	PresenceGroupName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	MlppIndicationStatus                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                               XPreemption        `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	HlogStatus                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	IgnorePresentationIndicators             XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Lines                                    Anon648            `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	Ctiid                                    int                `xml:"ctiid,attr,omitempty"`
	Uuid                                     XUUID              `xml:"uuid,attr,omitempty"`
}

type LGatewaySccpEndpoints struct {
	DomainName  string       `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    LGatewaySccp `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID        `xml:"uuid,attr,omitempty"`
}

type LGatewaySubunits struct {
	DomainName  string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type LGeoLocation struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Country                string `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	Uuid                   XUUID  `xml:"uuid,attr,omitempty"`
}

type LGeoLocationFilter struct {
	Name                      string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UseCountry                Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCountry,omitempty"`
	UseNationalSubDivision    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNationalSubDivision,omitempty"`
	UseDistrict               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useDistrict,omitempty"`
	UseCommunityName          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCommunityName,omitempty"`
	UseCityDivision           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCityDivision,omitempty"`
	UseNeighbourhood          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNeighbourhood,omitempty"`
	UseStreet                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreet,omitempty"`
	UseLeadingStreetDirection Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLeadingStreetDirection,omitempty"`
	UseTrailingStreetSuffix   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useTrailingStreetSuffix,omitempty"`
	UseStreetSuffix           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreetSuffix,omitempty"`
	UseHouseNumber            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumber,omitempty"`
	UseHouseNumberSuffix      Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumberSuffix,omitempty"`
	UseLandmark               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLandmark,omitempty"`
	UseLocation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLocation,omitempty"`
	UseFloor                  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useFloor,omitempty"`
	UseOccupantName           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useOccupantName,omitempty"`
	UsePostalCode             Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePostalCode,omitempty"`
	Uuid                      XUUID   `xml:"uuid,attr,omitempty"`
}

type LGeoLocationPolicy struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Country                string `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	Uuid                   XUUID  `xml:"uuid,attr,omitempty"`
}

type LH323Gateway struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                          XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                                XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	SigDigits                                      Anon632                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	CallingPartyNationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	DisplayIeDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIeDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
	Uuid                                           XUUID                  `xml:"uuid,attr,omitempty"`
}

type LH323Line struct {
	Index                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Label                string          `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel           string          `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display              string          `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                 LDirn           `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	DisplayAscii         string          `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask             string          `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	DialPlanWizardId     XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardId,omitempty"`
	MaxNumCalls          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay      Anon647         `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag        XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi           XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial            string          `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage       XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
	Ctiid                int             `xml:"ctiid,attr,omitempty"`
}

type LH323Phone struct {
	Name                              string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	LocationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	UseTrustedRelayPoint              XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	RemoteDevice                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	CgpnTransformationCssName         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AlwaysUsePrimeLine                XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SrtpAllowed                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	MtpRequired                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferredCodec                 XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
	CallerIdDn                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection             XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	PresenceGroupName                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	HlogStatus                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	SignalingPort                     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	IgnorePresentationIndicators      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Ctiid                             int                    `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID                  `xml:"uuid,attr,omitempty"`
}

type LH323Trunk struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                          XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppIndicationStatus                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                                Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	NationalPrefix                                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                                  string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	SigDigits                                      Anon629                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	GateKeeperInfo                                 Anon630                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	RemoteServerinfo                               Anon631                `xml:"http://www.cisco.com/AXL/API/9.0 remoteServerinfo,omitempty"`
	IctPassingPrecedenceLevelThroughUuie           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ictPassingPrecedenceLevelThroughUuie,omitempty"`
	IctSecurityAccessLevel                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
	IsSafEnabled                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	RunOnEveryNode                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
	Uuid                                           XUUID                  `xml:"uuid,attr,omitempty"`
}

type LH323TrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type LHandoffConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type LHuntForwardInfoBusy struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type LHuntForwardInfoNoAnswer struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type LHuntList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	VoiceMailUsage       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type LHuntListMember struct {
	LineGroupName  XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 lineGroupName,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type LHuntPilot struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	HuntListName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 huntListName,omitempty"`
	ParkMonForwardNoRetrieve       Anon626            `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieve,omitempty"`
	AlertingName                   string             `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName              string             `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	AarNeighborhoodName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	ForwardHuntNoAnswer            Anon627            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntNoAnswer,omitempty"`
	ForwardHuntBusy                Anon628            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntBusy,omitempty"`
	CallPickupGroupName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	MaxHuntduration                XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	DisplayConnectedNumber         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	QueueCalls                     LCallsQueue        `xml:"http://www.cisco.com/AXL/API/9.0 queueCalls,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type LImeClient struct {
	Name                        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Domain                      string  `xml:"http://www.cisco.com/AXL/API/9.0 domain,omitempty"`
	IsActivated                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName                XFkType `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	PrimaryImeServerName        XFkType `xml:"http://www.cisco.com/AXL/API/9.0 primaryImeServerName,omitempty"`
	SecondaryImeServerName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 secondaryImeServerName,omitempty"`
	LearnedRouteFilterGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 learnedRouteFilterGroupName,omitempty"`
	ExclusionNumberGroupName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 exclusionNumberGroupName,omitempty"`
	FirewallName                XFkType `xml:"http://www.cisco.com/AXL/API/9.0 firewallName,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeClientMember struct {
	EnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 enrolledPatternGroupName,omitempty"`
	Uuid                     XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeE164Transformation struct {
	Name                                  string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CgpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	IsCgpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
	CdpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	IsCdpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	IncomingCgpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCgpnTransformationProfileName,omitempty"`
	IncomingCdpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCdpnTransformationProfileName,omitempty"`
	Uuid                                  XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeEnrolledPattern struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeEnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeEnrolledPatternGroup struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FallbackProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfileName,omitempty"`
	IsPatternAllAlias   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeExclusionNumber struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeExclusionNumberGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroupName,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeExclusionNumberGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LImeFirewall struct {
	Name        string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type LImeRouteFilterElement struct {
	Name                    string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ElementType             XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	ImeRouteFilterGroupName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroupName,omitempty"`
	Uuid                    XUUID              `xml:"uuid,attr,omitempty"`
}

type LImeRouteFilterGroup struct {
	Name              string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	GroupTrustSetting Boolean `xml:"http://www.cisco.com/AXL/API/9.0 groupTrustSetting,omitempty"`
	Uuid              XUUID   `xml:"uuid,attr,omitempty"`
}

type LImeServer struct {
	Name               string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress          string              `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	DeviceSecurityMode XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	ApplicationUser    XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	ReconnectInterval  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
	Uuid               XUUID               `xml:"uuid,attr,omitempty"`
}

type LImportedDirectoryUriCatalogs struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RouteString        string   `xml:"http://www.cisco.com/AXL/API/9.0 routeString,omitempty"`
	LastLoadedFileName string   `xml:"http://www.cisco.com/AXL/API/9.0 lastLoadedFileName,omitempty"`
	FileLoadDateTime   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fileLoadDateTime,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type LInterClusterServiceProfile struct {
	InterClusterService XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	IsActivated         Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	Uuid                XUUID                `xml:"uuid,attr,omitempty"`
}

type LIpPhoneServices struct {
	ServiceName            string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
	AsciiServiceName       string                `xml:"http://www.cisco.com/AXL/API/9.0 asciiServiceName,omitempty"`
	ServiceDescription     string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceDescription,omitempty"`
	ServiceUrl             string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceUrl,omitempty"`
	SecureServiceUrl       string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServiceUrl,omitempty"`
	ServiceCategory        XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
	ServiceType            XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ServiceVendor          string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVendor,omitempty"`
	ServiceVersion         string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVersion,omitempty"`
	Enabled                Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	EnterpriseSubscription Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseSubscription,omitempty"`
	Uuid                   XUUID                 `xml:"uuid,attr,omitempty"`
}

type LIpPhoneServicesParameter struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DisplayName   string  `xml:"http://www.cisco.com/AXL/API/9.0 displayName,omitempty"`
	Default       string  `xml:"http://www.cisco.com/AXL/API/9.0 default,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ParamRequired Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramRequired,omitempty"`
	ParamPassword Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramPassword,omitempty"`
	Uuid          XUUID   `xml:"uuid,attr,omitempty"`
}

type LIvrUserLocale struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex,omitempty"`
	Uuid       XUUID       `xml:"uuid,attr,omitempty"`
}

type LLbmGroup struct {
	Name               string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 Description,omitempty"`
	ProcessnodeActive  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeActive,omitempty"`
	ProcessnodeStandby XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeStandby,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type LLbmHubGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Member1     string `xml:"http://www.cisco.com/AXL/API/9.0 member1,omitempty"`
	Member2     string `xml:"http://www.cisco.com/AXL/API/9.0 member2,omitempty"`
	Member3     string `xml:"http://www.cisco.com/AXL/API/9.0 member3,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LLdapDirectory struct {
	Name           string        `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	LdapDn         string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapDn,omitempty"`
	UserSearchBase string        `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
	Repeatable     Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 repeatable,omitempty"`
	IntervalValue  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 intervalValue,omitempty"`
	ScheduleUnit   XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	NextExecTime   string        `xml:"http://www.cisco.com/AXL/API/9.0 nextExecTime,omitempty"`
	Uuid           XUUID         `xml:"uuid,attr,omitempty"`
}

type LLdapFilter struct {
	Name   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Filter string `xml:"http://www.cisco.com/AXL/API/9.0 filter,omitempty"`
	Uuid   XUUID  `xml:"uuid,attr,omitempty"`
}

type LLdapSyncCustomField struct {
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName,omitempty"`
	CustomUserField       string `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
	LdapUserField         string `xml:"http://www.cisco.com/AXL/API/9.0 ldapUserField,omitempty"`
	Uuid                  XUUID  `xml:"uuid,attr,omitempty"`
}

type LLicenseCapabilities struct {
	Userid    string  `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	EnableUps Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
	EnableUpc Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type LLine struct {
	Pattern                              string                  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                          string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                                XPatternUsage           `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName                   XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	AarNeighborhoodName                  XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	AarDestinationMask                   string                  `xml:"http://www.cisco.com/AXL/API/9.0 aarDestinationMask,omitempty"`
	AarKeepCallHistory                   Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 aarKeepCallHistory,omitempty"`
	AarVoiceMailEnabled                  Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 aarVoiceMailEnabled,omitempty"`
	CallPickupGroupName                  XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	AutoAnswer                           XAutoAnswer             `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
	NetworkHoldMohAudioSourceId          XMOHAudioSourceId       `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId             XMOHAudioSourceId       `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AlertingName                         string                  `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName                    string                  `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	PresenceGroupName                    XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	ShareLineAppearanceCssName           XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 shareLineAppearanceCssName,omitempty"`
	VoiceMailProfileName                 XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	PatternPrecedence                    XPatternPrecedence      `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                        XReleaseCauseValue      `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	HrDuration                           XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 hrDuration,omitempty"`
	HrInterval                           XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 hrInterval,omitempty"`
	CfaCssPolicy                         XCFACSSActivationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
	DefaultActivatedDeviceName           XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 defaultActivatedDeviceName,omitempty"`
	ParkMonForwardNoRetrieveDn           string                  `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveDn,omitempty"`
	ParkMonForwardNoRetrieveIntDn        string                  `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntDn,omitempty"`
	ParkMonForwardNoRetrieveVmEnabled    Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveIntVmEnabled Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveCssName      XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveCssName,omitempty"`
	ParkMonForwardNoRetrieveIntCssName   XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntCssName,omitempty"`
	ParkMonReversionTimer                XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 parkMonReversionTimer,omitempty"`
	PartyEntranceTone                    XStatus                 `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
	AllowCtiControlFlag                  Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RejectAnonymousCall                  Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousCall,omitempty"`
	Uuid                                 XUUID                   `xml:"uuid,attr,omitempty"`
}

type LLineAppearanceAssociationForPresence struct {
	LaapAssociate   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 laapAssociate,omitempty"`
	LaapProductType string  `xml:"http://www.cisco.com/AXL/API/9.0 laapProductType,omitempty"`
	LaapDeviceName  string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDeviceName,omitempty"`
	LaapDirectory   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDirectory,omitempty"`
	LaapPartition   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapPartition,omitempty"`
	LaapDescription string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDescription,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type LLineAssociation struct {
	Uuid               XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid,omitempty"`
	Pattern            string   `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Index              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type LLineGroup struct {
	Name                      string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DistributionAlgorithm     XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	RnaReversionTimeOut       XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
	HuntAlgorithmNoAnswer     XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
	HuntAlgorithmBusy         XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
	HuntAlgorithmNotAvailable XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	Uuid                      XUUID                `xml:"uuid,attr,omitempty"`
}

type LLineGroupMember struct {
	LineSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lineSelectionOrder,omitempty"`
	DirectoryNumber    LDirn    `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type LLocation struct {
	Name                 string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Id                   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 id,omitempty"`
	Kbits                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 kbits,omitempty"`
	VideoKbits           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoKbits,omitempty"`
	WithinAudioBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
	WithinVideoBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
	WithinImmersiveKbits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	Uuid                 XUUID    `xml:"uuid,attr,omitempty"`
}

type LLocationBetween struct {
	LocationName       XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	Weight             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 weight,omitempty"`
	AudioBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 audioBandwidth,omitempty"`
	VideoBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	ImmersiveBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 immersiveBandwidth,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type LLocationRelationship struct {
	LocationName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	RsvpSetting  XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 rsvpSetting,omitempty"`
	Uuid         XUUID        `xml:"uuid,attr,omitempty"`
}

type LMediaResourceGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Multicast   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LMediaResourceGroupMember struct {
	DeviceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Uuid       XUUID   `xml:"uuid,attr,omitempty"`
}

type LMediaResourceList struct {
	Name   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause string `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	Uuid   XUUID  `xml:"uuid,attr,omitempty"`
}

type LMediaResourceListMember struct {
	MediaResourceGroupName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroupName,omitempty"`
	Order                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 order,omitempty"`
	Uuid                   XUUID    `xml:"uuid,attr,omitempty"`
}

type LMeetMe struct {
	Pattern              string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description          string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                XPatternUsage       `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName   XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	MinimumSecurityLevel XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 minimumSecurityLevel,omitempty"`
	Uuid                 XUUID               `xml:"uuid,attr,omitempty"`
}

type LMessageWaiting struct {
	Pattern                 string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MessageWaitingIndicator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	CallingSearchSpaceName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Uuid                    XUUID   `xml:"uuid,attr,omitempty"`
}

type LMlppDomain struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	DomainId   string `xml:"http://www.cisco.com/AXL/API/9.0 domainId,omitempty"`
	Uuid       XUUID  `xml:"uuid,attr,omitempty"`
}

type LMobileSmartClientProfile struct {
	Name              string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	MobileSmartClient XMobileSmartClient `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClient,omitempty"`
	EnableSnrUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableSnrUri,omitempty"`
	EnableCFAUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableCFAUri,omitempty"`
	HandOffUri        string             `xml:"http://www.cisco.com/AXL/API/9.0 handOffUri,omitempty"`
	Uuid              XUUID              `xml:"uuid,attr,omitempty"`
}

type LMobileVoiceAccess struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type LMobileVoiceMember struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex,omitempty"`
	Uuid       XUUID       `xml:"uuid,attr,omitempty"`
}

type LMobilityProfile struct {
	Name                      string         `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MobileClientCallingOption XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	DvofServiceAccessNumber   string         `xml:"http://www.cisco.com/AXL/API/9.0 dvofServiceAccessNumber,omitempty"`
	DvorCallerId              string         `xml:"http://www.cisco.com/AXL/API/9.0 dvorCallerId,omitempty"`
	Uuid                      XUUID          `xml:"uuid,attr,omitempty"`
}

type LMohAudioSource struct {
	SourceId                     XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	Name                         string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SourceFile                   string            `xml:"http://www.cisco.com/AXL/API/9.0 sourceFile,omitempty"`
	Multicast                    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Repeat                       Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 repeat,omitempty"`
	MohFileStatus                XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 mohFileStatus,omitempty"`
	InitialAnnouncement          XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncement,omitempty"`
	PeriodicAnnouncement         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncement,omitempty"`
	PeriodicAnnouncementInterval XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
	LocaleAnnouncement           XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	InitialAnnouncementPlayed    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncementPlayed,omitempty"`
	Uuid                         XUUID             `xml:"uuid,attr,omitempty"`
}

type LMohServer struct {
	Name                    string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ProcessNodeName         XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	DevicePoolName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName            XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MaxUnicastConnections   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
	MaxMulticastConnections XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
	FixedAudioSourceDevice  string   `xml:"http://www.cisco.com/AXL/API/9.0 fixedAudioSourceDevice,omitempty"`
	RunFlag                 Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
	UseTrustedRelayPoint    XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	IsMultiCastEnabled      Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isMultiCastEnabled,omitempty"`
	BaseMulticastIpaddress  string   `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
	BaseMulticastPort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
	MulticastIncrementOnIp  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	Uuid                    XUUID    `xml:"uuid,attr,omitempty"`
}

type LMtp struct {
	MtpType           XProduct `xml:"http://www.cisco.com/AXL/API/9.0 mtpType,omitempty"`
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	TrustedRelayPoint Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trustedRelayPoint,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type LNormalizationScriptInfo struct {
	ParameterName  string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
	ParameterValue string `xml:"http://www.cisco.com/AXL/API/9.0 parameterValue,omitempty"`
	Uuid           XUUID  `xml:"uuid,attr,omitempty"`
}

type LNumplanIdentifier struct {
	DirectoryNumber    string `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type LParameterMember struct {
	Parameter      XDialParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter,omitempty"`
	Value          string         `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	SelectionOrder XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

type LPatternMember struct {
	Description    string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

type LPhone struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct              `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel                `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass                `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol       `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide         `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	NetworkLocation                   XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                   XLoadInformation      `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TraceFlag                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppIndicationStatus              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName         XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	NumberOfButtons                   XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfButtons,omitempty"`
	PhoneTemplateName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	PrimaryPhoneName                  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	RingSettingIdleBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
	RingSettingBusyBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
	UserLocale                        XUserLocale           `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkLocale                     XCountry              `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	IdleTimeout                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 idleTimeout,omitempty"`
	AuthenticationUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationUrl,omitempty"`
	DirectoryUrl                      string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryUrl,omitempty"`
	IdleUrl                           string                `xml:"http://www.cisco.com/AXL/API/9.0 idleUrl,omitempty"`
	InformationUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 informationUrl,omitempty"`
	MessagesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 messagesUrl,omitempty"`
	ProxyServerUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 proxyServerUrl,omitempty"`
	ServicesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 servicesUrl,omitempty"`
	SoftkeyTemplateName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	LoginUserId                       string                `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	DefaultProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	EnableExtensionMobility           Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	CurrentProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 currentProfileName,omitempty"`
	LoginTime                         XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 loginTime,omitempty"`
	LoginDuration                     XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 loginDuration,omitempty"`
	CurrentConfig                     CurrentConfig         `xml:"http://www.cisco.com/AXL/API/9.0 currentConfig,omitempty"`
	SingleButtonBarge                 XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	BuiltInBridgeStatus               XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
	CallInfoPrivacyStatus             XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	HlogStatus                        XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	IgnorePresentationIndicators      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	PacketCaptureMode                 XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration             XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	AllowCtiControlFlag               Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	PresenceGroupName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnattendedPort                    Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	RequireDtmfReception              Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
	Rfc2833Disabled                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
	CertificateOperation              XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode                XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                           XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	AuthenticationString              string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	CertificateStatus                 XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificateStatus,omitempty"`
	UpgradeFinishTime                 string                `xml:"http://www.cisco.com/AXL/API/9.0 upgradeFinishTime,omitempty"`
	DeviceMobilityMode                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	RoamingDevicePoolName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 roamingDevicePoolName,omitempty"`
	RemoteDevice                      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	IsActive                          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	IsDualMode                        Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isDualMode,omitempty"`
	MobilityUserIdName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobilityUserIdName,omitempty"`
	PhoneSuite                        XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	IsProtected                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
	MobileSmartClientProfileName      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	MtpRequired                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferedCodec                  XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
	DialRulesName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 dialRulesName,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	DigestUser                        string                `xml:"http://www.cisco.com/AXL/API/9.0 digestUser,omitempty"`
	OutboundCallRollover              XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
	HotlineDevice                     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	SecureInformationUrl              string                `xml:"http://www.cisco.com/AXL/API/9.0 secureInformationUrl,omitempty"`
	SecureDirectoryUrl                string                `xml:"http://www.cisco.com/AXL/API/9.0 secureDirectoryUrl,omitempty"`
	SecureMessageUrl                  string                `xml:"http://www.cisco.com/AXL/API/9.0 secureMessageUrl,omitempty"`
	SecureServicesUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServicesUrl,omitempty"`
	SecureAuthenticationUrl           string                `xml:"http://www.cisco.com/AXL/API/9.0 secureAuthenticationUrl,omitempty"`
	SecureIdleUrl                     string                `xml:"http://www.cisco.com/AXL/API/9.0 secureIdleUrl,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	DeviceTrustMode                   XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
	EarlyOfferSupportForVoiceCall     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	RequireThirdPartyRegistration     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireThirdPartyRegistration,omitempty"`
	BlockIncomingCallsWhenRoaming     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 blockIncomingCallsWhenRoaming,omitempty"`
	HomeNetworkId                     string                `xml:"http://www.cisco.com/AXL/API/9.0 homeNetworkId,omitempty"`
	AllowPresentationSharingUsingBfcp Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
	RequireOffPremiseLocation         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	Ctiid                             int                   `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID                 `xml:"uuid,attr,omitempty"`
}

type LPhoneButtonTemplate struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IsUserModifiable Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isUserModifiable,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type LPhoneLine struct {
	Index                        XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Label                        string          `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel                   string          `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display                      string          `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                         LDirn           `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	RingSetting                  XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSetting,omitempty"`
	ConsecutiveRingSetting       XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 consecutiveRingSetting,omitempty"`
	RingSettingIdlePickupAlert   XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdlePickupAlert,omitempty"`
	RingSettingActivePickupAlert XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingActivePickupAlert,omitempty"`
	DisplayAscii                 string          `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask                     string          `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	DialPlanWizardId             XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardId,omitempty"`
	MwlPolicy                    XMWLPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 mwlPolicy,omitempty"`
	MaxNumCalls                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay              CallInfoDisplay `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName         XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag                XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi                   XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial                    string          `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage               XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	MissedCallLogging            Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 missedCallLogging,omitempty"`
	Uuid                         XUUID           `xml:"uuid,attr,omitempty"`
	Ctiid                        int             `xml:"ctiid,attr,omitempty"`
}

type LPhoneNtp struct {
	IpAddress   string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Description string     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mode        XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
	Uuid        XUUID      `xml:"uuid,attr,omitempty"`
}

type LPhoneSecurityProfile struct {
	PhoneType                  XModel              `xml:"http://www.cisco.com/AXL/API/9.0 phoneType,omitempty"`
	Protocol                   XDeviceProtocol     `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	Name                       string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DeviceSecurityMode         XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	AuthenticationMode         XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                    XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	TftpEncryptedConfig        Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
	NonceValidityTime          XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
	TransportType              XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	SipPhonePort               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	EnableDigestAuthentication Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
	ExcludeDigestCredentials   Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
	Uuid                       XUUID               `xml:"uuid,attr,omitempty"`
}

type LPhysicalLocation struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LPickupGroupMember struct {
	Priority             XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	PickupGroupName      XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 pickupGroupName,omitempty"`
	PickupDnAndPartition PickupDnAndPartition `xml:"http://www.cisco.com/AXL/API/9.0 pickupDnAndPartition,omitempty"`
	Uuid                 XUUID                `xml:"uuid,attr,omitempty"`
}

type LPolicyRelationship struct {
	GeoLocationPolicyAName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyAName,omitempty"`
	GeoLocationDeviceA     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceA,omitempty"`
	GeoLocationPolicyBName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyBName,omitempty"`
	GeoLocationDeviceB     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceB,omitempty"`
	LogicalPartitionPolicy XLogicalPartitionPolicy `xml:"http://www.cisco.com/AXL/API/9.0 logicalPartitionPolicy,omitempty"`
	Uuid                   XUUID                   `xml:"uuid,attr,omitempty"`
}

type LPresenceGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LPresenceGroupMember struct {
	PresenceGroupName      XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	SubscriptionPermission XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 subscriptionPermission,omitempty"`
	Uuid                   XUUID        `xml:"uuid,attr,omitempty"`
}

type LProcessNode struct {
	Name        string      `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mac         XMacAddress `xml:"http://www.cisco.com/AXL/API/9.0 mac,omitempty"`
	Ipv6Name    string      `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Name,omitempty"`
	NodeUsage   XNodeUsage  `xml:"http://www.cisco.com/AXL/API/9.0 nodeUsage,omitempty"`
	LbmHubGroup XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup,omitempty"`
	Uuid        XUUID       `xml:"uuid,attr,omitempty"`
}

type LProcessNodeService struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	TraceLevel      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
	UserCategories  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
	Enable          Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	NumFiles        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
	MaxFileSize     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
	IsActive        Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type LRecordingProfile struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RecordingCssName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 recordingCssName,omitempty"`
	RecorderDestination string  `xml:"http://www.cisco.com/AXL/API/9.0 recorderDestination,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type LRegion struct {
	Name         string     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DefaultCodec XBandwidth `xml:"http://www.cisco.com/AXL/API/9.0 defaultCodec,omitempty"`
	Uuid         XUUID      `xml:"uuid,attr,omitempty"`
}

type LRegionMatrix struct {
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	RegionAName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionAName,omitempty"`
	RegionBName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionBName,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
	Uuid            XUUID         `xml:"uuid,attr,omitempty"`
}

type LRegionRelationship struct {
	RegionName      XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
	Uuid            XUUID         `xml:"uuid,attr,omitempty"`
}

type LRemoteCluster struct {
	ClusterId          string               `xml:"http://www.cisco.com/AXL/API/9.0 clusterId,omitempty"`
	Description        string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FullyQualifiedName string               `xml:"http://www.cisco.com/AXL/API/9.0 fullyQualifiedName,omitempty"`
	Emcc               LRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 emcc,omitempty"`
	PstnAccess         LRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	RsvpAgent          LRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 rsvpAgent,omitempty"`
	Uuid               XUUID                `xml:"uuid,attr,omitempty"`
}

type LRemoteClusterMember struct {
	Enabled          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	RemoteIpAddress1 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress1,omitempty"`
	RemoteIpAddress2 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress2,omitempty"`
	RemoteIpAddress3 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress3,omitempty"`
}

type LRemoteDestination struct {
	Name                         string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Destination                  string    `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	AnswerTooSoonTimer           XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
	AnswerTooLateTimer           XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
	DelayBeforeRingingCell       XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
	RemoteDestinationProfileName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfileName,omitempty"`
	DualModeDeviceName           XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dualModeDeviceName,omitempty"`
	IsMobilePhone                Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
	EnableMobileConnect          Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
	TimeZone                     XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	TodAccessName                XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 todAccessName,omitempty"`
	MobileSmartClientName        XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientName,omitempty"`
	MobilityProfileName          XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfileName,omitempty"`
	Uuid                         XUUID     `xml:"uuid,attr,omitempty"`
}

type LRemoteDestinationProfile struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                         XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	CallInfoPrivacyStatus         XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	UserId                        string            `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	IgnorePresentationIndicators  Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	RerouteCallingSearchSpaceName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PrimaryPhoneName              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	DndOption                     XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndStatus                     Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	MobileSmartClientProfileName  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	Ctiid                         int               `xml:"ctiid,attr,omitempty"`
	Uuid                          XUUID             `xml:"uuid,attr,omitempty"`
}

type LResourcePriorityNamespace struct {
	Namespace   string `xml:"http://www.cisco.com/AXL/API/9.0 namespace,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LResourcePriorityNamespaceList struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LResourcePriorityNamespaceListMember struct {
	ResourcePriorityNamespaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	Index                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid                          XUUID    `xml:"uuid,attr,omitempty"`
}

type LRouteFilter struct {
	Name                string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause              string   `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DialPlanWizardGenId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	Uuid                XUUID    `xml:"uuid,attr,omitempty"`
}

type LRouteFilterMember struct {
	DialPlanTagName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName,omitempty"`
	Digits          int       `xml:"http://www.cisco.com/AXL/API/9.0 digits,omitempty"`
	Operator        XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
	Priority        XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid            XUUID     `xml:"uuid,attr,omitempty"`
}

type LRouteGroup struct {
	Name                  string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DialPlanWizardGenld   XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenld,omitempty"`
	DistributionAlgorithm XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	Uuid                  XUUID                `xml:"uuid,attr,omitempty"`
}

type LRouteGroupMember struct {
	DeviceSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 deviceSelectionOrder,omitempty"`
	DialPlanWizardGenId  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DeviceName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Port                 XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid                 XUUID    `xml:"uuid,attr,omitempty"`
}

type LRouteList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	RunOnEveryNode       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type LRouteListMember struct {
	RouteGroupName                      XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeGroupName,omitempty"`
	SelectionOrder                      XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	CalledPartyTransformationMask       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask      string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	DialPlanWizardGenId                 XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DigitDiscardInstructionName         XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	CallingPartyPrefixDigits            string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	PrefixDigitsOut                     string         `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	UseFullyQualifiedCallingPartyNumber XStatus        `xml:"http://www.cisco.com/AXL/API/9.0 useFullyQualifiedCallingPartyNumber,omitempty"`
	CallingPartyNumberingPlan           XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType              XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan            XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType               XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Uuid                                XUUID          `xml:"uuid,attr,omitempty"`
}

type LRoutePartition struct {
	Name                         string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                  string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DialPlanWizardGenId          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	TimeScheduleIdName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleIdName,omitempty"`
	UseOriginatingDeviceTimeZone Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
	TimeZone                     XTimeZone       `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	PartitionUsage               XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	Uuid                         XUUID           `xml:"uuid,attr,omitempty"`
}

type LRoutePattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DialPlanWizardGenId            XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	NetworkLocation                XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SupportOverlapSending          Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 supportOverlapSending,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	AllowDeviceOverride            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	AuthorizationCodeRequired      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 authorizationCodeRequired,omitempty"`
	AuthorizationLevelRequired     XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
	ClientCodeRequired             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 clientCodeRequired,omitempty"`
	WithTag                        string             `xml:"http://www.cisco.com/AXL/API/9.0 withTag,omitempty"`
	WithValueClause                string             `xml:"http://www.cisco.com/AXL/API/9.0 withValueClause,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type LRoutePlan struct {
	DnOrPattern string        `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPattern,omitempty"`
	Partition   XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Type        XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 type,omitempty"`
	RouteDetail string        `xml:"http://www.cisco.com/AXL/API/9.0 routeDetail,omitempty"`
	Uuid        XUUID         `xml:"uuid,attr,omitempty"`
}

type LSIPNormalizationScript struct {
	Name                               string                  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Content                            string                  `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	ScriptExecutionErrorRecoveryAction XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
	SystemResourceErrorRecoveryAction  XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
	MaxMemoryThreshold                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
	MaxLuaInstructionsThreshold        string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	IsStandard                         Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 isStandard,omitempty"`
	Uuid                               XUUID                   `xml:"uuid,attr,omitempty"`
}

type LSafCcdPurgeBlockLearnedRoutes struct {
	LearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Uuid                 XUUID  `xml:"uuid,attr,omitempty"`
}

type LSafForwarder struct {
	Name                       string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ClientLabel                string   `xml:"http://www.cisco.com/AXL/API/9.0 clientLabel,omitempty"`
	SafSecurityProfile         XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile,omitempty"`
	IpAddress                  string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port                       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SafReconnectInterval       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
	SafNotificationsWindowSize XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	Uuid                       XUUID    `xml:"uuid,attr,omitempty"`
}

type LSafForwarderMember struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type LSafSecurityProfile struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Userid      string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LServiceParameter struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	Value           string   `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	ValueType       XParam   `xml:"http://www.cisco.com/AXL/API/9.0 valueType,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type LServiceProfile struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LServiceProfileList struct {
	ProfileName                   string                        `xml:"http://www.cisco.com/AXL/API/9.0 profileName,omitempty"`
	Primary                       string                        `xml:"http://www.cisco.com/AXL/API/9.0 primary,omitempty"`
	Secondary                     string                        `xml:"http://www.cisco.com/AXL/API/9.0 secondary,omitempty"`
	Tertiary                      string                        `xml:"http://www.cisco.com/AXL/API/9.0 tertiary,omitempty"`
	ServerCertificateVerification XCertificateVerificationLevel `xml:"http://www.cisco.com/AXL/API/9.0 serverCertificateVerification,omitempty"`
	ServiceProfileXml             XVendorConfig                 `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileXml,omitempty"`
	Uuid                          XUUID                         `xml:"uuid,attr,omitempty"`
}

type LSipDialRules struct {
	DialPattern XDialPattern `xml:"http://www.cisco.com/AXL/API/9.0 dialPattern,omitempty"`
	Name        string       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID        `xml:"uuid,attr,omitempty"`
}

type LSipProfile struct {
	Name                                      string                     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                               string                     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DefaultTelephonyEventPayloadType          XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
	RedirectByApplication                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
	Ringing180                                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
	TimerInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
	TimerRegisterDelta                        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
	TimerRegister                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
	TimerT1                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
	TimerT2                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
	RetryInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
	RetryNotInvite                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
	StartMediaPort                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
	StopMediaPort                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
	CallpickupUri                             string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
	CallpickupListUri                         string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
	CallpickupGroupUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
	MeetmeServiceUrl                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
	UserInfo                                  XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
	DtmfDbLevel                               XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
	CallHoldRingback                          XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
	AnonymousCallBlock                        XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
	CallerIdBlock                             XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
	DndControl                                XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
	TelnetLevel                               XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
	TimerKeepAlive                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
	TimerSubscribe                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
	TimerSubscribeDelta                       XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
	MaxRedirects                              XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
	TimerOffHookToFirstDigit                  XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
	CallForwardUri                            string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
	AbbreviatedDialUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
	ConfJointEnable                           Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
	Rfc2543Hold                               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
	SemiAttendedTransfer                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
	EnableVad                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
	StutterMsgWaiting                         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
	CallStats                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
	T38Invite                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
	RerouteIncomingRequest                    XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
	ResourcePriorityNamespaceListName         XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceListName,omitempty"`
	EnableAnatForEarlyOfferCalls              Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
	RsvpOverSip                               XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
	FallbackToLocalRsvp                       Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
	SipRe11XxEnabled                          XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
	GClear                                    XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
	EarlyOfferSupportForVoiceCall             Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	SendRecvSDPInMidCallInvite                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
	EnableOutboundOptionsPing                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
	OptionsPingIntervalWhenStatusOK           XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
	OptionsPingIntervalWhenStatusNotOK        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
	DeliverConferenceBridgeIdentifier         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 deliverConferenceBridgeIdentifier,omitempty"`
	SipOptionsRetryCount                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
	SipOptionsRetryTimer                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
	SipBandwidthModifier                      XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
	EnableUriOutdialSupport                   string                     `xml:"http://www.cisco.com/AXL/API/9.0 enableUriOutdialSupport,omitempty"`
	UserAgentServerHeaderInfo                 XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
	AllowPresentationSharingUsingBfcp         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowPresentationSharingUsingBfcp,omitempty"`
	ScriptParameters                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	IsScriptTraceEnabled                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
	SipNormalizationScript                    XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScript,omitempty"`
	AllowiXApplicationMedia                   Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowiXApplicationMedia,omitempty"`
	DialStringInterpretation                  XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
	AcceptAudioCodecPreferences               XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
	MlppUserAuthorization                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
	IsAssuredSipServiceEnabled                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
	ResourcePriorityNamespace                 XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	CallerIdDn                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerName                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallingLineIdentification                 XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
	RejectAnonymousIncomingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousIncomingCall,omitempty"`
	RejectAnonymousOutgoingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousOutgoingCall,omitempty"`
	VideoCallTrafficClass                     XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
	Uuid                                      XUUID                      `xml:"uuid,attr,omitempty"`
}

type LSipRealm struct {
	Realm             string `xml:"http://www.cisco.com/AXL/API/9.0 realm,omitempty"`
	Userid            string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	DigestCredentials string `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	Uuid              XUUID  `xml:"uuid,attr,omitempty"`
}

type LSipRoutePattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage    `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SipTrunkName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	DnOrPatternIpv6                string           `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPatternIpv6,omitempty"`
	RouteOnUserPart                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 routeOnUserPart,omitempty"`
	UseCallerCss                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useCallerCss,omitempty"`
	DomainRoutingCssName           XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 domainRoutingCssName,omitempty"`
	Uuid                           XUUID            `xml:"uuid,attr,omitempty"`
}

type LSipTrunk struct {
	Name                                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                               string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                   XProduct                 `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                     XModel                   `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                     XClass                   `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                  XDeviceProtocol          `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                              XProtocolSide            `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                           XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                              XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId               XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId                  XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	PacketCaptureMode                         XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                     XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	LoadInformation                           XLoadInformation         `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TraceFlag                                 Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppIndicationStatus                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                     Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                           Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	UnattendedPort                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	TransmitUtf8                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SubscribeCallingSearchSpaceName           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	ReferCallingSearchSpaceName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 referCallingSearchSpaceName,omitempty"`
	MtpRequired                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	PresenceGroupName                         XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnknownPrefix                             string                   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	DestinationAddress                        string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	DestAddrIsSrv                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 destAddrIsSrv,omitempty"`
	Destinationport                           XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 destinationport,omitempty"`
	TkSipCodec                                XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
	SigDigits                                 Anon641                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	ConnectedNamePresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
	ConnectedPartyIdPresentation              XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
	CallingPartySelection                     XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	Callingname                               XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
	CallingLineIdPresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	PrefixDn                                  string                   `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CallerName                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerIdDn                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	AcceptInboundRdnis                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptInboundRdnis,omitempty"`
	AcceptOutboundRdnis                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutboundRdnis,omitempty"`
	SrtpAllowed                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	SrtpFallbackAllowed                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
	IsPaiEnabled                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
	SipPrivacy                                XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
	IsRpidEnabled                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
	SipAssertedType                           XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
	DestinationAddressIpv6                    string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddressIpv6,omitempty"`
	DtmfSignalingMethod                       XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
	RouteClassSignalling                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	SipTrunkType                              XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
	PstnAccess                                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseImePublicIpPort                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
	UseDevicePoolCntdPnTransformationCss      Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	SipNormalizationScriptName                XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScriptName,omitempty"`
	RunOnEveryNode                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	UnknownStripDigits                        int                      `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	CgpnTransformationUnknownCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationUnknownCssName,omitempty"`
	TunneledProtocol                          XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                       XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                               XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	PathReplacementSupport                    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	EnableQsigUtf8                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
	ScriptParameters                          string                   `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	ScriptTraceEnabled                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
	TrunkTrafficSecure                        XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
	CallingAndCalledPartyInfoFormat           XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	RequestUriDomainName                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 requestUriDomainName,omitempty"`
	Ctiid                                     int                      `xml:"ctiid,attr,omitempty"`
	Uuid                                      XUUID                    `xml:"uuid,attr,omitempty"`
}

type LSipTrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	AddressIpv6 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv6,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type LSipTrunkSecurityProfile struct {
	Name                             string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode                     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	IncomingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
	OutgoingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 outgoingTransport,omitempty"`
	DigestAuthentication             Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
	NoncePolicyTime                  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
	X509SubjectName                  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	IncomingPort                     XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
	ApplLevelAuthentication          Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
	AcceptPresenceSubscription       Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification    Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader               Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	TransmitSecurityStatus           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
	SipV150OutboundSdpOfferFiltering XV150SDPFilter      `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
	Uuid                             XUUID               `xml:"uuid,attr,omitempty"`
}

type LSoftKeyTemplate struct {
	Name                    string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	BaseSoftkeyTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 baseSoftkeyTemplateName,omitempty"`
	Uuid                    XUUID   `xml:"uuid,attr,omitempty"`
}

type LSpeeddial struct {
	Dirn       string   `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Label      string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel string   `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Index      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type LSrst struct {
	Name                string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Port                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	IpAddress           string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	SipNetwork          string   `xml:"http://www.cisco.com/AXL/API/9.0 SipNetwork,omitempty"`
	SipPort             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	SrstCertificatePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 srstCertificatePort,omitempty"`
	IsSecure            Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isSecure,omitempty"`
	Uuid                XUUID    `xml:"uuid,attr,omitempty"`
}

type LSubscribedService struct {
	TelecasterServiceName XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 telecasterServiceName,omitempty"`
	Name                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Url                   string                `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	UrlButtonIndex        XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 urlButtonIndex,omitempty"`
	UrlLabel              string                `xml:"http://www.cisco.com/AXL/API/9.0 urlLabel,omitempty"`
	UrlLabelAscii         string                `xml:"http://www.cisco.com/AXL/API/9.0 urlLabelAscii,omitempty"`
	ServiceNameAscii      string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceNameAscii,omitempty"`
	PhoneService          XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 phoneService,omitempty"`
	PhoneServiceCategory  XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceCategory,omitempty"`
	Vendor                string                `xml:"http://www.cisco.com/AXL/API/9.0 vendor,omitempty"`
	Version               string                `xml:"http://www.cisco.com/AXL/API/9.0 version,omitempty"`
	Priority              int                   `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid                  XUUID                 `xml:"uuid,attr,omitempty"`
}

type LSyslogConfig struct {
	AlarmLevelEvent  XAlarmSeverity `xml:"http://www.cisco.com/AXL/API/9.0 AlarmLevelEvent,omitempty"`
	RemoteServerName string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName,omitempty"`
	Monitor          string         `xml:"http://www.cisco.com/AXL/API/9.0 monitor,omitempty"`
	Enable           Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 Enable,omitempty"`
}

type LSyslogConfiguration struct {
	ServerName    string           `xml:"http://www.cisco.com/AXL/API/9.0 serverName,omitempty"`
	ServiceGroup  XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	Service       string           `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	AlarmConfigs  []LSyslogConfig  `xml:"http://www.cisco.com/AXL/API/9.0 alarmConfigs"`
	EndPointAlarm Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 EndPointAlarm,omitempty"`
}

type LT1Port struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon646                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CallerId                    XCallerID                    `xml:"http://www.cisco.com/AXL/API/9.0 callerId,omitempty"`
	EndpointId                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 endpointId,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type LTODAccessMember struct {
	TimeScheduleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleName,omitempty"`
	AccessListName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 accessListName,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type LTimePeriod struct {
	Name           string       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	StartTime      XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
	EndTime        XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
	StartDay       XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
	EndDay         XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
	MonthOfYear    XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
	DayOfMonth     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
	Description    string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished    Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TodOwnerIdName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
	DayOfMonthEnd  XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
	MonthOfYearEnd XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
	Uuid           XUUID        `xml:"uuid,attr,omitempty"`
}

type LTimeSchedule struct {
	Name                 string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TimeScheduleCategory XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	TodOwnerIdName       XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
	Uuid                 XUUID                 `xml:"uuid,attr,omitempty"`
}

type LTimeScheduleTimePeriod struct {
	TimePeriodName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timePeriodName,omitempty"`
	Uuid           XUUID   `xml:"uuid,attr,omitempty"`
}

type LTodAccess struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	OwnerIdName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ownerIdName,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LTransPattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	CallingSearchSpaceName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteNextHopByCgpn             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	CallInterceptProfileName       XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callInterceptProfileName,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type LTranscoder struct {
	Name                   string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	SubUnit                XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	DevicePoolName         XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LoadInformation        XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	IsTrustedRelayPoint    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	MaximumCapacity        XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	Uuid                   XUUID            `xml:"uuid,attr,omitempty"`
}

type LTransformationProfile struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description              string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalStripDigits      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalPrefix           string   `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix      string   `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix            string   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix         string   `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalCssName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 nationalCssName,omitempty"`
	InternationalCssName     XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 internationalCssName,omitempty"`
	UnknownCssName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 unknownCssName,omitempty"`
	SubscriberCssName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 subscriberCssName,omitempty"`
	Uuid                     XUUID    `xml:"uuid,attr,omitempty"`
}

type LTvsCertificate struct {
	SubjectName  string `xml:"http://www.cisco.com/AXL/API/9.0 subjectName,omitempty"`
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName,omitempty"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber,omitempty"`
	TimeToLive   int    `xml:"http://www.cisco.com/AXL/API/9.0 timeToLive,omitempty"`
	Ipv4Address  string `xml:"http://www.cisco.com/AXL/API/9.0 ipv4Address,omitempty"`
	Ipv6Address  string `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Address,omitempty"`
	Uuid         XUUID  `xml:"uuid,attr,omitempty"`
}

type LTvsCertificateService struct {
	ServiceName XCertificateService `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
	Uuid        XUUID               `xml:"uuid,attr,omitempty"`
}

type LUcService struct {
	ServiceType  XUCService       `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ProductType  XUCProduct       `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description  string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Hostnameorip string           `xml:"http://www.cisco.com/AXL/API/9.0 hostnameorip,omitempty"`
	Port         XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Protocol     XConnectProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	Uuid         XUUID            `xml:"uuid,attr,omitempty"`
}

type LUnitsToGateway struct {
	DomainName  string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LUser struct {
	FirstName                       string             `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	MiddleName                      string             `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	LastName                        string             `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	Userid                          string             `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	TelephoneNumber                 string             `xml:"http://www.cisco.com/AXL/API/9.0 telephoneNumber,omitempty"`
	Mailid                          string             `xml:"http://www.cisco.com/AXL/API/9.0 mailid,omitempty"`
	Department                      string             `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
	Manager                         string             `xml:"http://www.cisco.com/AXL/API/9.0 manager,omitempty"`
	UserLocale                      XUserLocale        `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PrimaryExtension                Anon625            `xml:"http://www.cisco.com/AXL/API/9.0 primaryExtension,omitempty"`
	AssociatedPc                    string             `xml:"http://www.cisco.com/AXL/API/9.0 associatedPc,omitempty"`
	EnableCti                       Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
	PresenceGroupName               XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	SubscribeCallingSearchSpaceName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	EnableMobility                  Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
	EnableMobileVoiceAccess         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
	MaxDeskPickupWaitTime           XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
	RemoteDestinationLimit          XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
	Status                          XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 status,omitempty"`
	EnableEmcc                      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableEmcc,omitempty"`
	PatternPrecedence               XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	NumericUserId                   string             `xml:"http://www.cisco.com/AXL/API/9.0 numericUserId,omitempty"`
	MlppPassword                    string             `xml:"http://www.cisco.com/AXL/API/9.0 mlppPassword,omitempty"`
	HomeCluster                     Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	ImAndPresenceEnable             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 imAndPresenceEnable,omitempty"`
	ServiceProfile                  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile,omitempty"`
	DirectoryUri                    string             `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
	Uuid                            XUUID              `xml:"uuid,attr,omitempty"`
}

type LUserCustomUserField struct {
	Name  string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Value string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
}

type LUserGroup struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Uuid XUUID  `xml:"uuid,attr,omitempty"`
}

type LUserGroupMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Uuid   XUUID  `xml:"uuid,attr,omitempty"`
}

type LUserGroupRoles struct {
	RoleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 roleName,omitempty"`
	Uuid     XUUID   `xml:"uuid,attr,omitempty"`
}

type LUserPhoneAssociation struct {
	UserId                      string   `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Password                    string   `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	LastName                    string   `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	MiddleName                  string   `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	FirstName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	ProductType                 XModel   `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name                        string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DnCssName                   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dnCssName,omitempty"`
	PhoneCssName                XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneCssName,omitempty"`
	E164Mask                    string   `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	Extension                   string   `xml:"http://www.cisco.com/AXL/API/9.0 extension,omitempty"`
	RoutePartitionName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	VoiceMailProfileName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	EnableExtensionMobility     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	DirectoryURI                string   `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryURI,omitempty"`
	DirectoryNumberURIPartition XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryNumberURIPartition,omitempty"`
	Uuid                        XUUID    `xml:"uuid,attr,omitempty"`
}

type LVg224 struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Units                Anon634         `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
}

type LVmPilot struct {
	Dirn    string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	Uuid    XUUID   `xml:"uuid,attr,omitempty"`
}

type LVoiceMailPilot struct {
	Dirn        string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CssName     XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type LVoiceMailPort struct {
	Name                             string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel          `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass          `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide   `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	Preemption                       XPreemption     `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName              XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	GeoLocationName                  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	DnPattern                        string          `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	CallerIdDisplay                  string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplay,omitempty"`
	CallerIdDisplayAscii             string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplayAscii,omitempty"`
	ExternalMask                     string          `xml:"http://www.cisco.com/AXL/API/9.0 externalMask,omitempty"`
	Ctiid                            int             `xml:"ctiid,attr,omitempty"`
	Uuid                             XUUID           `xml:"uuid,attr,omitempty"`
}

type LVoiceMailProfile struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	VoiceMailboxMask string  `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailboxMask,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type LVpnGateway struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Url         string `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LVpnGatewayMember struct {
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName,omitempty"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber,omitempty"`
	Uuid         XUUID  `xml:"uuid,attr,omitempty"`
}

type LVpnGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type LVpnGroupMember struct {
	VpnGatewayName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 vpnGatewayName,omitempty"`
	Priority       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type LVpnProfile struct {
	Name                 string                   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoNetworkDetection Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 autoNetworkDetection,omitempty"`
	Mtu                  XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
	FailToConnect        XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
	ClientAuthentication XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	PwdPersistant        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pwdPersistant,omitempty"`
	EnableHostIdCheck    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableHostIdCheck,omitempty"`
	Uuid                 XUUID                    `xml:"uuid,attr,omitempty"`
}

type LineAppearanceAssociationForPresences struct {
	LineAppearanceAssociationForPresence []XLineAppearanceAssociationForPresence `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresence,omitempty"`
}

type LineAssociations struct {
	LineAssociation []XLineAssociation `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociation"`
}

type Lines struct {
	Line           []XPhoneLine         `xml:"http://www.cisco.com/AXL/API/9.0 line"`
	LineIdentifier []XNumplanIdentifier `xml:"http://www.cisco.com/AXL/API/9.0 lineIdentifier"`
}

type ListAarGroupReq struct {
	SearchCriteria Anon66    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LAarGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListAarGroupRes struct {
	Return   Anon67 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListAnnouncementReq struct {
	SearchCriteria Anon604       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LAnnouncement `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListAnnouncementRes struct {
	Return   Anon605 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListAnnunciatorReq struct {
	SearchCriteria Anon350      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LAnnunciator `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListAnnunciatorRes struct {
	Return   Anon351 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListAppUserReq struct {
	SearchCriteria Anon239  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LAppUser `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64   `xml:"sequence,attr,omitempty"`
}

type ListAppUserRes struct {
	Return   Anon240 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListApplicationDialRulesReq struct {
	SearchCriteria Anon332               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LApplicationDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                `xml:"sequence,attr,omitempty"`
}

type ListApplicationDialRulesRes struct {
	Return   Anon333 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListApplicationServerReq struct {
	SearchCriteria Anon272            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LApplicationServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListApplicationServerRes struct {
	Return   Anon273 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListApplicationUserCapfProfileReq struct {
	SearchCriteria Anon275                     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LApplicationUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                      `xml:"sequence,attr,omitempty"`
}

type ListApplicationUserCapfProfileRes struct {
	Return   Anon276 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListAudioCodecPreferenceListReq struct {
	SearchCriteria Anon613                   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LAudioCodecPreferenceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                    `xml:"sequence,attr,omitempty"`
}

type ListAudioCodecPreferenceListRes struct {
	Return   Anon614 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListBillingServerReq struct {
	SearchCriteria Anon598        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LBillingServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListBillingServerRes struct {
	Return   Anon599 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCallManagerGroupReq struct {
	SearchCriteria Anon156           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallManagerGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListCallManagerGroupRes struct {
	Return   Anon157 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCallManagerReq struct {
	SearchCriteria Anon45       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallManager `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListCallManagerRes struct {
	Return   Anon46 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListCallParkReq struct {
	SearchCriteria Anon192   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallPark `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListCallParkRes struct {
	Return   Anon193 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCallPickupGroupReq struct {
	SearchCriteria Anon459          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallPickupGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListCallPickupGroupRes struct {
	Return   Anon460 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCalledPartyTracingReq struct {
	SearchCriteria Anon589             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCalledPartyTracing `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListCalledPartyTracingRes struct {
	Return   Anon590 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCalledPartyTransformationPatternReq struct {
	SearchCriteria Anon477                           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCalledPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                            `xml:"sequence,attr,omitempty"`
}

type ListCalledPartyTransformationPatternRes struct {
	Return   Anon478 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCallerFilterListReq struct {
	SearchCriteria Anon28            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallerFilterList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListCallerFilterListRes struct {
	Return   Anon29 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListCallingPartyTransformationPatternReq struct {
	SearchCriteria Anon315                            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCallingPartyTransformationPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                             `xml:"sequence,attr,omitempty"`
}

type ListCallingPartyTransformationPatternRes struct {
	Return   Anon316 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCcdAdvertisingServiceReq struct {
	SearchCriteria Anon502                `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCcdAdvertisingService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                 `xml:"sequence,attr,omitempty"`
}

type ListCcdAdvertisingServiceRes struct {
	Return   Anon503 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCcdHostedDNGroupReq struct {
	SearchCriteria Anon493           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCcdHostedDNGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListCcdHostedDNGroupRes struct {
	Return   Anon494 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCcdHostedDNReq struct {
	SearchCriteria Anon490      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCcdHostedDN `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListCcdHostedDNRes struct {
	Return   Anon491 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst600024PortFXSGatewayReq struct {
	SearchCriteria Anon436                            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCiscoCatalyst600024PortFXSGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                             `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst600024PortFXSGatewayRes struct {
	Return   Anon437 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000E1VoIPGatewayReq struct {
	SearchCriteria Anon441                         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCiscoCatalyst6000E1VoIPGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                          `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000E1VoIPGatewayRes struct {
	Return   Anon442 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000T1VoIPGatewayPriReq struct {
	SearchCriteria Anon446                            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCiscoCatalyst6000T1VoIPGatewayPri `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                             `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000T1VoIPGatewayPriRes struct {
	Return   Anon447 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000T1VoIPGatewayT1Req struct {
	SearchCriteria Anon451                           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCiscoCatalyst6000T1VoIPGatewayT1 `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                            `xml:"sequence,attr,omitempty"`
}

type ListCiscoCatalyst6000T1VoIPGatewayT1Res struct {
	Return   Anon452 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCmcInfoReq struct {
	SearchCriteria Anon116  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCmcInfo `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64   `xml:"sequence,attr,omitempty"`
}

type ListCmcInfoRes struct {
	Return   Anon117 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCommonDeviceConfigReq struct {
	SearchCriteria Anon96              `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCommonDeviceConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListCommonDeviceConfigRes struct {
	Return   Anon97 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListCommonPhoneConfigReq struct {
	SearchCriteria Anon298            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCommonPhoneConfig `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListCommonPhoneConfigRes struct {
	Return   Anon299 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListConferenceBridgeReq struct {
	SearchCriteria Anon347           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LConferenceBridge `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListConferenceBridgeRes struct {
	Return   Anon348 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCredentialPolicyReq struct {
	SearchCriteria Anon119           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCredentialPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListCredentialPolicyRes struct {
	Return   Anon120 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCssReq struct {
	SearchCriteria Anon38 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCss   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64 `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64 `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type ListCssRes struct {
	Return   Anon39 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListCtiRoutePointReq struct {
	SearchCriteria Anon309        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCtiRoutePoint `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListCtiRoutePointRes struct {
	Return   Anon310 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCumaServerSecurityProfileReq struct {
	SearchCriteria Anon265                    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCumaServerSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                     `xml:"sequence,attr,omitempty"`
}

type ListCumaServerSecurityProfileRes struct {
	Return   Anon266 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListCustomUserFieldReq struct {
	SearchCriteria Anon595          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LCustomUserField `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListCustomUserFieldRes struct {
	Return   Anon596 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDateTimeGroupReq struct {
	SearchCriteria Anon249        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDateTimeGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListDateTimeGroupRes struct {
	Return   Anon250 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDdiReq struct {
	SearchCriteria Anon174 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDdi    `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListDdiRes struct {
	Return   Anon175 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDefaultDeviceProfileReq struct {
	SearchCriteria Anon366               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDefaultDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                `xml:"sequence,attr,omitempty"`
}

type ListDefaultDeviceProfileRes struct {
	Return   Anon367 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDeviceMobilityGroupReq struct {
	SearchCriteria Anon82               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDeviceMobilityGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64               `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64               `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64               `xml:"sequence,attr,omitempty"`
}

type ListDeviceMobilityGroupRes struct {
	Return   Anon83 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListDeviceMobilityReq struct {
	SearchCriteria Anon113         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDeviceMobility `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListDeviceMobilityRes struct {
	Return   Anon114 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDevicePoolReq struct {
	SearchCriteria Anon79      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDevicePool `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListDevicePoolRes struct {
	Return   Anon80 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListDeviceProfileReq struct {
	SearchCriteria Anon415        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDeviceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListDeviceProfileRes struct {
	Return   Anon416 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDhcpServerReq struct {
	SearchCriteria Anon186     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDhcpServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListDhcpServerRes struct {
	Return   Anon187 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDhcpSubnetReq struct {
	SearchCriteria Anon189     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDhcpSubnet `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListDhcpSubnetRes struct {
	Return   Anon190 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDialPlanReq struct {
	SearchCriteria Anon167   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDialPlan `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListDialPlanRes struct {
	Return   Anon168 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDialPlanTagReq struct {
	SearchCriteria Anon170      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDialPlanTag `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListDialPlanTagRes struct {
	Return   Anon171 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDirectedCallParkReq struct {
	SearchCriteria Anon195           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDirectedCallPark `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListDirectedCallParkRes struct {
	Return   Anon196 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListDirectoryLookupDialRulesReq struct {
	SearchCriteria Anon335                   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LDirectoryLookupDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                    `xml:"sequence,attr,omitempty"`
}

type ListDirectoryLookupDialRulesRes struct {
	Return   Anon336 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListEndUserCapfProfileReq struct {
	SearchCriteria Anon278             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LEndUserCapfProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListEndUserCapfProfileRes struct {
	Return   Anon279 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListEnterpriseFeatureAccessConfigurationReq struct {
	SearchCriteria Anon586                               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LEnterpriseFeatureAccessConfiguration `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                                `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                                `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                                `xml:"sequence,attr,omitempty"`
}

type ListEnterpriseFeatureAccessConfigurationRes struct {
	Return   Anon587 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListExternalCallControlProfileReq struct {
	SearchCriteria Anon480                     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LExternalCallControlProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                      `xml:"sequence,attr,omitempty"`
}

type ListExternalCallControlProfileRes struct {
	Return   Anon481 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListFacInfoReq struct {
	SearchCriteria Anon122  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LFacInfo `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64   `xml:"sequence,attr,omitempty"`
}

type ListFacInfoRes struct {
	Return   Anon123 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListFallbackProfileReq struct {
	SearchCriteria Anon569          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LFallbackProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListFallbackProfileRes struct {
	Return   Anon570 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListFeatureControlPolicyReq struct {
	SearchCriteria Anon580               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LFeatureControlPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                `xml:"sequence,attr,omitempty"`
}

type ListFeatureControlPolicyRes struct {
	Return   Anon581 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListGatekeeperReq struct {
	SearchCriteria Anon291     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LGatekeeper `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListGatekeeperRes struct {
	Return   Anon292 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListGatewayReq struct {
	SearchCriteria Anon422  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64   `xml:"sequence,attr,omitempty"`
}

type ListGatewayRes struct {
	Return   Anon423 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationFilterReq struct {
	SearchCriteria Anon282            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LGeoLocationFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationFilterRes struct {
	Return   Anon283 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationPolicyReq struct {
	SearchCriteria Anon465            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LGeoLocationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationPolicyRes struct {
	Return   Anon466 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationReq struct {
	SearchCriteria Anon256      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LGeoLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListGeoLocationRes struct {
	Return   Anon257 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListH323GatewayReq struct {
	SearchCriteria Anon400      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LH323Gateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListH323GatewayRes struct {
	Return   Anon401 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListH323PhoneReq struct {
	SearchCriteria Anon372    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LH323Phone `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListH323PhoneRes struct {
	Return   Anon373 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListH323TrunkReq struct {
	SearchCriteria Anon385    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LH323Trunk `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListH323TrunkRes struct {
	Return   Anon386 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListHuntListReq struct {
	SearchCriteria Anon129   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LHuntList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListHuntListRes struct {
	Return   Anon130 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListHuntPilotReq struct {
	SearchCriteria Anon324    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LHuntPilot `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListHuntPilotRes struct {
	Return   Anon325 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeClientReq struct {
	SearchCriteria Anon545    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeClient `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListImeClientRes struct {
	Return   Anon546 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeE164TransformationReq struct {
	SearchCriteria Anon563                `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeE164Transformation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                 `xml:"sequence,attr,omitempty"`
}

type ListImeE164TransformationRes struct {
	Return   Anon564 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeEnrolledPatternGroupReq struct {
	SearchCriteria Anon551                  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeEnrolledPatternGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                   `xml:"sequence,attr,omitempty"`
}

type ListImeEnrolledPatternGroupRes struct {
	Return   Anon552 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeEnrolledPatternReq struct {
	SearchCriteria Anon548             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeEnrolledPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListImeEnrolledPatternRes struct {
	Return   Anon549 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeExclusionNumberGroupReq struct {
	SearchCriteria Anon557                  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeExclusionNumberGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                   `xml:"sequence,attr,omitempty"`
}

type ListImeExclusionNumberGroupRes struct {
	Return   Anon558 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeExclusionNumberReq struct {
	SearchCriteria Anon554             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeExclusionNumber `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListImeExclusionNumberRes struct {
	Return   Anon555 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeFirewallReq struct {
	SearchCriteria Anon560      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeFirewall `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListImeFirewallRes struct {
	Return   Anon561 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeRouteFilterElementReq struct {
	SearchCriteria Anon537                `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeRouteFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                 `xml:"sequence,attr,omitempty"`
}

type ListImeRouteFilterElementRes struct {
	Return   Anon538 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeRouteFilterGroupReq struct {
	SearchCriteria Anon534              `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeRouteFilterGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64               `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64               `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64               `xml:"sequence,attr,omitempty"`
}

type ListImeRouteFilterGroupRes struct {
	Return   Anon535 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImeServerReq struct {
	SearchCriteria Anon531    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImeServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListImeServerRes struct {
	Return   Anon532 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListImportedDirectoryUriCatalogsReq struct {
	SearchCriteria Anon622                       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LImportedDirectoryUriCatalogs `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                        `xml:"sequence,attr,omitempty"`
}

type ListImportedDirectoryUriCatalogsRes struct {
	Return   Anon623 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListIpPhoneServicesReq struct {
	SearchCriteria Anon305          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LIpPhoneServices `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListIpPhoneServicesRes struct {
	Return   Anon306 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListIvrUserLocaleReq struct {
	SearchCriteria Anon132        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LIvrUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListIvrUserLocaleRes struct {
	Return   Anon133 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLbmGroupReq struct {
	SearchCriteria Anon601   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLbmGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListLbmGroupRes struct {
	Return   Anon602 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLbmHubGroupReq struct {
	SearchCriteria Anon619      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLbmHubGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListLbmHubGroupRes struct {
	Return   Anon620 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLdapDirectoryReq struct {
	SearchCriteria Anon513        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLdapDirectory `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListLdapDirectoryRes struct {
	Return   Anon514 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLdapFilterReq struct {
	SearchCriteria Anon572     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLdapFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListLdapFilterRes struct {
	Return   Anon573 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLdapSyncCustomFieldReq struct {
	SearchCriteria Anon837                 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   NewLLdapSyncCustomField `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                  `xml:"sequence,attr,omitempty"`
}

type ListLdapSyncCustomFieldRes struct {
	Return   Anon838 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLicenseCapabilitiesReq struct {
	SearchCriteria Anon224              `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLicenseCapabilities `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64               `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64               `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64               `xml:"sequence,attr,omitempty"`
}

type ListLicenseCapabilitiesRes struct {
	Return   Anon225 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLineGroupReq struct {
	SearchCriteria Anon139    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLineGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListLineGroupRes struct {
	Return   Anon140 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLineReq struct {
	SearchCriteria Anon363 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLine   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListLineRes struct {
	Return   Anon364 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListLocationReq struct {
	SearchCriteria Anon87    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListLocationRes struct {
	Return   Anon88 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListMediaResourceGroupReq struct {
	SearchCriteria Anon52              `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMediaResourceGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListMediaResourceGroupRes struct {
	Return   Anon53 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListMediaResourceListReq struct {
	SearchCriteria Anon59             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMediaResourceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListMediaResourceListRes struct {
	Return   Anon60 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListMeetMeReq struct {
	SearchCriteria Anon198 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMeetMe `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListMeetMeRes struct {
	Return   Anon199 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMessageWaitingReq struct {
	SearchCriteria Anon301         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMessageWaiting `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListMessageWaitingRes struct {
	Return   Anon302 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMlppDomainReq struct {
	SearchCriteria Anon262     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMlppDomain `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListMlppDomainRes struct {
	Return   Anon263 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMobileSmartClientProfileReq struct {
	SearchCriteria Anon177                   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMobileSmartClientProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                    `xml:"sequence,attr,omitempty"`
}

type ListMobileSmartClientProfileRes struct {
	Return   Anon178 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMobilityProfileReq struct {
	SearchCriteria Anon583          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMobilityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListMobilityProfileRes struct {
	Return   Anon584 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMohAudioSourceReq struct {
	SearchCriteria Anon183         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMohAudioSource `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListMohAudioSourceRes struct {
	Return   Anon184 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMohServerReq struct {
	SearchCriteria Anon377    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMohServer `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListMohServerRes struct {
	Return   Anon378 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListMtpReq struct {
	SearchCriteria Anon353 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LMtp    `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListMtpRes struct {
	Return   Anon354 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhoneButtonTemplateReq struct {
	SearchCriteria Anon295              `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPhoneButtonTemplate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64               `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64               `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64               `xml:"sequence,attr,omitempty"`
}

type ListPhoneButtonTemplateRes struct {
	Return   Anon296 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhoneNtpReq struct {
	SearchCriteria Anon245   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPhoneNtp `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListPhoneNtpRes struct {
	Return   Anon246 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhoneReq struct {
	SearchCriteria Anon395 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPhone  `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhoneRes struct {
	Return   Anon396 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhoneSecurityProfileReq struct {
	SearchCriteria Anon338               `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPhoneSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                `xml:"sequence,attr,omitempty"`
}

type ListPhoneSecurityProfileRes struct {
	Return   Anon339 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListPhysicalLocationReq struct {
	SearchCriteria Anon69            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPhysicalLocation `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListPhysicalLocationRes struct {
	Return   Anon70 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListPresenceGroupReq struct {
	SearchCriteria Anon253        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LPresenceGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListPresenceGroupRes struct {
	Return   Anon254 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListProcessNodeReq struct {
	SearchCriteria Anon21       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LProcessNode `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListProcessNodeRes struct {
	Return   Anon22 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListProcessNodeServiceReq struct {
	SearchCriteria Anon180             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LProcessNodeService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListProcessNodeServiceRes struct {
	Return   Anon181 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRecordingProfileReq struct {
	SearchCriteria Anon142           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRecordingProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListRecordingProfileRes struct {
	Return   Anon143 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRegionReq struct {
	SearchCriteria Anon63  `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRegion `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListRegionRes struct {
	Return   Anon64 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListRemoteClusterReq struct {
	SearchCriteria Anon499        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRemoteCluster `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListRemoteClusterRes struct {
	Return   Anon500 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRemoteDestinationProfileReq struct {
	SearchCriteria Anon359                   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRemoteDestinationProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                    `xml:"sequence,attr,omitempty"`
}

type ListRemoteDestinationProfileRes struct {
	Return   Anon360 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRemoteDestinationReq struct {
	SearchCriteria Anon419            `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64             `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64             `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64             `xml:"sequence,attr,omitempty"`
}

type ListRemoteDestinationRes struct {
	Return   Anon420 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListResourcePriorityNamespaceListReq struct {
	SearchCriteria Anon106                        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LResourcePriorityNamespaceList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                         `xml:"sequence,attr,omitempty"`
}

type ListResourcePriorityNamespaceListRes struct {
	Return   Anon107 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListResourcePriorityNamespaceReq struct {
	SearchCriteria Anon99                     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LResourcePriorityNamespace `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                     `xml:"sequence,attr,omitempty"`
}

type ListResourcePriorityNamespaceRes struct {
	Return   Anon100 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRouteFilterReq struct {
	SearchCriteria Anon149      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRouteFilter `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64       `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64       `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

type ListRouteFilterRes struct {
	Return   Anon150 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRouteGroupReq struct {
	SearchCriteria Anon76      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRouteGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListRouteGroupRes struct {
	Return   Anon77 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListRouteListReq struct {
	SearchCriteria Anon207    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRouteList `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListRouteListRes struct {
	Return   Anon208 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRoutePartitionReq struct {
	SearchCriteria Anon31          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRoutePartition `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListRoutePartitionRes struct {
	Return   Anon32 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListRoutePatternReq struct {
	SearchCriteria Anon329       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListRoutePatternRes struct {
	Return   Anon330 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListRoutePlanReq struct {
	SearchCriteria Anon461    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LRoutePlan `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListRoutePlanRes struct {
	Return   Anon462 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSIPNormalizationScriptReq struct {
	SearchCriteria Anon592                 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSIPNormalizationScript `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                  `xml:"sequence,attr,omitempty"`
}

type ListSIPNormalizationScriptRes struct {
	Return   Anon593 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSafCcdPurgeBlockLearnedRoutesReq struct {
	SearchCriteria Anon517                        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSafCcdPurgeBlockLearnedRoutes `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                         `xml:"sequence,attr,omitempty"`
}

type ListSafCcdPurgeBlockLearnedRoutesRes struct {
	Return   Anon518 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSafForwarderReq struct {
	SearchCriteria Anon487       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSafForwarder `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListSafForwarderRes struct {
	Return   Anon488 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSafSecurityProfileReq struct {
	SearchCriteria Anon483             `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSafSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64              `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64              `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64              `xml:"sequence,attr,omitempty"`
}

type ListSafSecurityProfileRes struct {
	Return   Anon484 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListServiceProfileReq struct {
	SearchCriteria Anon608         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LServiceProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListServiceProfileRes struct {
	Return   Anon609 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSipDialRulesReq struct {
	SearchCriteria Anon343       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipDialRules `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListSipDialRulesRes struct {
	Return   Anon344 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSipProfileReq struct {
	SearchCriteria SearchCriteria `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipProfile    `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListSipProfileRes struct {
	Return   Anon1  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListSipRealmReq struct {
	SearchCriteria Anon242   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipRealm `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListSipRealmRes struct {
	Return   Anon243 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSipRoutePatternReq struct {
	SearchCriteria Anon318          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipRoutePattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListSipRoutePatternRes struct {
	Return   Anon319 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSipTrunkReq struct {
	SearchCriteria Anon474   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipTrunk `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListSipTrunkRes struct {
	Return   Anon475 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListSipTrunkSecurityProfileReq struct {
	SearchCriteria Anon3                    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSipTrunkSecurityProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                   `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                   `xml:"sequence,attr,omitempty"`
}

type ListSipTrunkSecurityProfileRes struct {
	Return   Anon4  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListSoftKeyTemplateReq struct {
	SearchCriteria Anon90           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSoftKeyTemplate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64           `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64           `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64           `xml:"sequence,attr,omitempty"`
}

type ListSoftKeyTemplateRes struct {
	Return   Anon91 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListSrstReq struct {
	SearchCriteria Anon259 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LSrst   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListSrstRes struct {
	Return   Anon260 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListTimePeriodReq struct {
	SearchCriteria Anon6       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListTimePeriodRes struct {
	Return   Anon7  `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListTimeScheduleReq struct {
	SearchCriteria Anon10        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTimeSchedule `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListTimeScheduleRes struct {
	Return   Anon11 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListTodAccessReq struct {
	SearchCriteria Anon15     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTodAccess `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListTodAccessRes struct {
	Return   Anon16 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListTransPatternReq struct {
	SearchCriteria Anon312       `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTransPattern `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64        `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64        `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

type ListTransPatternRes struct {
	Return   Anon313 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListTranscoderReq struct {
	SearchCriteria Anon93      `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTranscoder `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListTranscoderRes struct {
	Return   Anon94 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListTransformationProfileReq struct {
	SearchCriteria Anon566                `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTransformationProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64                 `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64                 `xml:"sequence,attr,omitempty"`
}

type ListTransformationProfileRes struct {
	Return   Anon567 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListTvsCertificateReq struct {
	SearchCriteria Anon576         `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LTvsCertificate `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListTvsCertificateRes struct {
	Return   Anon577 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListUcServiceReq struct {
	SearchCriteria Anon616    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LUcService `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListUcServiceRes struct {
	Return   Anon617 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListUserGroupReq struct {
	SearchCriteria Anon164    `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LUserGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64     `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64     `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64     `xml:"sequence,attr,omitempty"`
}

type ListUserGroupRes struct {
	Return   Anon165 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListUserReq struct {
	SearchCriteria Anon221 `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LUser   `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64  `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64  `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type ListUserRes struct {
	Return   Anon222 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailPilotReq struct {
	SearchCriteria Anon18          `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVoiceMailPilot `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64          `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64          `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64          `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailPilotRes struct {
	Return   Anon19 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailPortReq struct {
	SearchCriteria Anon288        `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVoiceMailPort `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64         `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64         `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailPortRes struct {
	Return   Anon289 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailProfileReq struct {
	SearchCriteria Anon285           `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVoiceMailProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64            `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64            `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64            `xml:"sequence,attr,omitempty"`
}

type ListVoiceMailProfileRes struct {
	Return   Anon286 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListVpnGatewayReq struct {
	SearchCriteria Anon521     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVpnGateway `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListVpnGatewayRes struct {
	Return   Anon522 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListVpnGroupReq struct {
	SearchCriteria Anon525   `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVpnGroup `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64    `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64    `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64    `xml:"sequence,attr,omitempty"`
}

type ListVpnGroupRes struct {
	Return   Anon526 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type ListVpnProfileReq struct {
	SearchCriteria Anon528     `xml:"http://www.cisco.com/AXL/API/9.0 searchCriteria"`
	ReturnedTags   LVpnProfile `xml:"http://www.cisco.com/AXL/API/9.0 returnedTags"`
	Skip           uint64      `xml:"http://www.cisco.com/AXL/API/9.0 skip,omitempty"`
	First          uint64      `xml:"http://www.cisco.com/AXL/API/9.0 first,omitempty"`
	Sequence       uint64      `xml:"sequence,attr,omitempty"`
}

type ListVpnProfileRes struct {
	Return   Anon529 `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type Locales struct {
	Locale []XMobileVoiceMember `xml:"http://www.cisco.com/AXL/API/9.0 locale"`
}

type Members struct {
	Member []XTimeScheduleTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type MgcpPorts struct {
	Listen    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 listen,omitempty"`
	KeepAlive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 keepAlive,omitempty"`
}

func (t *MgcpPorts) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T MgcpPorts
	var overlay struct {
		*T
		Listen    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 listen,omitempty"`
		KeepAlive *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 keepAlive,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Listen = (*XInteger)(&overlay.T.Listen)
	overlay.KeepAlive = (*XInteger)(&overlay.T.KeepAlive)
	return d.DecodeElement(&overlay, &start)
}

// This is a utility object that created because many of the Get, Remove, and Update methods allow the user to specify either the name or the uuid.
type NameAndGUIDRequest struct {
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type NewIlsConfig struct {
	ClusterId            string `xml:"http://www.cisco.com/AXL/API/9.0 clusterId,omitempty"`
	LastContactTime      string `xml:"http://www.cisco.com/AXL/API/9.0 lastContactTime,omitempty"`
	ClusterUriString     string `xml:"http://www.cisco.com/AXL/API/9.0 clusterUriString,omitempty"`
	Role                 string `xml:"http://www.cisco.com/AXL/API/9.0 role,omitempty"`
	LastDataRecieved     string `xml:"http://www.cisco.com/AXL/API/9.0 lastDataRecieved,omitempty"`
	SyncronizationStatus string `xml:"http://www.cisco.com/AXL/API/9.0 syncronizationStatus,omitempty"`
	Uuid                 XUUID  `xml:"uuid,attr,omitempty"`
}

type NewLLdapSyncCustomField struct {
	LdapUserField string `xml:"http://www.cisco.com/AXL/API/9.0 ldapUserField,omitempty"`
	Uuid          XUUID  `xml:"uuid,attr,omitempty"`
}

type NormalizationScriptInfos struct {
	NormalizationScriptInfo []XNormalizationScriptInfo `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfo,omitempty"`
}

type Parameters struct {
	Parameter []XIpPhoneServicesParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter"`
}

type ParkMonForwardNoRetrieve struct {
	UsePersonalPreferences Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *ParkMonForwardNoRetrieve) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T ParkMonForwardNoRetrieve
	var overlay struct {
		*T
		UsePersonalPreferences *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePersonalPreferences = (*Boolean)(&overlay.T.UsePersonalPreferences)
	return d.DecodeElement(&overlay, &start)
}

type PasswordCredentials struct {
	PwdCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredPolicyName,omitempty"`
	PwdCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserCantChange,omitempty"`
	PwdCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredUserMustChange,omitempty"`
	PwdCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredDoesNotExpire,omitempty"`
	PwdCredTimeChanged           string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeChanged,omitempty"`
	PwdCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredTimeAdminLockout,omitempty"`
	PwdCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pwdCredLockedByAdministrator,omitempty"`
}

type Patterns struct {
	Pattern []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
}

type PhoneLicenseFeature struct {
	UnitsAuthorized int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsAuthorized,omitempty"`
	UnitsUsed       int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsUsed,omitempty"`
	UnitsRemaining  int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsRemaining,omitempty"`
	UnitsPending    int     `xml:"http://www.cisco.com/AXL/API/9.0 unitsPending,omitempty"`
	Status          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 status,omitempty"`
}

type PhoneNtpReferences struct {
	SelectedPhoneNtpReference []XDateTimeGroupNtpReference `xml:"http://www.cisco.com/AXL/API/9.0 selectedPhoneNtpReference"`
}

type PhoneProfiles struct {
	ProfileName []XFkType `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
}

type PickupDnAndPartition struct {
	DnPattern          string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

// Must match the pattern \d\d\d\d+
type Pin string

type PinCredentials struct {
	PinCredPolicyName            XFkType `xml:"http://www.cisco.com/AXL/API/9.0 pinCredPolicyName,omitempty"`
	PinCredUserCantChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserCantChange,omitempty"`
	PinCredUserMustChange        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredUserMustChange,omitempty"`
	PinCredDoesNotExpire         Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredDoesNotExpire,omitempty"`
	PinCredTimeChanged           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeChanged,omitempty"`
	PinCredTimeAdminLockout      string  `xml:"http://www.cisco.com/AXL/API/9.0 pinCredTimeAdminLockout,omitempty"`
	PinCredLockedByAdministrator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 pinCredLockedByAdministrator,omitempty"`
}

type Plars struct {
	Plar []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 plar"`
}

type Ports struct {
	EthernetPhonePort XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 ethernetPhonePort,omitempty"`
	MgcpPorts         MgcpPorts `xml:"http://www.cisco.com/AXL/API/9.0 mgcpPorts"`
	SipPorts          SipPorts  `xml:"http://www.cisco.com/AXL/API/9.0 sipPorts"`
}

func (t *Ports) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Ports
	var overlay struct {
		*T
		EthernetPhonePort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ethernetPhonePort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EthernetPhonePort = (*XInteger)(&overlay.T.EthernetPhonePort)
	return d.DecodeElement(&overlay, &start)
}

type PresenceGroups struct {
	PresenceGroup []XPresenceGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroup,omitempty"`
}

type PrimaryExtension struct {
	Pattern            string `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type RAarGroup struct {
	Name          string        `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RelatedGroups RelatedGroups `xml:"http://www.cisco.com/AXL/API/9.0 relatedGroups,omitempty"`
	Uuid          XUUID         `xml:"uuid,attr,omitempty"`
}

type RAarGroupMatrix struct {
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName,omitempty"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName,omitempty"`
}

type RAarGroupRelationship struct {
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName,omitempty"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName,omitempty"`
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type RAddOnModule struct {
	LoadInformation XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	Model           XModel           `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Index           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid            XUUID            `xml:"uuid,attr,omitempty"`
}

type RAnalogPort struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon773                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Lines                       Anon774                      `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	SmdiPortNumber              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 smdiPortNumber,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type RAnnouncement struct {
	Name             string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AnnouncementFile string `xml:"http://www.cisco.com/AXL/API/9.0 announcementFile,omitempty"`
	Uuid             XUUID  `xml:"uuid,attr,omitempty"`
}

type RAnnunciator struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	UseTrustedRelayPoint XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	ServerName           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 serverName,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type RAppServerInfo struct {
	AppServerName    XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 appServerName,omitempty"`
	AppServerContent XAppServerContent `xml:"http://www.cisco.com/AXL/API/9.0 appServerContent,omitempty"`
	Content          XContent          `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	Uuid             XUUID             `xml:"uuid,attr,omitempty"`
}

type RAppUser struct {
	Userid                        string  `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Password                      string  `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	PasswordCredentials           Anon685 `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	DigestCredentials             string  `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PresenceGroupName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	AcceptPresenceSubscription    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	IsStandard                    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isStandard,omitempty"`
	AssociatedDevices             Anon686 `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	AssociatedGroups              Anon687 `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	AssociatedCapfProfiles        Anon690 `xml:"http://www.cisco.com/AXL/API/9.0 associatedCapfProfiles,omitempty"`
	CtiControlledDeviceProfiles   Anon691 `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
	Uuid                          XUUID   `xml:"uuid,attr,omitempty"`
}

type RApplicationDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type RApplicationServer struct {
	AppServerType   XAppServer `xml:"http://www.cisco.com/AXL/API/9.0 appServerType,omitempty"`
	Name            string     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IpAddress       string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	AppUsers        Anon694    `xml:"http://www.cisco.com/AXL/API/9.0 appUsers,omitempty"`
	Url             string     `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	EndUserUrl      string     `xml:"http://www.cisco.com/AXL/API/9.0 endUserUrl,omitempty"`
	ProcessNodeName XFkType    `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	EndUsers        Anon696    `xml:"http://www.cisco.com/AXL/API/9.0 endUsers,omitempty"`
	Uuid            XUUID      `xml:"uuid,attr,omitempty"`
}

type RApplicationUserCapfProfile struct {
	ApplicationUser              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	InstanceId                   string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
	CertificateOperation         XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode           XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString         string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                      XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion          string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	CertificationOperationStatus XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperationStatus,omitempty"`
	Uuid                         XUUID                 `xml:"uuid,attr,omitempty"`
}

type RArrayOfCommunityString struct {
	Item []RCommunityString `xml:"http://www.cisco.com/AXL/API/9.0 item,omitempty"`
}

type RArrayOfHosts struct {
	Item []string `xml:"http://www.cisco.com/AXL/API/9.0 item,omitempty"`
}

type RAudioCodecPreferenceList struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CodecsInList Anon770 `xml:"http://www.cisco.com/AXL/API/9.0 codecsInList,omitempty"`
	Uuid         XUUID   `xml:"uuid,attr,omitempty"`
}

type RBLFDirectedCallPark struct {
	Label                          string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	DirectedCallParkId             XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkId,omitempty"`
	DirectedCallParkDnAndPartition Anon772  `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkDnAndPartition,omitempty"`
	LabelAscii                     string   `xml:"http://www.cisco.com/AXL/API/9.0 labelAscii,omitempty"`
	Index                          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type RBillingServer struct {
	HostName              string                 `xml:"http://www.cisco.com/AXL/API/9.0 hostName,omitempty"`
	UserId                string                 `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Password              string                 `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Directory             string                 `xml:"http://www.cisco.com/AXL/API/9.0 directory,omitempty"`
	ResendOnFailure       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
	BillingServerProtocol XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
	Uuid                  XUUID                  `xml:"uuid,attr,omitempty"`
}

type RBusyLampField struct {
	BlfDest                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 blfDest,omitempty"`
	BlfDirn                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 blfDirn,omitempty"`
	RoutePartition          string                  `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	Label                   string                  `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel              string                  `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	AssociatedBlfSdFeatures AssociatedBlfSdFeatures `xml:"http://www.cisco.com/AXL/API/9.0 associatedBlfSdFeatures,omitempty"`
	Index                   XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type RButton struct {
	Feature      XFeature `xml:"http://www.cisco.com/AXL/API/9.0 feature,omitempty"`
	Label        string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	ButtonNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 buttonNumber,omitempty"`
	Uuid         XUUID    `xml:"uuid,attr,omitempty"`
}

type RCallForwardAll struct {
	ForwardToVoiceMail              Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName          XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	SecondaryCallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 secondaryCallingSearchSpaceName,omitempty"`
	Destination                     string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardAlternateParty struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type RCallForwardBusy struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardBusyInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardNoAnswer struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type RCallForwardNoAnswerInt struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type RCallForwardNoCoverage struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardNoCoverageInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardNotRegistered struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardNotRegisteredInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallForwardOnFailure struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RCallManager struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoRegistration Anon653 `xml:"http://www.cisco.com/AXL/API/9.0 autoRegistration,omitempty"`
	Ports            Anon654 `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	ProcessNodeName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	LbmGroup         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
	Ctiid            int     `xml:"ctiid,attr,omitempty"`
}

type RCallManagerGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	TftpDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 tftpDefault,omitempty"`
	Members     Anon668 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RCallManagerMember struct {
	CallManagerName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Priority        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type RCallPark struct {
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage              XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallManagerName    XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Uuid               XUUID         `xml:"uuid,attr,omitempty"`
}

type RCallPickupGroup struct {
	Pattern                       string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                   string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                         XPatternUsage       `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName            XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Name                          string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Members                       Anon747             `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	PickupNotification            XPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
	PickupNotificationTimer       XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	CallInfoForPickupNotification Anon748             `xml:"http://www.cisco.com/AXL/API/9.0 callInfoForPickupNotification,omitempty"`
	Uuid                          XUUID               `xml:"uuid,attr,omitempty"`
}

type RCallStateMember struct {
	CallStateName string  `xml:"http://www.cisco.com/AXL/API/9.0 callStateName,omitempty"`
	SoftKeys      Anon832 `xml:"http://www.cisco.com/AXL/API/9.0 softKeys,omitempty"`
}

type RCalledPartyTracing struct {
	Directorynumber string `xml:"http://www.cisco.com/AXL/API/9.0 directorynumber,omitempty"`
	Description     string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid            XUUID  `xml:"uuid,attr,omitempty"`
}

type RCalledPartyTransformationPattern struct {
	Pattern                       string         `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                   string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                         XPatternUsage  `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CalledPartyTransformationMask string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	DialPlanName                  XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName   XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	RouteFilterName               XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CalledPartyPrefixDigits       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyPrefixDigits,omitempty"`
	CalledPartyNumberingPlan      XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType         XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Uuid                          XUUID          `xml:"uuid,attr,omitempty"`
}

type RCallerFilterList struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsAllowedType Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isAllowedType,omitempty"`
	EndUserIdName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 endUserIdName,omitempty"`
	Members       Anon651 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid          XUUID   `xml:"uuid,attr,omitempty"`
}

type RCallerFilterListMember struct {
	DnMask           string            `xml:"http://www.cisco.com/AXL/API/9.0 DnMask,omitempty"`
	CallerFilterMask XCallerFilterMask `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterMask,omitempty"`
	Uuid             XUUID             `xml:"uuid,attr,omitempty"`
}

type RCallingPartyTransformationPattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage    `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	DialPlanName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	RouteFilterName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	Uuid                           XUUID            `xml:"uuid,attr,omitempty"`
}

type RCallingSearchSpaceMember struct {
	RoutePartitionName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Index              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type RCallsQueue struct {
	MaxCallersInQueue                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxCallersInQueue,omitempty"`
	QueueFullDestination             string   `xml:"http://www.cisco.com/AXL/API/9.0 queueFullDestination,omitempty"`
	CallingSearchSpacePilotQueueFull XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpacePilotQueueFull,omitempty"`
	MaxWaitTimeInQueue               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeInQueue,omitempty"`
	MaxWaitTimeDestination           string   `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeDestination,omitempty"`
	CallingSearchSpaceMaxWaitTime    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceMaxWaitTime,omitempty"`
	NoAgentDestination               string   `xml:"http://www.cisco.com/AXL/API/9.0 noAgentDestination,omitempty"`
	CallingSearchSpaceNoAgent        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceNoAgent,omitempty"`
	NetworkHoldMohAudioSourceID      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceID,omitempty"`
	Uuid                             XUUID    `xml:"uuid,attr,omitempty"`
}

type RCcdAdvertisingService struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	HostDnGroup  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 hostDnGroup,omitempty"`
	SafSipTrunk  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safSipTrunk,omitempty"`
	SafH323Trunk XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safH323Trunk,omitempty"`
	Uuid         XUUID   `xml:"uuid,attr,omitempty"`
}

type RCcdHostedDN struct {
	HostedPattern             string   `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CcdHostedDnGroup          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 CcdHostedDnGroup,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Uuid                      XUUID    `xml:"uuid,attr,omitempty"`
}

type RCcdHostedDNGroup struct {
	Name                      string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Uuid                      XUUID    `xml:"uuid,attr,omitempty"`
}

type RCcdRequestingService struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	RoutePartitionName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	LearnedPatternPrefix string  `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	PstnPrefix           string  `xml:"http://www.cisco.com/AXL/API/9.0 pstnPrefix,omitempty"`
	AssociatedTrunks     Anon753 `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunks,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type RCcdRequestingServiceMember struct {
	TrunkName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 trunkName,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type RCcmExternalIpMap struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	IpAddressHost   string  `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressHost,omitempty"`
	Port            string  `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type RCertificateRole struct {
	RoleName XTrustRole `xml:"http://www.cisco.com/AXL/API/9.0 roleName,omitempty"`
	Uuid     XUUID      `xml:"uuid,attr,omitempty"`
}

type RCiscoCatalyst600024PortFXSGateway struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                    XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp                     string               `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	Ports                            Anon743              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	PortSelectionOrder               XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 portSelectionOrder,omitempty"`
	TransmitUtf8                     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type RCiscoCatalyst6000E1VoIPGateway struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon744                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type RCiscoCatalyst6000T1VoIPGatewayPri struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon745                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type RCiscoCatalyst6000T1VoIPGatewayT1 struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	Ports                            Anon746              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type RCmcInfo struct {
	Code        string `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RCommonDeviceConfig struct {
	Name                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SoftkeyTemplateName               XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	UserLocale                        XUserLocale                  `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	MlppDomainId                      string                       `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	UseTrustedRelayPoint              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	Preemption                        XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	IpAddressingMode                  XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
	IpAddressingModePreferenceControl XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
	AllowAutoConfigurationForPhones   XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
	UseImeForOutboundCalls            XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
	Uuid                              XUUID                        `xml:"uuid,attr,omitempty"`
}

type RCommonPhoneConfig struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UnlockPwd                         string                `xml:"http://www.cisco.com/AXL/API/9.0 unlockPwd,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndAlertingType                   XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
	BackgroundImage                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
	PhonePersonalization              XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	VpnGroupName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroupName,omitempty"`
	VpnProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfileName,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Uuid                              XUUID                 `xml:"uuid,attr,omitempty"`
}

type RCommunityString struct {
	CommunityName   string        `xml:"http://www.cisco.com/AXL/API/9.0 communityName"`
	AccessPrivilege string        `xml:"http://www.cisco.com/AXL/API/9.0 accessPrivilege"`
	ArrayOfHosts    RArrayOfHosts `xml:"http://www.cisco.com/AXL/API/9.0 ArrayOfHosts"`
}

type RConferenceBridge struct {
	Name                       string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                    XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DevicePoolName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName     XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName               XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	SubUnit                    XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	LoadInformation            XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig               XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MaximumCapacity            XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	UseTrustedRelayPoint       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	DestinationAddress         string           `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	McuConferenceBridgeSipPort XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
	SipProfile                 XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile,omitempty"`
	SrtpAllowed                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	NormalizationScript        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScript,omitempty"`
	EnableTrace                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 enableTrace,omitempty"`
	NormalizationScriptInfos   Anon708          `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfos,omitempty"`
	UserName                   string           `xml:"http://www.cisco.com/AXL/API/9.0 userName,omitempty"`
	Password                   string           `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	HttpPort                   XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
	UseHttps                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
	Uuid                       XUUID            `xml:"uuid,attr,omitempty"`
}

type RCredentialPolicy struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	FailedLogon              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
	ResetFailedLogonAttempts XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
	LockoutDuration          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
	CredChangeDuration       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
	CredExpiresAfter         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
	MinCredLength            XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
	PrevCredStoredNum        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
	InactiveDaysAllowed      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
	ExpiryWarningDays        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
	TrivialCredCheck         Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
	Uuid                     XUUID    `xml:"uuid,attr,omitempty"`
}

type RCss struct {
	Name                string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description         string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Clause              string          `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanWizardGenId XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	Members             Anon652         `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	PartitionUsage      XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	Uuid                XUUID           `xml:"uuid,attr,omitempty"`
}

type RCtiRoutePoint struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                         XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UseTrustedRelayPoint          XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	Lines                         Anon700           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	Uuid                          XUUID             `xml:"uuid,attr,omitempty"`
}

type RCumaServerSecurityProfile struct {
	Name             string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	TransportType    XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	X509SubjectName  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	ServerIpHostName string              `xml:"http://www.cisco.com/AXL/API/9.0 serverIpHostName,omitempty"`
	Uuid             XUUID               `xml:"uuid,attr,omitempty"`
}

type RCustomUserField struct {
	Field string `xml:"http://www.cisco.com/AXL/API/9.0 field,omitempty"`
	Uuid  XUUID  `xml:"uuid,attr,omitempty"`
}

type RDateTimeGroup struct {
	Name               string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	TimeZone           XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	Separator          string    `xml:"http://www.cisco.com/AXL/API/9.0 separator,omitempty"`
	Dateformat         string    `xml:"http://www.cisco.com/AXL/API/9.0 dateformat,omitempty"`
	TimeFormat         string    `xml:"http://www.cisco.com/AXL/API/9.0 timeFormat,omitempty"`
	PhoneNtpReferences Anon692   `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpReferences,omitempty"`
	Uuid               XUUID     `xml:"uuid,attr,omitempty"`
}

type RDateTimeGroupNtpReference struct {
	PhoneNtpName   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpName,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type RDdi struct {
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause          string   `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanName    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitAnalysisId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitAnalysisId,omitempty"`
	Members         Anon671  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type RDefaultDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PhoneButtonTemplate               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate,omitempty"`
	SoftkeyTemplate                   XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplate,omitempty"`
	Privacy                           XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	IgnorePi                          Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePi,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndication                    XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	Uuid                              XUUID             `xml:"uuid,attr,omitempty"`
}

type RDeviceMobility struct {
	Name         string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SubNet       string   `xml:"http://www.cisco.com/AXL/API/9.0 subNet,omitempty"`
	SubNetMaskSz XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subNetMaskSz,omitempty"`
	Members      Anon664  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid         XUUID    `xml:"uuid,attr,omitempty"`
}

type RDeviceMobilityGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RDevicePool struct {
	Name                                           string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	AutoSearchSpaceName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 autoSearchSpaceName,omitempty"`
	DateTimeSettingName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeSettingName,omitempty"`
	CallManagerGroupName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	MediaResourceListName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	RegionName                                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
	NetworkLocale                                  XCountry        `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	SrstName                                       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 srstName,omitempty"`
	ConnectionMonitorDuration                      XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LocationName                                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MobilityCssName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mobilityCssName,omitempty"`
	PhysicalLocationName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocationName,omitempty"`
	DeviceMobilityGroupName                        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroupName,omitempty"`
	RevertPriority                                 XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
	SingleButtonBarge                              XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                                XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CgpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	CdpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	LocalRouteGroupName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 localRouteGroupName,omitempty"`
	GeoLocationName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CallingPartyNationalPrefix                     string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	AdjunctCallingSearchSpace                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 adjunctCallingSearchSpace,omitempty"`
	CallingPartyNationalStripDigits                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	ImeEnrolledPatternGroupName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	CntdPnTransformationCssName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
	Uuid                                           XUUID           `xml:"uuid,attr,omitempty"`
}

type RDevicePoolDeviceMobility struct {
	DevicePoolName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	Uuid           XUUID   `xml:"uuid,attr,omitempty"`
}

type RDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	VendorConfig                      XVendorConfig     `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp                      string            `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	Lines                             Anon727           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	NumberOfButtons                   XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 numberOfButtons,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Anon728           `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    Anon729           `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	BlfDirectedCallParks              Anon730           `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      Anon731           `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	DefaultProfileName                string            `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	CurrentProfileName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 currentProfileName,omitempty"`
	LoginTime                         XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 loginTime,omitempty"`
	LoginDuration                     XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 loginDuration,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	LoginUserId                       XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	CurrentConfig                     Anon732           `xml:"http://www.cisco.com/AXL/API/9.0 currentConfig,omitempty"`
	Services                          Anon733           `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	FeatureControlPolicy              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Ctiid                             int               `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID             `xml:"uuid,attr,omitempty"`
}

type RDhcpServer struct {
	ProcessNodeName              XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Uuid                         XUUID    `xml:"uuid,attr,omitempty"`
}

type RDhcpSubnet struct {
	DhcpServerName               XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName,omitempty"`
	SubnetIpAddress              string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress,omitempty"`
	PrimaryStartIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryStartIpAddress,omitempty"`
	PrimaryEndIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryEndIpAddress,omitempty"`
	SecondaryStartIpAddress      string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryStartIpAddress,omitempty"`
	SecondaryEndIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryEndIpAddress,omitempty"`
	PrimaryRouterIpAddress       string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryRouterIpAddress,omitempty"`
	SecondaryRouterIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryRouterIpAddress,omitempty"`
	SubnetMask                   string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetMask,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Uuid                         XUUID    `xml:"uuid,attr,omitempty"`
}

type RDialPlan struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RDialPlanTag struct {
	Name                    string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DialPlanName            XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	Operator                XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
	SuppressFromRouteFilter Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 suppressFromRouteFilter,omitempty"`
	Uuid                    XUUID     `xml:"uuid,attr,omitempty"`
}

type RDigitDiscardInstructionMember struct {
	DialPlanTagName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type RDirectedCallPark struct {
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description        string        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage              XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	RetrievalPrefix    string        `xml:"http://www.cisco.com/AXL/API/9.0 retrievalPrefix,omitempty"`
	ReversionPattern   string        `xml:"http://www.cisco.com/AXL/API/9.0 reversionPattern,omitempty"`
	RevertCssName      XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 revertCssName,omitempty"`
	Uuid               XUUID         `xml:"uuid,attr,omitempty"`
}

type RDirectoryLookupDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type RDirectoryUri struct {
	IsPrimary Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPrimary,omitempty"`
	Uri       string  `xml:"http://www.cisco.com/AXL/API/9.0 uri,omitempty"`
	Partition XFkType `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type RDirn struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type REmccFeatureConfig struct {
	ParameterName string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
	Value         string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	Uuid          XUUID  `xml:"uuid,attr,omitempty"`
}

type REndUserCapfProfile struct {
	EndUserId                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 endUserId,omitempty"`
	InstanceId                   string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId,omitempty"`
	CertificationOperation       XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
	AuthenticationMode           XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString         string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                      XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion          string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	CertificationOperationStatus XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperationStatus,omitempty"`
	Uuid                         XUUID                 `xml:"uuid,attr,omitempty"`
}

type REnduserMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
}

type REnterpriseFeatureAccessConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefaultEafNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefaultEafNumber,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type RExternalCallControlProfile struct {
	Name                      string                  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	PrimaryUri                string                  `xml:"http://www.cisco.com/AXL/API/9.0 primaryUri,omitempty"`
	SecondaryUri              string                  `xml:"http://www.cisco.com/AXL/API/9.0 secondaryUri,omitempty"`
	EnableLoadBalancing       Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
	RoutingRequestTimer       XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 routingRequestTimer,omitempty"`
	DiversionReroutingCssName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 diversionReroutingCssName,omitempty"`
	CallTreatmentOnFailure    XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
	Uuid                      XUUID                   `xml:"uuid,attr,omitempty"`
}

type RFacInfo struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Code               string   `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	AuthorizationLevel XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type RFallbackFeatureConfig struct {
	EnableFallbackForImeCalls     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableFallbackForImeCalls,omitempty"`
	QosSensistivityLevel          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	DtmfCorrelationDigits         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfCorrelationDigits,omitempty"`
	DtmfCollectionTimer           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfCollectionTimer,omitempty"`
	CallAnswerTimer               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	ClearImeCallDelayTimer        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 clearImeCallDelayTimer,omitempty"`
	DtmfInterDigitDelayTimer      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfInterDigitDelayTimer,omitempty"`
	PostConnectFallbackDelayTimer XInteger `xml:"http://www.cisco.com/AXL/API/9.0 postConnectFallbackDelayTimer,omitempty"`
	FallbackSplitDelayTimer       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fallbackSplitDelayTimer,omitempty"`
	CallCss                       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
}

type RFallbackProfile struct {
	Name                                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                           string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AdvertisedFallbackDirectoryE164Number string                `xml:"http://www.cisco.com/AXL/API/9.0 advertisedFallbackDirectoryE164Number,omitempty"`
	QosSensistivityLevel                  XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	CallCss                               XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
	CallAnswerTimer                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	DirectoryNumberPartition              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumberPartition,omitempty"`
	DirectoryNumber                       string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	NumberOfDigitsForCallerIDPartialMatch XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
	NumberOfCorrelationDtmfDigits         XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfCorrelationDtmfDigits,omitempty"`
	Uuid                                  XUUID                 `xml:"uuid,attr,omitempty"`
}

type RFeatureControlConfig struct {
	FeatureName     string  `xml:"http://www.cisco.com/AXL/API/9.0 featureName,omitempty"`
	DefaultValue    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 defaultValue,omitempty"`
	OverrideDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 overrideDefault,omitempty"`
	EnableSetting   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableSetting,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type RFeatureControlPolicy struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Features    Anon768 `xml:"http://www.cisco.com/AXL/API/9.0 features,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RFixedMohAudioSource struct {
	SourceId  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	Name      string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Multicast Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Enable    string   `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	Uuid      XUUID    `xml:"uuid,attr,omitempty"`
}

type RGatekeeper struct {
	Name          string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description   string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RrqTimeToLive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
	RetryTimeout  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
	EnableDevice  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
	Uuid          XUUID    `xml:"uuid,attr,omitempty"`
}

type RGateway struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Units                Anon735         `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	Scratch              string          `xml:"http://www.cisco.com/AXL/API/9.0 scratch,omitempty"`
	VendorConfig         XVendorConfig   `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp         string          `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	LoadInformation      string          `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointAnalog struct {
	Index                                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                              string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                    XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                 XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                             XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Port                                     RAnalogPort          `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	TrunkSelectionOrder                      XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	TransmitUtf8                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode   `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	ImeE164DirectoryNumber                   string               `xml:"http://www.cisco.com/AXL/API/9.0 imeE164DirectoryNumber,omitempty"`
	Ctiid                                    int                  `xml:"ctiid,attr,omitempty"`
	Uuid                                     XUUID                `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointAnalogAccess struct {
	DomainName  string                 `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    RGatewayEndpointAnalog `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                  `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalAccessBri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    RGatewayEndpointDigitalBri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                      `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalAccessPri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    RGatewayEndpointDigitalPri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                      `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalAccessT1 struct {
	DomainName  string                    `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    RGatewayEndpointDigitalT1 `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID                     `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalBri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	BriProtocol                        XBriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 briProtocol,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	PresentationBit                    XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon776                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalPri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                              XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIE                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIE,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIe                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIe,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon775                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	RouteClassSignalling               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type RGatewayEndpointDigitalT1 struct {
	Index                            XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	V150                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Ports                            Anon778              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	EncodeOutboundVoiceRouteClass    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 encodeOutboundVoiceRouteClass,omitempty"`
	RouteClassSignalling             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Ctiid                            int                  `xml:"ctiid,attr,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type RGatewaySccp struct {
	Index                                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                              string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct           `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                    XModel             `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass             `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                 XDeviceProtocol    `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                             XProtocolSide      `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry           `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig      `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string             `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	TransmitUtf8                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	PhoneTemplateName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	SecurityProfileName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	UserLocale                               XUserLocale        `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	DeviceMobilityMode                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	OwnerUserId                              XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserId,omitempty"`
	CommonPhoneConfigName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	AlwaysUsePrimeLine                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVM                  XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVM,omitempty"`
	AllowCtiControlFlag                      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RemoteDevice                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	SubscribeCallingSearchSpaceName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	UnattendedPort                           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	PresenceGroupName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	MlppIndicationStatus                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                               XPreemption        `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	HlogStatus                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	IgnorePresentationIndicators             XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Lines                                    Anon782            `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	Ctiid                                    int                `xml:"ctiid,attr,omitempty"`
	Uuid                                     XUUID              `xml:"uuid,attr,omitempty"`
}

type RGatewaySccpEndpoints struct {
	DomainName  string       `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    RGatewaySccp `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Uuid        XUUID        `xml:"uuid,attr,omitempty"`
}

type RGatewaySubunits struct {
	DomainName  string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Unit        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunits    Anon758  `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type RGeoLocation struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Country                string `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	Uuid                   XUUID  `xml:"uuid,attr,omitempty"`
}

type RGeoLocationFilter struct {
	Name                      string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UseCountry                Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCountry,omitempty"`
	UseNationalSubDivision    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNationalSubDivision,omitempty"`
	UseDistrict               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useDistrict,omitempty"`
	UseCommunityName          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCommunityName,omitempty"`
	UseCityDivision           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCityDivision,omitempty"`
	UseNeighbourhood          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNeighbourhood,omitempty"`
	UseStreet                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreet,omitempty"`
	UseLeadingStreetDirection Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLeadingStreetDirection,omitempty"`
	UseTrailingStreetSuffix   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useTrailingStreetSuffix,omitempty"`
	UseStreetSuffix           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreetSuffix,omitempty"`
	UseHouseNumber            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumber,omitempty"`
	UseHouseNumberSuffix      Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumberSuffix,omitempty"`
	UseLandmark               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLandmark,omitempty"`
	UseLocation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLocation,omitempty"`
	UseFloor                  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useFloor,omitempty"`
	UseOccupantName           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useOccupantName,omitempty"`
	UsePostalCode             Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePostalCode,omitempty"`
	Uuid                      XUUID   `xml:"uuid,attr,omitempty"`
}

type RGeoLocationPolicy struct {
	Name                   string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Country                string  `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string  `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string  `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string  `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string  `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string  `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string  `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string  `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string  `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string  `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string  `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string  `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string  `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string  `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string  `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string  `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string  `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	RelatedPolicies        Anon749 `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicies,omitempty"`
	Uuid                   XUUID   `xml:"uuid,attr,omitempty"`
}

type RH323Gateway struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                          XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                                XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	VendorConfig                                   XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	SigDigits                                      Anon726                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	CallingPartyNationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	DisplayIeDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIeDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
	Uuid                                           XUUID                  `xml:"uuid,attr,omitempty"`
}

type RH323Line struct {
	Index                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Label                string          `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel           string          `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display              string          `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                 RDirn           `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	DisplayAscii         string          `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask             string          `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	DialPlanWizardId     XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardId,omitempty"`
	MaxNumCalls          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay      Anon780         `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag        XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi           XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial            string          `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage       XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	AssociatedEndusers   Anon781         `xml:"http://www.cisco.com/AXL/API/9.0 associatedEndusers,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
	Ctiid                int             `xml:"ctiid,attr,omitempty"`
}

type RH323Phone struct {
	Name                              string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	LocationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint              XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	RemoteDevice                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	CgpnTransformationCssName         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AlwaysUsePrimeLine                XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SrtpAllowed                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	WaitForFarEndH245TerminalSet      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferredCodec                 XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
	CallerIdDn                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection             XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	PresenceGroupName                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	HlogStatus                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	SignalingPort                     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	GateKeeperInfo                    Anon711                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	Lines                             Anon712                `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	IgnorePresentationIndicators      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Ctiid                             int                    `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID                  `xml:"uuid,attr,omitempty"`
}

type RH323Trunk struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                          XModel                 `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                                Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	NationalPrefix                                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                                  string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	SigDigits                                      Anon715                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	GateKeeperInfo                                 Anon716                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	RemoteServerinfo                               Anon717                `xml:"http://www.cisco.com/AXL/API/9.0 remoteServerinfo,omitempty"`
	IctPassingPrecedenceLevelThroughUuie           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ictPassingPrecedenceLevelThroughUuie,omitempty"`
	IctSecurityAccessLevel                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
	IsSafEnabled                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	RunOnEveryNode                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Destinations                                   Anon718                `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
	Uuid                                           XUUID                  `xml:"uuid,attr,omitempty"`
}

type RH323TrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type RHandoffConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type RHuntForwardInfoBusy struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type RHuntForwardInfoNoAnswer struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type RHuntList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	VoiceMailUsage       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	Members              Anon665 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type RHuntListMember struct {
	LineGroupName  XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 lineGroupName,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type RHuntPilot struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	HuntListName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 huntListName,omitempty"`
	ParkMonForwardNoRetrieve       Anon701            `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieve,omitempty"`
	AlertingName                   string             `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName              string             `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	E164Mask                       string             `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	AarNeighborhoodName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	ForwardHuntNoAnswer            Anon702            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntNoAnswer,omitempty"`
	ForwardHuntBusy                Anon703            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntBusy,omitempty"`
	CallPickupGroupName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	MaxHuntduration                XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	DisplayConnectedNumber         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	QueueCalls                     RCallsQueue        `xml:"http://www.cisco.com/AXL/API/9.0 queueCalls,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type RImeClient struct {
	Name                        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Domain                      string  `xml:"http://www.cisco.com/AXL/API/9.0 domain,omitempty"`
	IsActivated                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName                XFkType `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	PrimaryImeServerName        XFkType `xml:"http://www.cisco.com/AXL/API/9.0 primaryImeServerName,omitempty"`
	SecondaryImeServerName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 secondaryImeServerName,omitempty"`
	LearnedRouteFilterGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 learnedRouteFilterGroupName,omitempty"`
	ExclusionNumberGroupName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 exclusionNumberGroupName,omitempty"`
	FirewallName                XFkType `xml:"http://www.cisco.com/AXL/API/9.0 firewallName,omitempty"`
	Members                     Anon764 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	CcmExternalIpMaps           Anon765 `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMaps,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeClientMember struct {
	EnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 enrolledPatternGroupName,omitempty"`
	Uuid                     XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeE164Transformation struct {
	Name                                  string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CgpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	IsCgpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
	CdpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	IsCdpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	IncomingCgpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCgpnTransformationProfileName,omitempty"`
	IncomingCdpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCdpnTransformationProfileName,omitempty"`
	Uuid                                  XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeEnrolledPattern struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeEnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeEnrolledPatternGroup struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FallbackProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfileName,omitempty"`
	IsPatternAllAlias   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeExclusionNumber struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeExclusionNumberGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroupName,omitempty"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeExclusionNumberGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RImeFeatureConfig struct {
	PreventImeCallsFromAnalogGateways Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 preventImeCallsFromAnalogGateways,omitempty"`
	EnableIntraDomain                 Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableIntraDomain,omitempty"`
	AllowMwiNotification              Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 allowMwiNotification,omitempty"`
	TrunkConnectionTimer              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 trunkConnectionTimer,omitempty"`
	FirewallConnectionTimer           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallConnectionTimer,omitempty"`
	FirewallTranscationTimer          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallTranscationTimer,omitempty"`
	FirewallIdleTimer                 XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallIdleTimer,omitempty"`
	FailedCallAttemptThreshold        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedCallAttemptThreshold,omitempty"`
	CallFallbackAttemptThreshold      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callFallbackAttemptThreshold,omitempty"`
	QualityTimer                      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 qualityTimer,omitempty"`
	UseImeForOutboundCalls            Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
}

type RImeFirewall struct {
	Name        string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type RImeLearnedRoutes struct {
	E164Did      string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Did,omitempty"`
	Domain       string  `xml:"http://www.cisco.com/AXL/API/9.0 domain,omitempty"`
	Signaling    string  `xml:"http://www.cisco.com/AXL/API/9.0 signaling,omitempty"`
	LearnedOn    string  `xml:"http://www.cisco.com/AXL/API/9.0 learnedOn,omitempty"`
	ExpiresOn    string  `xml:"http://www.cisco.com/AXL/API/9.0 expiresOn,omitempty"`
	AdminEnabled Boolean `xml:"http://www.cisco.com/AXL/API/9.0 adminEnabled,omitempty"`
	Uuid         XUUID   `xml:"uuid,attr,omitempty"`
}

func (t *RImeLearnedRoutes) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T RImeLearnedRoutes
	var overlay struct {
		*T
		AdminEnabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 adminEnabled,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AdminEnabled = (*Boolean)(&overlay.T.AdminEnabled)
	return d.DecodeElement(&overlay, &start)
}

type RImeRouteFilterElement struct {
	Name                    string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ElementType             XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	ImeRouteFilterGroupName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroupName,omitempty"`
	Uuid                    XUUID              `xml:"uuid,attr,omitempty"`
}

type RImeRouteFilterGroup struct {
	Name              string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	GroupTrustSetting Boolean `xml:"http://www.cisco.com/AXL/API/9.0 groupTrustSetting,omitempty"`
	Uuid              XUUID   `xml:"uuid,attr,omitempty"`
}

type RImeServer struct {
	Name               string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress          string              `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	DeviceSecurityMode XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	ApplicationUser    XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	ReconnectInterval  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
	Uuid               XUUID               `xml:"uuid,attr,omitempty"`
}

type RImportedDirectoryUriCatalogs struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RouteString        string   `xml:"http://www.cisco.com/AXL/API/9.0 routeString,omitempty"`
	LastLoadedFileName string   `xml:"http://www.cisco.com/AXL/API/9.0 lastLoadedFileName,omitempty"`
	FileLoadDateTime   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fileLoadDateTime,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type RInterClusterServiceProfile struct {
	InterClusterService XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	IsActivated         Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	Uuid                XUUID                `xml:"uuid,attr,omitempty"`
}

type RIpPhoneServices struct {
	ServiceName            string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
	AsciiServiceName       string                `xml:"http://www.cisco.com/AXL/API/9.0 asciiServiceName,omitempty"`
	ServiceDescription     string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceDescription,omitempty"`
	ServiceUrl             string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceUrl,omitempty"`
	SecureServiceUrl       string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServiceUrl,omitempty"`
	ServiceCategory        XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
	ServiceType            XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ServiceVendor          string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVendor,omitempty"`
	ServiceVersion         string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVersion,omitempty"`
	Enabled                Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	EnterpriseSubscription Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseSubscription,omitempty"`
	Parameters             Anon699               `xml:"http://www.cisco.com/AXL/API/9.0 parameters,omitempty"`
	Uuid                   XUUID                 `xml:"uuid,attr,omitempty"`
}

type RIpPhoneServicesParameter struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DisplayName   string  `xml:"http://www.cisco.com/AXL/API/9.0 displayName,omitempty"`
	Default       string  `xml:"http://www.cisco.com/AXL/API/9.0 default,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ParamRequired Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramRequired,omitempty"`
	ParamPassword Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramPassword,omitempty"`
	Uuid          XUUID   `xml:"uuid,attr,omitempty"`
}

type RIvrUserLocale struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex,omitempty"`
	Uuid       XUUID       `xml:"uuid,attr,omitempty"`
}

type RLbmGroup struct {
	Name               string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 Description,omitempty"`
	ProcessnodeActive  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeActive,omitempty"`
	ProcessnodeStandby XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeStandby,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type RLbmHubGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Member1     string `xml:"http://www.cisco.com/AXL/API/9.0 member1,omitempty"`
	Member2     string `xml:"http://www.cisco.com/AXL/API/9.0 member2,omitempty"`
	Member3     string `xml:"http://www.cisco.com/AXL/API/9.0 member3,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RLdapDirectory struct {
	Name           string        `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	LdapDn         string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapDn,omitempty"`
	LdapPassword   string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapPassword,omitempty"`
	UserSearchBase string        `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
	Repeatable     Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 repeatable,omitempty"`
	IntervalValue  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 intervalValue,omitempty"`
	ScheduleUnit   XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	NextExecTime   string        `xml:"http://www.cisco.com/AXL/API/9.0 nextExecTime,omitempty"`
	Servers        Anon760       `xml:"http://www.cisco.com/AXL/API/9.0 servers,omitempty"`
	MiddleName     string        `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	PhoneNumber    string        `xml:"http://www.cisco.com/AXL/API/9.0 phoneNumber,omitempty"`
	MailId         string        `xml:"http://www.cisco.com/AXL/API/9.0 mailId,omitempty"`
	UserId         string        `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	ManagerId      string        `xml:"http://www.cisco.com/AXL/API/9.0 managerId,omitempty"`
	FirstName      string        `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	LastName       string        `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	Department     string        `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
	LdapFilter     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter,omitempty"`
	DirectoryUri   string        `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
	Uuid           XUUID         `xml:"uuid,attr,omitempty"`
}

type RLdapFilter struct {
	Name   string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Filter string `xml:"http://www.cisco.com/AXL/API/9.0 filter,omitempty"`
	Uuid   XUUID  `xml:"uuid,attr,omitempty"`
}

type RLdapSyncCustomField struct {
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName,omitempty"`
	CustomUserField       string `xml:"http://www.cisco.com/AXL/API/9.0 customUserField,omitempty"`
	LdapUserField         string `xml:"http://www.cisco.com/AXL/API/9.0 ldapUserField,omitempty"`
	Uuid                  XUUID  `xml:"uuid,attr,omitempty"`
}

type RLicenseCapabilities struct {
	Userid    string  `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	EnableUps Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
	EnableUpc Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type RLine struct {
	Pattern                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                          string                       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                                XPatternUsage                `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName                   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	AarNeighborhoodName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	AarDestinationMask                   string                       `xml:"http://www.cisco.com/AXL/API/9.0 aarDestinationMask,omitempty"`
	AarKeepCallHistory                   Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarKeepCallHistory,omitempty"`
	AarVoiceMailEnabled                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarVoiceMailEnabled,omitempty"`
	CallForwardAll                       RCallForwardAll              `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAll,omitempty"`
	CallForwardBusy                      RCallForwardBusy             `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusy,omitempty"`
	CallForwardBusyInt                   RCallForwardBusyInt          `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusyInt,omitempty"`
	CallForwardNoAnswer                  RCallForwardNoAnswer         `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswer,omitempty"`
	CallForwardNoAnswerInt               RCallForwardNoAnswerInt      `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswerInt,omitempty"`
	CallForwardNoCoverage                RCallForwardNoCoverage       `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverage,omitempty"`
	CallForwardNoCoverageInt             RCallForwardNoCoverageInt    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverageInt,omitempty"`
	CallForwardOnFailure                 RCallForwardOnFailure        `xml:"http://www.cisco.com/AXL/API/9.0 callForwardOnFailure,omitempty"`
	CallForwardAlternateParty            RCallForwardAlternateParty   `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAlternateParty,omitempty"`
	CallForwardNotRegistered             RCallForwardNotRegistered    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegistered,omitempty"`
	CallForwardNotRegisteredInt          RCallForwardNotRegisteredInt `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegisteredInt,omitempty"`
	CallPickupGroupName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	AutoAnswer                           XAutoAnswer                  `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
	NetworkHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId             XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AlertingName                         string                       `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	PresenceGroupName                    XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	ShareLineAppearanceCssName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 shareLineAppearanceCssName,omitempty"`
	VoiceMailProfileName                 XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	PatternPrecedence                    XPatternPrecedence           `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                        XReleaseCauseValue           `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	HrDuration                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrDuration,omitempty"`
	HrInterval                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrInterval,omitempty"`
	CfaCssPolicy                         XCFACSSActivationPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
	DefaultActivatedDeviceName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 defaultActivatedDeviceName,omitempty"`
	ParkMonForwardNoRetrieveDn           string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveDn,omitempty"`
	ParkMonForwardNoRetrieveIntDn        string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntDn,omitempty"`
	ParkMonForwardNoRetrieveVmEnabled    Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveIntVmEnabled Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveCssName      XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveCssName,omitempty"`
	ParkMonForwardNoRetrieveIntCssName   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntCssName,omitempty"`
	ParkMonReversionTimer                XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 parkMonReversionTimer,omitempty"`
	PartyEntranceTone                    XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
	DirectoryURIs                        Anon710                      `xml:"http://www.cisco.com/AXL/API/9.0 directoryURIs,omitempty"`
	AllowCtiControlFlag                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RejectAnonymousCall                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousCall,omitempty"`
	Uuid                                 XUUID                        `xml:"uuid,attr,omitempty"`
}

type RLineAppearanceAssociationForPresence struct {
	LaapAssociate   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 laapAssociate,omitempty"`
	LaapProductType string  `xml:"http://www.cisco.com/AXL/API/9.0 laapProductType,omitempty"`
	LaapDeviceName  string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDeviceName,omitempty"`
	LaapDirectory   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDirectory,omitempty"`
	LaapPartition   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapPartition,omitempty"`
	LaapDescription string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDescription,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type RLineAssociation struct {
	Uuid               XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid,omitempty"`
	Pattern            string   `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Index              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type RLineGroup struct {
	Name                      string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DistributionAlgorithm     XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	RnaReversionTimeOut       XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
	HuntAlgorithmNoAnswer     XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
	HuntAlgorithmBusy         XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
	HuntAlgorithmNotAvailable XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	Members                   Anon666              `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid                      XUUID                `xml:"uuid,attr,omitempty"`
}

type RLineGroupMember struct {
	LineSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lineSelectionOrder,omitempty"`
	DirectoryNumber    RDirn    `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type RLocation struct {
	Name                 string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Id                   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 id,omitempty"`
	Kbits                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 kbits,omitempty"`
	VideoKbits           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoKbits,omitempty"`
	RelatedLocations     Anon661  `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocations,omitempty"`
	WithinAudioBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
	WithinVideoBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
	WithinImmersiveKbits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	BetweenLocations     Anon662  `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocations,omitempty"`
	Uuid                 XUUID    `xml:"uuid,attr,omitempty"`
}

type RLocationBetween struct {
	LocationName       XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	Weight             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 weight,omitempty"`
	AudioBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 audioBandwidth,omitempty"`
	VideoBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	ImmersiveBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 immersiveBandwidth,omitempty"`
	Uuid               XUUID    `xml:"uuid,attr,omitempty"`
}

type RLocationRelationship struct {
	LocationName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	RsvpSetting  XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 rsvpSetting,omitempty"`
	Uuid         XUUID        `xml:"uuid,attr,omitempty"`
}

type RMediaResourceGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Multicast   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Members     Anon657 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RMediaResourceGroupMember struct {
	DeviceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Uuid       XUUID   `xml:"uuid,attr,omitempty"`
}

type RMediaResourceList struct {
	Name    string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause  string  `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	Members Anon658 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid    XUUID   `xml:"uuid,attr,omitempty"`
}

type RMediaResourceListMember struct {
	MediaResourceGroupName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroupName,omitempty"`
	Order                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 order,omitempty"`
	Uuid                   XUUID    `xml:"uuid,attr,omitempty"`
}

type RMeetMe struct {
	Pattern              string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description          string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                XPatternUsage       `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName   XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	MinimumSecurityLevel XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 minimumSecurityLevel,omitempty"`
	Uuid                 XUUID               `xml:"uuid,attr,omitempty"`
}

type RMessageWaiting struct {
	Pattern                 string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MessageWaitingIndicator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	CallingSearchSpaceName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Uuid                    XUUID   `xml:"uuid,attr,omitempty"`
}

type RMlppDomain struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	DomainId   string `xml:"http://www.cisco.com/AXL/API/9.0 domainId,omitempty"`
	Uuid       XUUID  `xml:"uuid,attr,omitempty"`
}

type RMobileSmartClientProfile struct {
	Name              string             `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	MobileSmartClient XMobileSmartClient `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClient,omitempty"`
	EnableSnrUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableSnrUri,omitempty"`
	EnableCFAUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableCFAUri,omitempty"`
	HandOffUri        string             `xml:"http://www.cisco.com/AXL/API/9.0 handOffUri,omitempty"`
	Uuid              XUUID              `xml:"uuid,attr,omitempty"`
}

type RMobileVoiceAccess struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Locales            Anon672 `xml:"http://www.cisco.com/AXL/API/9.0 locales,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type RMobileVoiceMember struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex,omitempty"`
	Uuid       XUUID       `xml:"uuid,attr,omitempty"`
}

type RMobility struct {
	HandoffNumber        XFkType `xml:"http://www.cisco.com/AXL/API/9.0 handoffNumber,omitempty"`
	HandoffPartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 handoffPartitionName,omitempty"`
	DTMFNumber           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 DTMFNumber,omitempty"`
	DTMFPartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 DTMFPartitionName,omitempty"`
}

type RMobilityProfile struct {
	Name                      string         `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description               string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MobileClientCallingOption XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	DvofServiceAccessNumber   string         `xml:"http://www.cisco.com/AXL/API/9.0 dvofServiceAccessNumber,omitempty"`
	Dirn                      RDirn          `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	DvorCallerId              string         `xml:"http://www.cisco.com/AXL/API/9.0 dvorCallerId,omitempty"`
	Uuid                      XUUID          `xml:"uuid,attr,omitempty"`
}

type RMohAudioSource struct {
	SourceId                     XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId,omitempty"`
	Name                         string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SourceFile                   string            `xml:"http://www.cisco.com/AXL/API/9.0 sourceFile,omitempty"`
	Multicast                    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Repeat                       Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 repeat,omitempty"`
	MohFileStatus                XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 mohFileStatus,omitempty"`
	InitialAnnouncement          XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncement,omitempty"`
	PeriodicAnnouncement         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncement,omitempty"`
	PeriodicAnnouncementInterval XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
	LocaleAnnouncement           XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	InitialAnnouncementPlayed    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncementPlayed,omitempty"`
	Uuid                         XUUID             `xml:"uuid,attr,omitempty"`
}

type RMohServer struct {
	Name                    string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ProcessNodeName         XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	DevicePoolName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName            XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MaxUnicastConnections   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
	MaxMulticastConnections XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
	FixedAudioSourceDevice  string   `xml:"http://www.cisco.com/AXL/API/9.0 fixedAudioSourceDevice,omitempty"`
	RunFlag                 Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
	UseTrustedRelayPoint    XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	IsMultiCastEnabled      Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isMultiCastEnabled,omitempty"`
	BaseMulticastIpaddress  string   `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
	BaseMulticastPort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
	MulticastIncrementOnIp  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	AudioSources            Anon713  `xml:"http://www.cisco.com/AXL/API/9.0 audioSources,omitempty"`
	Uuid                    XUUID    `xml:"uuid,attr,omitempty"`
}

type RMtp struct {
	MtpType           XProduct `xml:"http://www.cisco.com/AXL/API/9.0 mtpType,omitempty"`
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	TrustedRelayPoint Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trustedRelayPoint,omitempty"`
	Uuid              XUUID    `xml:"uuid,attr,omitempty"`
}

type RNormalizationScriptInfo struct {
	ParameterName  string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
	ParameterValue string `xml:"http://www.cisco.com/AXL/API/9.0 parameterValue,omitempty"`
	Uuid           XUUID  `xml:"uuid,attr,omitempty"`
}

type RNotification struct {
	ObjectList []XNotification `xml:"http://www.cisco.com/AXL/API/9.0 objectList,omitempty"`
}

type RNotificationChange struct {
	ObjectLists RNotification `xml:"http://www.cisco.com/AXL/API/9.0 objectLists"`
}

type RNumplanIdentifier struct {
	DirectoryNumber    string `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type RObjectList struct {
	Object string `xml:"http://www.cisco.com/AXL/API/9.0 object,omitempty"`
}

type RParameterMember struct {
	Parameter      XDialParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter,omitempty"`
	Value          string         `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	SelectionOrder XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

type RPatternMember struct {
	Description    string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DialParameters DialParameters `xml:"http://www.cisco.com/AXL/API/9.0 dialParameters,omitempty"`
	SelectionOrder XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

type RPhone struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct              `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                             XModel                `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                             XClass                `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                          XDeviceProtocol       `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                      XProtocolSide         `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	NetworkLocation                   XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                   XLoadInformation      `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp                      string                `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName         XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	Lines                             Anon719               `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	NumberOfButtons                   XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfButtons,omitempty"`
	PhoneTemplateName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Anon720               `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    Anon721               `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	PrimaryPhoneName                  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	RingSettingIdleBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
	RingSettingBusyBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
	BlfDirectedCallParks              Anon722               `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      Anon723               `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale           `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkLocale                     XCountry              `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	IdleTimeout                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 idleTimeout,omitempty"`
	AuthenticationUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationUrl,omitempty"`
	DirectoryUrl                      string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryUrl,omitempty"`
	IdleUrl                           string                `xml:"http://www.cisco.com/AXL/API/9.0 idleUrl,omitempty"`
	InformationUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 informationUrl,omitempty"`
	MessagesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 messagesUrl,omitempty"`
	ProxyServerUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 proxyServerUrl,omitempty"`
	ServicesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 servicesUrl,omitempty"`
	Services                          Anon724               `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	SoftkeyTemplateName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	LoginUserId                       string                `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	DefaultProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	EnableExtensionMobility           Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	CurrentProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 currentProfileName,omitempty"`
	LoginTime                         XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 loginTime,omitempty"`
	LoginDuration                     XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 loginDuration,omitempty"`
	CurrentConfig                     Anon725               `xml:"http://www.cisco.com/AXL/API/9.0 currentConfig,omitempty"`
	SingleButtonBarge                 XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	BuiltInBridgeStatus               XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
	CallInfoPrivacyStatus             XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	HlogStatus                        XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	IgnorePresentationIndicators      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	PacketCaptureMode                 XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration             XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	AllowCtiControlFlag               Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	PresenceGroupName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnattendedPort                    Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	RequireDtmfReception              Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
	Rfc2833Disabled                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
	CertificateOperation              XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode                XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                           XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	AuthenticationString              string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	CertificateStatus                 XCertificateStatus    `xml:"http://www.cisco.com/AXL/API/9.0 certificateStatus,omitempty"`
	UpgradeFinishTime                 string                `xml:"http://www.cisco.com/AXL/API/9.0 upgradeFinishTime,omitempty"`
	DeviceMobilityMode                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	RoamingDevicePoolName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 roamingDevicePoolName,omitempty"`
	RemoteDevice                      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	IsActive                          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	IsDualMode                        Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isDualMode,omitempty"`
	MobilityUserIdName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobilityUserIdName,omitempty"`
	PhoneSuite                        XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	IsProtected                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
	MobileSmartClientProfileName      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	MtpRequired                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferedCodec                  XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
	DialRulesName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 dialRulesName,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	DigestUser                        string                `xml:"http://www.cisco.com/AXL/API/9.0 digestUser,omitempty"`
	OutboundCallRollover              XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
	HotlineDevice                     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	SecureInformationUrl              string                `xml:"http://www.cisco.com/AXL/API/9.0 secureInformationUrl,omitempty"`
	SecureDirectoryUrl                string                `xml:"http://www.cisco.com/AXL/API/9.0 secureDirectoryUrl,omitempty"`
	SecureMessageUrl                  string                `xml:"http://www.cisco.com/AXL/API/9.0 secureMessageUrl,omitempty"`
	SecureServicesUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServicesUrl,omitempty"`
	SecureAuthenticationUrl           string                `xml:"http://www.cisco.com/AXL/API/9.0 secureAuthenticationUrl,omitempty"`
	SecureIdleUrl                     string                `xml:"http://www.cisco.com/AXL/API/9.0 secureIdleUrl,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	DeviceTrustMode                   XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
	EarlyOfferSupportForVoiceCall     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	RequireThirdPartyRegistration     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireThirdPartyRegistration,omitempty"`
	BlockIncomingCallsWhenRoaming     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 blockIncomingCallsWhenRoaming,omitempty"`
	HomeNetworkId                     string                `xml:"http://www.cisco.com/AXL/API/9.0 homeNetworkId,omitempty"`
	AllowPresentationSharingUsingBfcp Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
	RequireOffPremiseLocation         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	Ctiid                             int                   `xml:"ctiid,attr,omitempty"`
	Uuid                              XUUID                 `xml:"uuid,attr,omitempty"`
}

type RPhoneButtonTemplate struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	IsUserModifiable Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isUserModifiable,omitempty"`
	Buttons          Anon698 `xml:"http://www.cisco.com/AXL/API/9.0 buttons,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type RPhoneLine struct {
	Index                        XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Label                        string             `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel                   string             `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display                      string             `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                         RDirn              `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	RingSetting                  XRingSetting       `xml:"http://www.cisco.com/AXL/API/9.0 ringSetting,omitempty"`
	ConsecutiveRingSetting       XRingSetting       `xml:"http://www.cisco.com/AXL/API/9.0 consecutiveRingSetting,omitempty"`
	RingSettingIdlePickupAlert   XRingSetting       `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdlePickupAlert,omitempty"`
	RingSettingActivePickupAlert XRingSetting       `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingActivePickupAlert,omitempty"`
	DisplayAscii                 string             `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask                     string             `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	DialPlanWizardId             XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardId,omitempty"`
	MwlPolicy                    XMWLPolicy         `xml:"http://www.cisco.com/AXL/API/9.0 mwlPolicy,omitempty"`
	MaxNumCalls                  XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger                  XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay              Anon771            `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag                XRecordingFlag     `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi                   XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial                    string             `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage               XPartitionUsage    `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	AssociatedEndusers           AssociatedEndusers `xml:"http://www.cisco.com/AXL/API/9.0 associatedEndusers,omitempty"`
	MissedCallLogging            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 missedCallLogging,omitempty"`
	Uuid                         XUUID              `xml:"uuid,attr,omitempty"`
	Ctiid                        int                `xml:"ctiid,attr,omitempty"`
}

type RPhoneNtp struct {
	IpAddress   string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Description string     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mode        XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
	Uuid        XUUID      `xml:"uuid,attr,omitempty"`
}

type RPhoneSecurityProfile struct {
	PhoneType                  XModel              `xml:"http://www.cisco.com/AXL/API/9.0 phoneType,omitempty"`
	Protocol                   XDeviceProtocol     `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	Name                       string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DeviceSecurityMode         XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	AuthenticationMode         XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                    XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	TftpEncryptedConfig        Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
	NonceValidityTime          XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
	TransportType              XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	SipPhonePort               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	EnableDigestAuthentication Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
	ExcludeDigestCredentials   Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
	Uuid                       XUUID               `xml:"uuid,attr,omitempty"`
}

type RPhysicalLocation struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RPickupGroupMember struct {
	Priority             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	PickupGroupName      XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 pickupGroupName,omitempty"`
	PickupDnAndPartition Anon779  `xml:"http://www.cisco.com/AXL/API/9.0 pickupDnAndPartition,omitempty"`
	Uuid                 XUUID    `xml:"uuid,attr,omitempty"`
}

type RPolicyRelationship struct {
	GeoLocationPolicyAName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyAName,omitempty"`
	GeoLocationDeviceA     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceA,omitempty"`
	GeoLocationPolicyBName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyBName,omitempty"`
	GeoLocationDeviceB     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceB,omitempty"`
	LogicalPartitionPolicy XLogicalPartitionPolicy `xml:"http://www.cisco.com/AXL/API/9.0 logicalPartitionPolicy,omitempty"`
	Uuid                   XUUID                   `xml:"uuid,attr,omitempty"`
}

type RPresenceGroup struct {
	Name           string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description    string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PresenceGroups Anon693 `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroups,omitempty"`
	Uuid           XUUID   `xml:"uuid,attr,omitempty"`
}

type RPresenceGroupMember struct {
	PresenceGroupName      XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	SubscriptionPermission XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 subscriptionPermission,omitempty"`
	Uuid                   XUUID        `xml:"uuid,attr,omitempty"`
}

type RProcessNode struct {
	Name        string      `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mac         XMacAddress `xml:"http://www.cisco.com/AXL/API/9.0 mac,omitempty"`
	Ipv6Name    string      `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Name,omitempty"`
	NodeUsage   XNodeUsage  `xml:"http://www.cisco.com/AXL/API/9.0 nodeUsage,omitempty"`
	LbmHubGroup XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup,omitempty"`
	Uuid        XUUID       `xml:"uuid,attr,omitempty"`
}

type RProcessNodeService struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	TraceLevel      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
	UserCategories  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
	Enable          Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	NumFiles        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
	MaxFileSize     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
	IsActive        Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type RRecordingProfile struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RecordingCssName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 recordingCssName,omitempty"`
	RecorderDestination string  `xml:"http://www.cisco.com/AXL/API/9.0 recorderDestination,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type RRegion struct {
	Name           string     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	RelatedRegions Anon659    `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegions,omitempty"`
	DefaultCodec   XBandwidth `xml:"http://www.cisco.com/AXL/API/9.0 defaultCodec,omitempty"`
	Uuid           XUUID      `xml:"uuid,attr,omitempty"`
}

type RRegionMatrix struct {
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	RegionAName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionAName,omitempty"`
	RegionBName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionBName,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
	Uuid            XUUID         `xml:"uuid,attr,omitempty"`
}

type RRegionRelationship struct {
	RegionName      XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
	Uuid            XUUID         `xml:"uuid,attr,omitempty"`
}

type RRemoteCluster struct {
	ClusterId          string               `xml:"http://www.cisco.com/AXL/API/9.0 clusterId,omitempty"`
	Description        string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FullyQualifiedName string               `xml:"http://www.cisco.com/AXL/API/9.0 fullyQualifiedName,omitempty"`
	Emcc               RRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 emcc,omitempty"`
	PstnAccess         RRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	RsvpAgent          RRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 rsvpAgent,omitempty"`
	Uuid               XUUID                `xml:"uuid,attr,omitempty"`
}

type RRemoteClusterMember struct {
	Enabled          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	RemoteIpAddress1 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress1,omitempty"`
	RemoteIpAddress2 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress2,omitempty"`
	RemoteIpAddress3 string  `xml:"http://www.cisco.com/AXL/API/9.0 remoteIpAddress3,omitempty"`
}

type RRemoteDestination struct {
	Name                         string    `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Destination                  string    `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	AnswerTooSoonTimer           XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
	AnswerTooLateTimer           XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
	DelayBeforeRingingCell       XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
	RemoteDestinationProfileName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfileName,omitempty"`
	DualModeDeviceName           XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dualModeDeviceName,omitempty"`
	IsMobilePhone                Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
	EnableMobileConnect          Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
	LineAssociations             Anon734   `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociations,omitempty"`
	TimeZone                     XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	TodAccessName                XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 todAccessName,omitempty"`
	MobileSmartClientName        XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientName,omitempty"`
	MobilityProfileName          XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfileName,omitempty"`
	Uuid                         XUUID     `xml:"uuid,attr,omitempty"`
}

type RRemoteDestinationProfile struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                         XModel            `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	Lines                         Anon709           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	CallInfoPrivacyStatus         XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	UserId                        string            `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	IgnorePresentationIndicators  Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	RerouteCallingSearchSpaceName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PrimaryPhoneName              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	DndOption                     XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndStatus                     Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	MobileSmartClientProfileName  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	Ctiid                         int               `xml:"ctiid,attr,omitempty"`
	Uuid                          XUUID             `xml:"uuid,attr,omitempty"`
}

type RResourcePriorityNamespace struct {
	Namespace   string  `xml:"http://www.cisco.com/AXL/API/9.0 namespace,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RResourcePriorityNamespaceList struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Members     Anon663 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RResourcePriorityNamespaceListMember struct {
	ResourcePriorityNamespaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	Index                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Uuid                          XUUID    `xml:"uuid,attr,omitempty"`
}

type RRouteFilter struct {
	Name                string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Clause              string   `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DialPlanWizardGenId XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	Members             Anon667  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid                XUUID    `xml:"uuid,attr,omitempty"`
}

type RRouteFilterMember struct {
	DialPlanTagName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName,omitempty"`
	Digits          int       `xml:"http://www.cisco.com/AXL/API/9.0 digits,omitempty"`
	Operator        XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
	Priority        XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid            XUUID     `xml:"uuid,attr,omitempty"`
}

type RRouteGroup struct {
	Name                  string               `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DialPlanWizardGenld   XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenld,omitempty"`
	DistributionAlgorithm XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	Members               Anon660              `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Uuid                  XUUID                `xml:"uuid,attr,omitempty"`
}

type RRouteGroupMember struct {
	DeviceSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 deviceSelectionOrder,omitempty"`
	DialPlanWizardGenId  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DeviceName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 deviceName,omitempty"`
	Port                 XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Uuid                 XUUID    `xml:"uuid,attr,omitempty"`
}

type RRouteList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	Members              Anon673 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	RunOnEveryNode       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type RRouteListMember struct {
	RouteGroupName                      XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeGroupName,omitempty"`
	SelectionOrder                      XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	CalledPartyTransformationMask       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask      string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	DialPlanWizardGenId                 XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DigitDiscardInstructionName         XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	CallingPartyPrefixDigits            string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	PrefixDigitsOut                     string         `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	UseFullyQualifiedCallingPartyNumber XStatus        `xml:"http://www.cisco.com/AXL/API/9.0 useFullyQualifiedCallingPartyNumber,omitempty"`
	CallingPartyNumberingPlan           XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType              XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan            XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType               XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Uuid                                XUUID          `xml:"uuid,attr,omitempty"`
}

type RRoutePartition struct {
	Name                         string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                  string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DialPlanWizardGenId          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	TimeScheduleIdName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleIdName,omitempty"`
	UseOriginatingDeviceTimeZone Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
	TimeZone                     XTimeZone       `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	PartitionUsage               XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	Uuid                         XUUID           `xml:"uuid,attr,omitempty"`
}

type RRoutePattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DialPlanWizardGenId            XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardGenId,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	NetworkLocation                XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SupportOverlapSending          Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 supportOverlapSending,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	AllowDeviceOverride            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Destination                    Anon704            `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	AuthorizationCodeRequired      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 authorizationCodeRequired,omitempty"`
	AuthorizationLevelRequired     XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
	ClientCodeRequired             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 clientCodeRequired,omitempty"`
	WithTag                        string             `xml:"http://www.cisco.com/AXL/API/9.0 withTag,omitempty"`
	WithValueClause                string             `xml:"http://www.cisco.com/AXL/API/9.0 withValueClause,omitempty"`
	IsdnNsfInfoElement             Anon705            `xml:"http://www.cisco.com/AXL/API/9.0 isdnNsfInfoElement,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	EnableDccEnforcement           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableDccEnforcement,omitempty"`
	BlockedCallPercentage          string             `xml:"http://www.cisco.com/AXL/API/9.0 blockedCallPercentage,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type RRoutePlan struct {
	DnOrPattern string        `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPattern,omitempty"`
	Partition   XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Type        XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 type,omitempty"`
	RouteDetail string        `xml:"http://www.cisco.com/AXL/API/9.0 routeDetail,omitempty"`
	Uuid        XUUID         `xml:"uuid,attr,omitempty"`
}

type RSIPNormalizationScript struct {
	Name                               string                  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                        string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Content                            string                  `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	ScriptExecutionErrorRecoveryAction XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
	SystemResourceErrorRecoveryAction  XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
	MaxMemoryThreshold                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
	MaxLuaInstructionsThreshold        string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	IsStandard                         Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 isStandard,omitempty"`
	Uuid                               XUUID                   `xml:"uuid,attr,omitempty"`
}

type RSNMPCommunityString struct {
	CommunityName   string        `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	Version         string        `xml:"http://www.cisco.com/AXL/API/9.0 version,omitempty"`
	AccessPrivilege string        `xml:"http://www.cisco.com/AXL/API/9.0 accessPrivilege,omitempty"`
	ArrayOfHosts    RArrayOfHosts `xml:"http://www.cisco.com/AXL/API/9.0 ArrayOfHosts"`
}

type RSNMPCommunityString1 struct {
	AccessPrivilege string        `xml:"http://www.cisco.com/AXL/API/9.0 accessPrivilege,omitempty"`
	ArrayOfHosts    RArrayOfHosts `xml:"http://www.cisco.com/AXL/API/9.0 ArrayOfHosts"`
}

type RSNMPGetUser struct {
	UserName        string        `xml:"http://www.cisco.com/AXL/API/9.0 userName"`
	AuthRequired    Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 authRequired"`
	AuthPassword    string        `xml:"http://www.cisco.com/AXL/API/9.0 authPassword"`
	AuthProtocol    string        `xml:"http://www.cisco.com/AXL/API/9.0 authProtocol"`
	PrivacyRequired Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 privacyRequired"`
	PrivacyPassword string        `xml:"http://www.cisco.com/AXL/API/9.0 privacyPassword"`
	PrivacyProtocol string        `xml:"http://www.cisco.com/AXL/API/9.0 privacyProtocol"`
	AccessPrivilege string        `xml:"http://www.cisco.com/AXL/API/9.0 accessPrivilege"`
	SnmpEngineID    string        `xml:"http://www.cisco.com/AXL/API/9.0 snmpEngineID"`
	ArrayOfHosts    RArrayOfHosts `xml:"http://www.cisco.com/AXL/API/9.0 ArrayOfHosts"`
}

type RSNMPMIB2List struct {
	SysLocation string `xml:"http://www.cisco.com/AXL/API/9.0 sysLocation"`
	SysContact  string `xml:"http://www.cisco.com/AXL/API/9.0 sysContact"`
}

type RSNMPUser struct {
	UserName        string        `xml:"http://www.cisco.com/AXL/API/9.0 userName"`
	AuthRequired    Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 authRequired"`
	AuthPassword    string        `xml:"http://www.cisco.com/AXL/API/9.0 authPassword"`
	AuthProtocol    string        `xml:"http://www.cisco.com/AXL/API/9.0 authProtocol"`
	PrivacyRequired Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 privacyRequired"`
	PrivacyPassword string        `xml:"http://www.cisco.com/AXL/API/9.0 privacyPassword"`
	PrivacyProtocol string        `xml:"http://www.cisco.com/AXL/API/9.0 privacyProtocol"`
	AccessPrivilege string        `xml:"http://www.cisco.com/AXL/API/9.0 accessPrivilege"`
	ArrayOfHosts    RArrayOfHosts `xml:"http://www.cisco.com/AXL/API/9.0 ArrayOfHosts"`
}

type RSafCcdPurgeBlockLearnedRoutes struct {
	LearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Uuid                 XUUID  `xml:"uuid,attr,omitempty"`
}

type RSafForwarder struct {
	Name                       string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ClientLabel                string   `xml:"http://www.cisco.com/AXL/API/9.0 clientLabel,omitempty"`
	SafSecurityProfile         XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile,omitempty"`
	IpAddress                  string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port                       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SafReconnectInterval       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
	SafNotificationsWindowSize XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	AssociatedCucms            Anon752  `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucms,omitempty"`
	Uuid                       XUUID    `xml:"uuid,attr,omitempty"`
}

type RSafForwarderMember struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Uuid            XUUID   `xml:"uuid,attr,omitempty"`
}

type RSafSecurityProfile struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Userid      string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Password    string `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Uuid        XUUID  `xml:"uuid,attr,omitempty"`
}

type RServiceParameter struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	Value           string   `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	ValueType       XParam   `xml:"http://www.cisco.com/AXL/API/9.0 valueType,omitempty"`
	Uuid            XUUID    `xml:"uuid,attr,omitempty"`
}

type RServiceProfile struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	ServiceProfileInfos Anon769 `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfos,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type RServiceProfileList struct {
	ProfileName                   string                        `xml:"http://www.cisco.com/AXL/API/9.0 profileName,omitempty"`
	Primary                       string                        `xml:"http://www.cisco.com/AXL/API/9.0 primary,omitempty"`
	Secondary                     string                        `xml:"http://www.cisco.com/AXL/API/9.0 secondary,omitempty"`
	Tertiary                      string                        `xml:"http://www.cisco.com/AXL/API/9.0 tertiary,omitempty"`
	ServerCertificateVerification XCertificateVerificationLevel `xml:"http://www.cisco.com/AXL/API/9.0 serverCertificateVerification,omitempty"`
	ServiceProfileXml             XVendorConfig                 `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileXml,omitempty"`
	Uuid                          XUUID                         `xml:"uuid,attr,omitempty"`
}

type RSipDialRules struct {
	DialPattern XDialPattern `xml:"http://www.cisco.com/AXL/API/9.0 dialPattern,omitempty"`
	Name        string       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Patterns    Anon706      `xml:"http://www.cisco.com/AXL/API/9.0 patterns,omitempty"`
	Plars       Anon707      `xml:"http://www.cisco.com/AXL/API/9.0 plars,omitempty"`
	Uuid        XUUID        `xml:"uuid,attr,omitempty"`
}

type RSipProfile struct {
	Name                                      string                     `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                               string                     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DefaultTelephonyEventPayloadType          XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
	RedirectByApplication                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
	Ringing180                                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
	TimerInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
	TimerRegisterDelta                        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
	TimerRegister                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
	TimerT1                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
	TimerT2                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
	RetryInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
	RetryNotInvite                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
	StartMediaPort                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
	StopMediaPort                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
	CallpickupUri                             string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
	CallpickupListUri                         string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
	CallpickupGroupUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
	MeetmeServiceUrl                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
	UserInfo                                  XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
	DtmfDbLevel                               XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
	CallHoldRingback                          XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
	AnonymousCallBlock                        XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
	CallerIdBlock                             XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
	DndControl                                XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
	TelnetLevel                               XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
	TimerKeepAlive                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
	TimerSubscribe                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
	TimerSubscribeDelta                       XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
	MaxRedirects                              XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
	TimerOffHookToFirstDigit                  XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
	CallForwardUri                            string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
	AbbreviatedDialUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
	ConfJointEnable                           Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
	Rfc2543Hold                               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
	SemiAttendedTransfer                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
	EnableVad                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
	StutterMsgWaiting                         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
	CallStats                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
	T38Invite                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
	RerouteIncomingRequest                    XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
	ResourcePriorityNamespaceListName         XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceListName,omitempty"`
	EnableAnatForEarlyOfferCalls              Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
	RsvpOverSip                               XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
	FallbackToLocalRsvp                       Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
	SipRe11XxEnabled                          XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
	GClear                                    XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
	EarlyOfferSupportForVoiceCall             Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	SendRecvSDPInMidCallInvite                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
	EnableOutboundOptionsPing                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
	OptionsPingIntervalWhenStatusOK           XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
	OptionsPingIntervalWhenStatusNotOK        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
	DeliverConferenceBridgeIdentifier         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 deliverConferenceBridgeIdentifier,omitempty"`
	SipOptionsRetryCount                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
	SipOptionsRetryTimer                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
	SipBandwidthModifier                      XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
	EnableUriOutdialSupport                   string                     `xml:"http://www.cisco.com/AXL/API/9.0 enableUriOutdialSupport,omitempty"`
	UserAgentServerHeaderInfo                 XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
	AllowPresentationSharingUsingBfcp         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowPresentationSharingUsingBfcp,omitempty"`
	ScriptParameters                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	IsScriptTraceEnabled                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
	SipNormalizationScript                    XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScript,omitempty"`
	AllowiXApplicationMedia                   Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowiXApplicationMedia,omitempty"`
	DialStringInterpretation                  XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
	AcceptAudioCodecPreferences               XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
	MlppUserAuthorization                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
	IsAssuredSipServiceEnabled                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
	ResourcePriorityNamespace                 XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	CallerIdDn                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerName                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallingLineIdentification                 XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
	RejectAnonymousIncomingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousIncomingCall,omitempty"`
	RejectAnonymousOutgoingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousOutgoingCall,omitempty"`
	VideoCallTrafficClass                     XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
	Uuid                                      XUUID                      `xml:"uuid,attr,omitempty"`
}

type RSipRealm struct {
	Realm             string `xml:"http://www.cisco.com/AXL/API/9.0 realm,omitempty"`
	Userid            string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	DigestCredentials string `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	Uuid              XUUID  `xml:"uuid,attr,omitempty"`
}

type RSipRoutePattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage    `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SipTrunkName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	DnOrPatternIpv6                string           `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPatternIpv6,omitempty"`
	RouteOnUserPart                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 routeOnUserPart,omitempty"`
	UseCallerCss                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useCallerCss,omitempty"`
	DomainRoutingCssName           XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 domainRoutingCssName,omitempty"`
	Uuid                           XUUID            `xml:"uuid,attr,omitempty"`
}

type RSipTrunk struct {
	Name                                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                               string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                   XProduct                 `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                                     XModel                   `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                     XClass                   `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                                  XDeviceProtocol          `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                              XProtocolSide            `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                           XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                              XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId               XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId                  XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	PacketCaptureMode                         XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                     XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	LoadInformation                           XLoadInformation         `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VersionStamp                              string                   `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                                 Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                              string                   `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                     Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                           Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	UnattendedPort                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	TransmitUtf8                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SubscribeCallingSearchSpaceName           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	ReferCallingSearchSpaceName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 referCallingSearchSpaceName,omitempty"`
	MtpRequired                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	PresenceGroupName                         XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnknownPrefix                             string                   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	DestinationAddress                        string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	DestAddrIsSrv                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 destAddrIsSrv,omitempty"`
	Destinationport                           XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 destinationport,omitempty"`
	TkSipCodec                                XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
	SigDigits                                 Anon750                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	ConnectedNamePresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
	ConnectedPartyIdPresentation              XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
	CallingPartySelection                     XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	Callingname                               XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
	CallingLineIdPresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	PrefixDn                                  string                   `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CallerName                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerIdDn                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	AcceptInboundRdnis                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptInboundRdnis,omitempty"`
	AcceptOutboundRdnis                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutboundRdnis,omitempty"`
	SrtpAllowed                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	SrtpFallbackAllowed                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
	IsPaiEnabled                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
	SipPrivacy                                XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
	IsRpidEnabled                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
	SipAssertedType                           XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
	DestinationAddressIpv6                    string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddressIpv6,omitempty"`
	DtmfSignalingMethod                       XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
	RouteClassSignalling                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	SipTrunkType                              XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
	PstnAccess                                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseImePublicIpPort                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
	UseDevicePoolCntdPnTransformationCss      Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
	CntdPnTransformationCssName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	SipNormalizationScriptName                XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScriptName,omitempty"`
	RunOnEveryNode                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Destinations                              Anon751                  `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	UnknownStripDigits                        int                      `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	CgpnTransformationUnknownCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationUnknownCssName,omitempty"`
	TunneledProtocol                          XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                       XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                               XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	PathReplacementSupport                    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	EnableQsigUtf8                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
	ScriptParameters                          string                   `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	ScriptTraceEnabled                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
	TrunkTrafficSecure                        XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
	CallingAndCalledPartyInfoFormat           XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	RequestUriDomainName                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 requestUriDomainName,omitempty"`
	Ctiid                                     int                      `xml:"ctiid,attr,omitempty"`
	Uuid                                      XUUID                    `xml:"uuid,attr,omitempty"`
}

type RSipTrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	AddressIpv6 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv6,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder,omitempty"`
	Uuid        XUUID    `xml:"uuid,attr,omitempty"`
}

type RSipTrunkSecurityProfile struct {
	Name                             string              `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode                     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	IncomingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
	OutgoingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 outgoingTransport,omitempty"`
	DigestAuthentication             Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
	NoncePolicyTime                  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
	X509SubjectName                  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	IncomingPort                     XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
	ApplLevelAuthentication          Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
	AcceptPresenceSubscription       Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification    Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader               Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	TransmitSecurityStatus           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
	SipV150OutboundSdpOfferFiltering XV150SDPFilter      `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
	Uuid                             XUUID               `xml:"uuid,attr,omitempty"`
}

type RSoftKeyMember struct {
	PositionId  int    `xml:"http://www.cisco.com/AXL/API/9.0 positionId,omitempty"`
	SoftKeyName string `xml:"http://www.cisco.com/AXL/API/9.0 softKeyName,omitempty"`
}

type RSoftKeySet struct {
	SoftKeyTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplateName,omitempty"`
	CallStates          Anon834 `xml:"http://www.cisco.com/AXL/API/9.0 callStates,omitempty"`
	Uuid                XUUID   `xml:"uuid,attr,omitempty"`
}

type RSoftKeyTemplate struct {
	Name                    string       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description             string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	BaseSoftkeyTemplateName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 baseSoftkeyTemplateName,omitempty"`
	IsDefault               Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Applications            Applications `xml:"http://www.cisco.com/AXL/API/9.0 applications,omitempty"`
	Uuid                    XUUID        `xml:"uuid,attr,omitempty"`
}

type RSpeeddial struct {
	Dirn       string   `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Label      string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel string   `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Index      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
}

type RSrst struct {
	Name                string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Port                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	IpAddress           string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	SipNetwork          string   `xml:"http://www.cisco.com/AXL/API/9.0 SipNetwork,omitempty"`
	SipPort             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	SrstCertificatePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 srstCertificatePort,omitempty"`
	IsSecure            Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isSecure,omitempty"`
	Uuid                XUUID    `xml:"uuid,attr,omitempty"`
}

type RSubscribedService struct {
	TelecasterServiceName XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 telecasterServiceName,omitempty"`
	Name                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Url                   string                `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	UrlButtonIndex        XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 urlButtonIndex,omitempty"`
	UrlLabel              string                `xml:"http://www.cisco.com/AXL/API/9.0 urlLabel,omitempty"`
	UrlLabelAscii         string                `xml:"http://www.cisco.com/AXL/API/9.0 urlLabelAscii,omitempty"`
	ServiceNameAscii      string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceNameAscii,omitempty"`
	PhoneService          XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 phoneService,omitempty"`
	PhoneServiceCategory  XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceCategory,omitempty"`
	Vendor                string                `xml:"http://www.cisco.com/AXL/API/9.0 vendor,omitempty"`
	Version               string                `xml:"http://www.cisco.com/AXL/API/9.0 version,omitempty"`
	Priority              int                   `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid                  XUUID                 `xml:"uuid,attr,omitempty"`
}

type RSyslogConfig struct {
	AlarmLevelEvent   XAlarmSeverity `xml:"http://www.cisco.com/AXL/API/9.0 AlarmLevelEvent,omitempty"`
	RemoteServerName1 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName1,omitempty"`
	RemoteServerName2 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName2,omitempty"`
	RemoteServerName3 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName3,omitempty"`
	RemoteServerName4 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName4,omitempty"`
	RemoteServerName5 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName5,omitempty"`
	Monitor           string         `xml:"http://www.cisco.com/AXL/API/9.0 monitor,omitempty"`
	Enable            Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 Enable,omitempty"`
}

type RSyslogConfiguration struct {
	ServerName    string           `xml:"http://www.cisco.com/AXL/API/9.0 serverName,omitempty"`
	ServiceGroup  XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	Service       string           `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
	AlarmConfigs  AlarmConfigs     `xml:"http://www.cisco.com/AXL/API/9.0 alarmConfigs"`
	EndPointAlarm Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 EndPointAlarm,omitempty"`
}

type RT1Port struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon777                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CallerId                    XCallerID                    `xml:"http://www.cisco.com/AXL/API/9.0 callerId,omitempty"`
	EndpointId                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 endpointId,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type RTODAccessMember struct {
	TimeScheduleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleName,omitempty"`
	AccessListName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 accessListName,omitempty"`
	Uuid             XUUID   `xml:"uuid,attr,omitempty"`
}

type RTimePeriod struct {
	Name           string       `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	StartTime      XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
	EndTime        XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
	StartDay       XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
	EndDay         XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
	MonthOfYear    XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
	DayOfMonth     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
	Description    string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished    Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TodOwnerIdName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
	DayOfMonthEnd  XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
	MonthOfYearEnd XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
	Uuid           XUUID        `xml:"uuid,attr,omitempty"`
}

type RTimeSchedule struct {
	Name                 string                `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Members              Anon649               `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Description          string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TimeScheduleCategory XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	TodOwnerIdName       XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
	Uuid                 XUUID                 `xml:"uuid,attr,omitempty"`
}

type RTimeScheduleTimePeriod struct {
	TimePeriodName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timePeriodName,omitempty"`
	Uuid           XUUID   `xml:"uuid,attr,omitempty"`
}

type RTodAccess struct {
	Name                        string                      `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                 string                      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	OwnerIdName                 XFkType                     `xml:"http://www.cisco.com/AXL/API/9.0 ownerIdName,omitempty"`
	Members                     Anon650                     `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	AssociatedRemoteDestination AssociatedRemoteDestination `xml:"http://www.cisco.com/AXL/API/9.0 associatedRemoteDestination,omitempty"`
	Uuid                        XUUID                       `xml:"uuid,attr,omitempty"`
}

type RTransPattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	CallingSearchSpaceName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteNextHopByCgpn             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	CallInterceptProfileName       XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callInterceptProfileName,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	Uuid                           XUUID              `xml:"uuid,attr,omitempty"`
}

type RTranscoder struct {
	Name                   string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description            string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	SubUnit                XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	DevicePoolName         XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LoadInformation        XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig           XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	IsTrustedRelayPoint    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	MaximumCapacity        XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	Uuid                   XUUID            `xml:"uuid,attr,omitempty"`
}

type RTransformationProfile struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description              string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalStripDigits      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalPrefix           string   `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix      string   `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix            string   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix         string   `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalCssName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 nationalCssName,omitempty"`
	InternationalCssName     XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 internationalCssName,omitempty"`
	UnknownCssName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 unknownCssName,omitempty"`
	SubscriberCssName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 subscriberCssName,omitempty"`
	Uuid                     XUUID    `xml:"uuid,attr,omitempty"`
}

type RTvsCertificate struct {
	SubjectName  string  `xml:"http://www.cisco.com/AXL/API/9.0 subjectName,omitempty"`
	IssuerName   string  `xml:"http://www.cisco.com/AXL/API/9.0 issuerName,omitempty"`
	SerialNumber string  `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber,omitempty"`
	TimeToLive   int     `xml:"http://www.cisco.com/AXL/API/9.0 timeToLive,omitempty"`
	Ipv4Address  string  `xml:"http://www.cisco.com/AXL/API/9.0 ipv4Address,omitempty"`
	Ipv6Address  string  `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Address,omitempty"`
	Roles        Anon766 `xml:"http://www.cisco.com/AXL/API/9.0 roles,omitempty"`
	Services     Anon767 `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	Uuid         XUUID   `xml:"uuid,attr,omitempty"`
}

type RTvsCertificateService struct {
	ServiceName XCertificateService `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
	Uuid        XUUID               `xml:"uuid,attr,omitempty"`
}

type RUcService struct {
	ServiceType  XUCService       `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ProductType  XUCProduct       `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description  string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Hostnameorip string           `xml:"http://www.cisco.com/AXL/API/9.0 hostnameorip,omitempty"`
	Port         XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Protocol     XConnectProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	UcServiceXml XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 ucServiceXml,omitempty"`
	Uuid         XUUID            `xml:"uuid,attr,omitempty"`
}

type RUnitsToGateway struct {
	DomainName  string  `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	GatewayUuid XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid,omitempty"`
	Units       Anon754 `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RUser struct {
	FirstName                             string                              `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	MiddleName                            string                              `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	LastName                              string                              `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	Userid                                string                              `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Password                              string                              `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                                   string                              `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	TelephoneNumber                       string                              `xml:"http://www.cisco.com/AXL/API/9.0 telephoneNumber,omitempty"`
	Mailid                                string                              `xml:"http://www.cisco.com/AXL/API/9.0 mailid,omitempty"`
	Department                            string                              `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
	Manager                               string                              `xml:"http://www.cisco.com/AXL/API/9.0 manager,omitempty"`
	UserLocale                            XUserLocale                         `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	AssociatedDevices                     Anon674                             `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	PrimaryExtension                      Anon675                             `xml:"http://www.cisco.com/AXL/API/9.0 primaryExtension,omitempty"`
	AssociatedPc                          string                              `xml:"http://www.cisco.com/AXL/API/9.0 associatedPc,omitempty"`
	AssociatedGroups                      Anon676                             `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	EnableCti                             Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
	DigestCredentials                     string                              `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PhoneProfiles                         Anon679                             `xml:"http://www.cisco.com/AXL/API/9.0 phoneProfiles,omitempty"`
	DefaultProfile                        XFkType                             `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfile,omitempty"`
	PresenceGroupName                     XFkType                             `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	SubscribeCallingSearchSpaceName       XFkType                             `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	EnableMobility                        Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
	EnableMobileVoiceAccess               Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
	MaxDeskPickupWaitTime                 XInteger                            `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
	RemoteDestinationLimit                XInteger                            `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
	AssociatedRemoteDestinationProfiles   AssociatedRemoteDestinationProfiles `xml:"http://www.cisco.com/AXL/API/9.0 associatedRemoteDestinationProfiles,omitempty"`
	PasswordCredentials                   Anon680                             `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	PinCredentials                        Anon681                             `xml:"http://www.cisco.com/AXL/API/9.0 pinCredentials,omitempty"`
	PrimaryDevice                         XFkType                             `xml:"http://www.cisco.com/AXL/API/9.0 primaryDevice,omitempty"`
	AssociatedTodAccess                   AssociatedTodAccess                 `xml:"http://www.cisco.com/AXL/API/9.0 associatedTodAccess,omitempty"`
	Status                                XInteger                            `xml:"http://www.cisco.com/AXL/API/9.0 status,omitempty"`
	EnableEmcc                            Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 enableEmcc,omitempty"`
	AssociatedCapfProfiles                AssociatedCapfProfiles              `xml:"http://www.cisco.com/AXL/API/9.0 associatedCapfProfiles,omitempty"`
	CtiControlledDeviceProfiles           Anon682                             `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
	PatternPrecedence                     XPatternPrecedence                  `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	NumericUserId                         string                              `xml:"http://www.cisco.com/AXL/API/9.0 numericUserId,omitempty"`
	MlppPassword                          string                              `xml:"http://www.cisco.com/AXL/API/9.0 mlppPassword,omitempty"`
	CustomUserFields                      Anon683                             `xml:"http://www.cisco.com/AXL/API/9.0 customUserFields,omitempty"`
	HomeCluster                           Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	ImAndPresenceEnable                   Boolean                             `xml:"http://www.cisco.com/AXL/API/9.0 imAndPresenceEnable,omitempty"`
	ServiceProfile                        XFkType                             `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile,omitempty"`
	LineAppearanceAssociationForPresences Anon684                             `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresences,omitempty"`
	DirectoryUri                          string                              `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
	Uuid                                  XUUID                               `xml:"uuid,attr,omitempty"`
}

type RUserCustomUserField struct {
	Name  string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Value string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
}

type RUserGroup struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Members   Anon669 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	UserRoles Anon670 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
	Uuid      XUUID   `xml:"uuid,attr,omitempty"`
}

type RUserGroupMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Uuid   XUUID  `xml:"uuid,attr,omitempty"`
}

type RUserGroupRoles struct {
	RoleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 roleName,omitempty"`
	Uuid     XUUID   `xml:"uuid,attr,omitempty"`
}

type RUserPhoneAssociation struct {
	UserId                      string   `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Password                    string   `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	LastName                    string   `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	MiddleName                  string   `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	FirstName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	ProductType                 XModel   `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name                        string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	DnCssName                   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dnCssName,omitempty"`
	PhoneCssName                XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneCssName,omitempty"`
	E164Mask                    string   `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	Extension                   string   `xml:"http://www.cisco.com/AXL/API/9.0 extension,omitempty"`
	RoutePartitionName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	VoiceMailProfileName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	EnableExtensionMobility     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	DirectoryURI                string   `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryURI,omitempty"`
	DirectoryNumberURIPartition XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryNumberURIPartition,omitempty"`
	Uuid                        XUUID    `xml:"uuid,attr,omitempty"`
}

type RVg224 struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Units                Anon739         `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	VendorConfig         XVendorConfig   `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp         string          `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	Uuid                 XUUID           `xml:"uuid,attr,omitempty"`
}

type RVmPilot struct {
	Dirn    string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	Uuid    XUUID   `xml:"uuid,attr,omitempty"`
}

type RVoiceMailPilot struct {
	Dirn        string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CssName     XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RVoiceMailPort struct {
	Name                             string          `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description                      string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Model                            XModel          `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                            XClass          `xml:"http://www.cisco.com/AXL/API/9.0 class,omitempty"`
	Protocol                         XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                     XProtocolSide   `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	Preemption                       XPreemption     `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName              XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	GeoLocationName                  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	DnPattern                        string          `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartition                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	DnCallingSearchSpace             XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dnCallingSearchSpace,omitempty"`
	AarNeighborhoodName              XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	CallerIdDisplay                  string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplay,omitempty"`
	CallerIdDisplayAscii             string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplayAscii,omitempty"`
	ExternalMask                     string          `xml:"http://www.cisco.com/AXL/API/9.0 externalMask,omitempty"`
	Ctiid                            int             `xml:"ctiid,attr,omitempty"`
	Uuid                             XUUID           `xml:"uuid,attr,omitempty"`
}

type RVoiceMailProfile struct {
	Name             string   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description      string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault        Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	VoiceMailboxMask string   `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailboxMask,omitempty"`
	VoiceMailPilot   RVmPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot,omitempty"`
	Uuid             XUUID    `xml:"uuid,attr,omitempty"`
}

type RVpnGateway struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Url          string  `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	Certificates Anon762 `xml:"http://www.cisco.com/AXL/API/9.0 certificates,omitempty"`
	Uuid         XUUID   `xml:"uuid,attr,omitempty"`
}

type RVpnGatewayMember struct {
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName,omitempty"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber,omitempty"`
	Uuid         XUUID  `xml:"uuid,attr,omitempty"`
}

type RVpnGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	VpnGateways Anon763 `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateways,omitempty"`
	Uuid        XUUID   `xml:"uuid,attr,omitempty"`
}

type RVpnGroupMember struct {
	VpnGatewayName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 vpnGatewayName,omitempty"`
	Priority       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Uuid           XUUID    `xml:"uuid,attr,omitempty"`
}

type RVpnProfile struct {
	Name                 string                   `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description          string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoNetworkDetection Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 autoNetworkDetection,omitempty"`
	Mtu                  XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
	FailToConnect        XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
	ClientAuthentication XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	PwdPersistant        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pwdPersistant,omitempty"`
	EnableHostIdCheck    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableHostIdCheck,omitempty"`
	Uuid                 XUUID                    `xml:"uuid,attr,omitempty"`
}

type RelatedGroups struct {
	RelatedGroup []RAarGroupRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedGroup,omitempty"`
}

type RelatedLocations struct {
	RelatedLocation []XLocationRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocation"`
}

type RelatedPolicies struct {
	RelatedPolicy []XPolicyRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicy"`
}

type RelatedRegions struct {
	RelatedRegion []XRegionRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegion"`
}

type RemoteServerinfo struct {
	Server1 string `xml:"http://www.cisco.com/AXL/API/9.0 server1,omitempty"`
	Server2 string `xml:"http://www.cisco.com/AXL/API/9.0 server2,omitempty"`
	Server3 string `xml:"http://www.cisco.com/AXL/API/9.0 server3,omitempty"`
}

type RemoveAppServerInfoReq struct {
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveAppUserReq struct {
	Userid   string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveAppUsers struct {
	SelectedAppUser []Anon1139 `xml:"http://www.cisco.com/AXL/API/9.0 selectedAppUser"`
}

type RemoveApplicationServerReq struct {
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveApplicationToSoftkeyTemplateReq struct {
	SoftKeyTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplateName"`
	ApplicationName     string  `xml:"http://www.cisco.com/AXL/API/9.0 applicationName"`
	Sequence            uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveApplicationUserCapfProfileReq struct {
	InstanceId string `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	Uuid       XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveAssociatedCucms struct {
	AssociatedCucm []XSafForwarderMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucm"`
}

type RemoveAssociatedTrunks struct {
	AssociatedTrunk []XCcdRequestingServiceMember `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunk"`
}

type RemoveBillingServerReq struct {
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveCallParkReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveCallPickupGroupReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Name               string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveCallStates struct {
	CallState []XCallStateMember `xml:"http://www.cisco.com/AXL/API/9.0 callState"`
}

type RemoveCalledPartyTracingReq struct {
	Uuid            XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Directorynumber string `xml:"http://www.cisco.com/AXL/API/9.0 directorynumber"`
	Sequence        uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveCalledPartyTransformationPatternReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveCallingPartyTransformationPatternReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveCcdHostedDNReq struct {
	HostedPattern string `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern"`
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveCcmExternalIpMaps struct {
	CcmExternalIpMap []XCcmExternalIpMap `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMap,omitempty"`
}

type RemoveCmcInfoReq struct {
	Code     string `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveCustomUserFieldReq struct {
	Field    string `xml:"http://www.cisco.com/AXL/API/9.0 field"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveDestinations struct {
	Destination []XH323TrunkDestination `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type RemoveDhcpServerReq struct {
	ProcessNodeName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Uuid            XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence        uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveDhcpSubnetReq struct {
	Uuid            XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DhcpServerName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName"`
	SubnetIpAddress string  `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress"`
	Sequence        uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveDirectedCallParkReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveEndUserCapfProfileReq struct {
	InstanceId string `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	Uuid       XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveEndUsers struct {
	SelectedEndUser []Anon1141 `xml:"http://www.cisco.com/AXL/API/9.0 selectedEndUser"`
}

type RemoveEnterpriseFeatureAccessConfigurationReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveGatewayReq struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid       XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveGatewaySubunitsReq struct {
	GatewayUuid XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	DomainName  string  `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Unit        int     `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
	Subunits    Anon825 `xml:"http://www.cisco.com/AXL/API/9.0 subunits"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveHandoffConfigurationReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveHuntPilotReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveImeEnrolledPatternReq struct {
	Pattern  string `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveImeExclusionNumberReq struct {
	Pattern  string `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveImeLearnedRoutesReq struct {
	Uuid    XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	E164Did string `xml:"http://www.cisco.com/AXL/API/9.0 e164Did"`
}

type RemoveIpPhoneServicesReq struct {
	ServiceName string `xml:"http://www.cisco.com/AXL/API/9.0 serviceName"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveIvrUserLocaleReq struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale"`
	Uuid       XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64      `xml:"sequence,attr,omitempty"`
}

type RemoveLdapSyncCustomFieldReq struct {
	Uuid                  XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName"`
	CustomUserField       string `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
	Sequence              uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveLineReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveLocales struct {
	Locale []XMobileVoiceMember `xml:"http://www.cisco.com/AXL/API/9.0 locale"`
}

type RemoveMeetMeReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveMembers struct {
	Member []XTimeScheduleTimePeriod `xml:"http://www.cisco.com/AXL/API/9.0 member"`
}

type RemoveMessageWaitingReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveMlppDomainReq struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid       XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveMobileVoiceAccessReq struct {
	Pattern  string `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveMohAudioSourceReq struct {
	SourceId XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	Uuid     XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64            `xml:"sequence,attr,omitempty"`
}

type RemoveParameters struct {
	Parameter []XIpPhoneServicesParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter"`
}

type RemovePatterns struct {
	Pattern []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
}

type RemovePhoneNtpReferences struct {
	SelectedPhoneNtpReference []XDateTimeGroupNtpReference `xml:"http://www.cisco.com/AXL/API/9.0 selectedPhoneNtpReference"`
}

type RemovePhoneNtpReq struct {
	IpAddress string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Uuid      XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence  uint64 `xml:"sequence,attr,omitempty"`
}

type RemovePlars struct {
	Plar []XPatternMember `xml:"http://www.cisco.com/AXL/API/9.0 plar"`
}

type RemoveRelatedPolicies struct {
	RelatedPolicy []XPolicyRelationship `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicy"`
}

type RemoveRemoteClusterReq struct {
	ClusterId string `xml:"http://www.cisco.com/AXL/API/9.0 clusterId"`
	Uuid      XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence  uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveRemoteDestinationReq struct {
	Destination string `xml:"http://www.cisco.com/AXL/API/9.0 destination"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveResourcePriorityNamespaceReq struct {
	Namespace string `xml:"http://www.cisco.com/AXL/API/9.0 namespace"`
	Uuid      XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence  uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveRoutePatternReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveSNMPCommunityStringReq struct {
	CommunityString string `xml:"http://www.cisco.com/AXL/API/9.0 CommunityString"`
	Sequence        uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSNMPCommunityStringRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSNMPUserReq struct {
	User     string `xml:"http://www.cisco.com/AXL/API/9.0 User"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSNMPUserRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSafCcdPurgeBlockLearnedRoutesReq struct {
	Uuid                 XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Sequence             uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSipRealmReq struct {
	Realm    string `xml:"http://www.cisco.com/AXL/API/9.0 realm"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveSipRoutePatternReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveTransPatternReq struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveUnitsToGatewayReq struct {
	GatewayUuid XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	DomainName  string  `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Units       Anon823 `xml:"http://www.cisco.com/AXL/API/9.0 units"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type RemoveUserReq struct {
	Userid   string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveUserRoles struct {
	UserRole []XUserGroupRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type RemoveVg224Req struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Uuid       XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Sequence   uint64 `xml:"sequence,attr,omitempty"`
}

type RemoveVoiceMailPilotReq struct {
	Uuid     XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Dirn     string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

// Must match the pattern (true)|(false)|(\{........-....-....-....-............\})
type Return string

type Roles struct {
	Role []XCertificateRole `xml:"http://www.cisco.com/AXL/API/9.0 role"`
}

type SearchCriteria struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type SelectedAppUser struct {
	AppUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 appUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type SelectedEndUser struct {
	EndUserName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 endUserName"`
	Content     XContent `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type Server struct {
	HostName       string   `xml:"http://www.cisco.com/AXL/API/9.0 hostName"`
	LdapPortNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ldapPortNumber"`
	SslEnabled     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 sslEnabled,omitempty"`
}

type Servers struct {
	Server []Server `xml:"http://www.cisco.com/AXL/API/9.0 server"`
}

type ServiceProfileInfos struct {
	ServiceProfileInfo []XServiceProfileList `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfo,omitempty"`
}

type Services struct {
	Service []XSubscribedService `xml:"http://www.cisco.com/AXL/API/9.0 service,omitempty"`
}

type SigDigits struct {
	XInteger XInteger `xml:",chardata"`
	Enable   bool     `xml:"enable,attr,omitempty"`
}

type SipPorts struct {
	SipPhonePort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	SipPhoneSecurePort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhoneSecurePort,omitempty"`
}

func (t *SipPorts) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T SipPorts
	var overlay struct {
		*T
		SipPhonePort       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
		SipPhoneSecurePort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sipPhoneSecurePort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SipPhonePort = (*XInteger)(&overlay.T.SipPhonePort)
	overlay.SipPhoneSecurePort = (*XInteger)(&overlay.T.SipPhoneSecurePort)
	return d.DecodeElement(&overlay, &start)
}

type SoftKeys struct {
	SoftKey []XSoftKeyMember `xml:"http://www.cisco.com/AXL/API/9.0 softKey,omitempty"`
}

type SoftwareLicenseVersion struct {
	SwVersion string  `xml:"http://www.cisco.com/AXL/API/9.0 swVersion,omitempty"`
	Status    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 status,omitempty"`
}

type Speeddials struct {
	Speeddial []XSpeeddial `xml:"http://www.cisco.com/AXL/API/9.0 speeddial,omitempty"`
}

// Returns either the GUID of the object that was altered, or returns true if the operation was successful.  Whichever is appropriate for the corresponding request.
type StandardResponse struct {
	Return   Return `xml:"http://www.cisco.com/AXL/API/9.0 return"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type Subunit struct {
	Index     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product   XMGCPVic `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	BeginPort XInteger `xml:"http://www.cisco.com/AXL/API/9.0 beginPort,omitempty"`
}

type Subunits struct {
	Subunit []Subunit `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
}

type UAnalogPort struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon785                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Lines                       Anon786                      `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	SmdiPortNumber              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 smdiPortNumber,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type UDirn struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type UEnduserMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
}

type UGatewayEndpointAnalog struct {
	Index                                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Description                              string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Port                                     UAnalogPort          `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	TrunkSelectionOrder                      XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	TransmitUtf8                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode   `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	ImeE164DirectoryNumber                   string               `xml:"http://www.cisco.com/AXL/API/9.0 imeE164DirectoryNumber,omitempty"`
	Ctiid                                    int                  `xml:"ctiid,attr,omitempty"`
	Uuid                                     XUUID                `xml:"uuid,attr,omitempty"`
}

type UGatewayEndpointDigitalBri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	BriProtocol                        XBriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 briProtocol,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	PresentationBit                    XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon788                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type UGatewayEndpointDigitalPri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIE                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIE,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIe                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIe,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon787                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	RouteClassSignalling               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
	Uuid                               XUUID                  `xml:"uuid,attr,omitempty"`
}

type UGatewayEndpointDigitalT1 struct {
	Index                            XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	V150                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Ports                            Anon790              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	EncodeOutboundVoiceRouteClass    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 encodeOutboundVoiceRouteClass,omitempty"`
	RouteClassSignalling             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Ctiid                            int                  `xml:"ctiid,attr,omitempty"`
	Uuid                             XUUID                `xml:"uuid,attr,omitempty"`
}

type UNumplanIdentifier struct {
	DirectoryNumber    string `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type UPhoneLine struct {
	Index                        XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Label                        string         `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel                   string         `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display                      string         `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                         UDirn          `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	RingSetting                  XRingSetting   `xml:"http://www.cisco.com/AXL/API/9.0 ringSetting,omitempty"`
	ConsecutiveRingSetting       XRingSetting   `xml:"http://www.cisco.com/AXL/API/9.0 consecutiveRingSetting,omitempty"`
	RingSettingIdlePickupAlert   XRingSetting   `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdlePickupAlert,omitempty"`
	RingSettingActivePickupAlert XRingSetting   `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingActivePickupAlert,omitempty"`
	DisplayAscii                 string         `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask                     string         `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	DialPlanWizardId             XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanWizardId,omitempty"`
	MwlPolicy                    XMWLPolicy     `xml:"http://www.cisco.com/AXL/API/9.0 mwlPolicy,omitempty"`
	MaxNumCalls                  XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger                  XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay              Anon783        `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName         XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag                XRecordingFlag `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi                   XStatus        `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial                    string         `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	AssociatedEndusers           Anon784        `xml:"http://www.cisco.com/AXL/API/9.0 associatedEndusers,omitempty"`
	MissedCallLogging            Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 missedCallLogging,omitempty"`
	Uuid                         XUUID          `xml:"uuid,attr,omitempty"`
	Ctiid                        int            `xml:"ctiid,attr,omitempty"`
}

type UT1Port struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber,omitempty"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable,omitempty"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits,omitempty"`
	SigDigits                   Anon789                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection,omitempty"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CallerId                    XCallerID                    `xml:"http://www.cisco.com/AXL/API/9.0 callerId,omitempty"`
	EndpointId                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 endpointId,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
	Uuid                        XUUID                        `xml:"uuid,attr,omitempty"`
}

type Unit struct {
	Index    XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Product  XMGCPSlotModule `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Subunits Subunits        `xml:"http://www.cisco.com/AXL/API/9.0 subunits,omitempty"`
}

func (t *Unit) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T Unit
	var overlay struct {
		*T
		Index *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	return d.DecodeElement(&overlay, &start)
}

type Units struct {
	Unit []Unit `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
}

type UpdateAarGroupMatrixReq struct {
	Uuid             XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName"`
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	Sequence         uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateAarGroupReq struct {
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName  string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateAnnouncementReq struct {
	Name             string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid             XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName          string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description      string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AnnouncementFile string `xml:"http://www.cisco.com/AXL/API/9.0 announcementFile,omitempty"`
	Sequence         uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateAnnunciatorReq struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	UseTrustedRelayPoint XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	Sequence             uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateAnnunciatorReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateAnnunciatorReq
	var overlay struct {
		*T
		UseTrustedRelayPoint *XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type UpdateAppServerInfoReq struct {
	Uuid             XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	AppServerName    XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 appServerName,omitempty"`
	AppServerContent XAppServerContent `xml:"http://www.cisco.com/AXL/API/9.0 appServerContent,omitempty"`
	Content          XContent          `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	Sequence         uint64            `xml:"sequence,attr,omitempty"`
}

type UpdateAppUserReq struct {
	Uuid                          XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Userid                        string  `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	NewUserid                     string  `xml:"http://www.cisco.com/AXL/API/9.0 newUserid,omitempty"`
	Password                      string  `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	PasswordCredentials           Anon232 `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	DigestCredentials             string  `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PresenceGroupName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	AcceptPresenceSubscription    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	AssociatedDevices             Anon233 `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	AssociatedGroups              Anon234 `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	CtiControlledDeviceProfiles   Anon237 `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
	Sequence                      uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateAppUserReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateAppUserReq
	var overlay struct {
		*T
		AcceptPresenceSubscription    *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
		AcceptOutOfDialogRefer        *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
		AcceptUnsolicitedNotification *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
		AllowReplaceHeader            *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AcceptPresenceSubscription = (*Boolean)(&overlay.T.AcceptPresenceSubscription)
	overlay.AcceptOutOfDialogRefer = (*Boolean)(&overlay.T.AcceptOutOfDialogRefer)
	overlay.AcceptUnsolicitedNotification = (*Boolean)(&overlay.T.AcceptUnsolicitedNotification)
	overlay.AllowReplaceHeader = (*Boolean)(&overlay.T.AllowReplaceHeader)
	return d.DecodeElement(&overlay, &start)
}

type UpdateApplicationDialRulesReq struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid              XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName           string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Sequence          uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateApplicationDialRulesReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateApplicationDialRulesReq
	var overlay struct {
		*T
		NumberOfDigits    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
		DigitsToBeRemoved *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
		Priority          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NumberOfDigits = (*XInteger)(&overlay.T.NumberOfDigits)
	overlay.DigitsToBeRemoved = (*XInteger)(&overlay.T.DigitsToBeRemoved)
	overlay.Priority = (*XInteger)(&overlay.T.Priority)
	return d.DecodeElement(&overlay, &start)
}

type UpdateApplicationServerReq struct {
	Uuid            XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName         string         `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	IpAddress       string         `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	RemoveAppUsers  RemoveAppUsers `xml:"http://www.cisco.com/AXL/API/9.0 removeAppUsers,omitempty"`
	AddAppUsers     AddAppUsers    `xml:"http://www.cisco.com/AXL/API/9.0 addAppUsers,omitempty"`
	AppUsers        Anon267        `xml:"http://www.cisco.com/AXL/API/9.0 appUsers,omitempty"`
	Url             string         `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	EndUserUrl      string         `xml:"http://www.cisco.com/AXL/API/9.0 endUserUrl,omitempty"`
	ProcessNodeName XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	RemoveEndUsers  RemoveEndUsers `xml:"http://www.cisco.com/AXL/API/9.0 removeEndUsers,omitempty"`
	AddEndUsers     AddEndUsers    `xml:"http://www.cisco.com/AXL/API/9.0 addEndUsers,omitempty"`
	EndUsers        Anon269        `xml:"http://www.cisco.com/AXL/API/9.0 endUsers,omitempty"`
	Sequence        uint64         `xml:"sequence,attr,omitempty"`
}

type UpdateApplicationUserCapfProfileReq struct {
	Uuid                 XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	InstanceId           string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	CertificateOperation XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode   XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize              XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion  string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateApplicationUserCapfProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateApplicationUserCapfProfileReq
	var overlay struct {
		*T
		CertificateOperation *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
		AuthenticationMode   *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize              *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CertificateOperation = (*XCertificateOperation)(&overlay.T.CertificateOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	return d.DecodeElement(&overlay, &start)
}

type UpdateAudioCodecPreferenceListReq struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName      string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CodecsInList Anon611 `xml:"http://www.cisco.com/AXL/API/9.0 codecsInList,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateBillingServerReq struct {
	Uuid                  XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	UserId                string                 `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	Password              string                 `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	ResendOnFailure       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
	BillingServerProtocol XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
	Sequence              uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateBillingServerReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateBillingServerReq
	var overlay struct {
		*T
		ResendOnFailure       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
		BillingServerProtocol *XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ResendOnFailure = (*Boolean)(&overlay.T.ResendOnFailure)
	overlay.BillingServerProtocol = (*XBillingserverprotocol)(&overlay.T.BillingServerProtocol)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCallManagerGroupReq struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	TftpDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 tftpDefault,omitempty"`
	RemoveMembers Anon152 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon153 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon154 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateCallManagerReq struct {
	Name             string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid             XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName          string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description      string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoRegistration Anon40  `xml:"http://www.cisco.com/AXL/API/9.0 autoRegistration,omitempty"`
	Ports            Anon41  `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	LbmGroup         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup,omitempty"`
	Sequence         uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateCallParkReq struct {
	Uuid                  XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern               string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	CallManagerName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	Sequence              uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateCallPickupGroupReq struct {
	Uuid                          XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Name                          string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Pattern                       string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName            XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern                    string              `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                   string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName         XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	NewName                       string              `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RemoveMembers                 Anon454             `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers                    Anon455             `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members                       Anon456             `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	PickupNotification            XPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
	PickupNotificationTimer       XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	CallInfoForPickupNotification Anon457             `xml:"http://www.cisco.com/AXL/API/9.0 callInfoForPickupNotification,omitempty"`
	Sequence                      uint64              `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCallPickupGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCallPickupGroupReq
	var overlay struct {
		*T
		PickupNotification      *XPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
		PickupNotificationTimer *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PickupNotification = (*XPickupNotification)(&overlay.T.PickupNotification)
	overlay.PickupNotificationTimer = (*XInteger)(&overlay.T.PickupNotificationTimer)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCalledPartyTransformationPatternReq struct {
	Uuid                          XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                       string         `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName                  XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName               XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	NewPattern                    string         `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                   string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName         XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	CalledPartyTransformationMask string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	NewDialPlanName               XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 newDialPlanName,omitempty"`
	DigitDiscardInstructionName   XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	NewRouteFilterName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 newRouteFilterName,omitempty"`
	CalledPartyPrefixDigits       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyPrefixDigits,omitempty"`
	CalledPartyNumberingPlan      XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType         XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Sequence                      uint64         `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCalledPartyTransformationPatternReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCalledPartyTransformationPatternReq
	var overlay struct {
		*T
		CalledPartyNumberingPlan *XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType    *XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCallerFilterListReq struct {
	Name          string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description   string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RemoveMembers Anon24 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon25 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon26 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateCallingPartyTransformationPatternReq struct {
	Uuid                           XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	NewPattern                     string           `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName          XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	NewDialPlanName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 newDialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	NewRouteFilterName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 newRouteFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	Sequence                       uint64           `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCallingPartyTransformationPatternReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCallingPartyTransformationPatternReq
	var overlay struct {
		*T
		UseCallingPartyPhoneMask   *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingPartyNumberingPlan  *XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType     *XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCcdAdvertisingServiceReq struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName      string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	HostDnGroup  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 hostDnGroup,omitempty"`
	SafSipTrunk  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safSipTrunk,omitempty"`
	SafH323Trunk XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safH323Trunk,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateCcdHostedDNGroupReq struct {
	Name                      string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                      XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Sequence                  uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCcdHostedDNGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCcdHostedDNGroupReq
	var overlay struct {
		*T
		UsePstnFailover *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePstnFailover = (*Boolean)(&overlay.T.UsePstnFailover)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCcdHostedDNReq struct {
	Uuid                      XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	HostedPattern             string   `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern"`
	NewHostedPattern          string   `xml:"http://www.cisco.com/AXL/API/9.0 newHostedPattern,omitempty"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CcdHostedDnGroup          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 CcdHostedDnGroup,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	Sequence                  uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCcdHostedDNReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCcdHostedDNReq
	var overlay struct {
		*T
		UsePstnFailover *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePstnFailover = (*Boolean)(&overlay.T.UsePstnFailover)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCcdRequestingServiceReq struct {
	Name                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                   XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description            string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	RoutePartitionName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	LearnedPatternPrefix   string                 `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	PstnPrefix             string                 `xml:"http://www.cisco.com/AXL/API/9.0 pstnPrefix,omitempty"`
	RemoveAssociatedTrunks RemoveAssociatedTrunks `xml:"http://www.cisco.com/AXL/API/9.0 removeAssociatedTrunks,omitempty"`
	AddAssociatedTrunks    AddAssociatedTrunks    `xml:"http://www.cisco.com/AXL/API/9.0 addAssociatedTrunks,omitempty"`
	AssociatedTrunks       Anon495                `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunks,omitempty"`
	Sequence               uint64                 `xml:"sequence,attr,omitempty"`
}

type UpdateCiscoCatalyst600024PortFXSGatewayReq struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                             XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                          string               `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                    XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	Ports                            Anon434              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	PortSelectionOrder               XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 portSelectionOrder,omitempty"`
	TransmitUtf8                     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Sequence                         uint64               `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCiscoCatalyst600024PortFXSGatewayReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCiscoCatalyst600024PortFXSGatewayReq
	var overlay struct {
		*T
		UseTrustedRelayPoint *XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		TransmitUtf8         *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCiscoCatalyst6000E1VoIPGatewayReq struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                               XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon439                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Sequence                           uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCiscoCatalyst6000E1VoIPGatewayReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCiscoCatalyst6000E1VoIPGatewayReq
	var overlay struct {
		*T
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingPlan                       *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChanIe                            *XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		FirstDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
		InterfaceId                       *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
		IntraDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
		NumDigitsToStrip                  *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
		CallingLinePresentationBit        *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		ConnectedLineIdPresentation       *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
		SecurityAccessLevel               *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
		SmdiBasePort                      *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		V150                              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QSIGVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChanIe = (*XPRIChanIE)(&overlay.T.ChanIe)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.FirstDelay = (*XInteger)(&overlay.T.FirstDelay)
	overlay.InterfaceId = (*XInteger)(&overlay.T.InterfaceId)
	overlay.IntraDelay = (*XInteger)(&overlay.T.IntraDelay)
	overlay.NumDigitsToStrip = (*XInteger)(&overlay.T.NumDigitsToStrip)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.ConnectedLineIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedLineIdPresentation)
	overlay.SecurityAccessLevel = (*XInteger)(&overlay.T.SecurityAccessLevel)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QSIGVariant = (*XQSIGVariant)(&overlay.T.QSIGVariant)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCiscoCatalyst6000T1VoIPGatewayPriReq struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                               XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable,omitempty"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent,omitempty"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable,omitempty"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough,omitempty"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol,omitempty"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe,omitempty"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe,omitempty"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart,omitempty"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi,omitempty"`
	SigDigits                          Anon444                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span,omitempty"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll,omitempty"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Sequence                           uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCiscoCatalyst6000T1VoIPGatewayPriReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCiscoCatalyst6000T1VoIPGatewayPriReq
	var overlay struct {
		*T
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		MlppPreemption                    *XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingPlan                       *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChanIe                            *XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		FirstDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
		InterfaceId                       *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
		IntraDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
		NumDigitsToStrip                  *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
		CallingLinePresentationBit        *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		ConnectedLineIdPresentation       *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
		SecurityAccessLevel               *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
		SmdiBasePort                      *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		V150                              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QSIGVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.MlppPreemption = (*XPreemption)(&overlay.T.MlppPreemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChanIe = (*XPRIChanIE)(&overlay.T.ChanIe)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.FirstDelay = (*XInteger)(&overlay.T.FirstDelay)
	overlay.InterfaceId = (*XInteger)(&overlay.T.InterfaceId)
	overlay.IntraDelay = (*XInteger)(&overlay.T.IntraDelay)
	overlay.NumDigitsToStrip = (*XInteger)(&overlay.T.NumDigitsToStrip)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.ConnectedLineIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedLineIdPresentation)
	overlay.SecurityAccessLevel = (*XInteger)(&overlay.T.SecurityAccessLevel)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QSIGVariant = (*XQSIGVariant)(&overlay.T.QSIGVariant)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCiscoCatalyst6000T1VoIPGatewayT1Req struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                             XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                          string               `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	Ports                            Anon449              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder,omitempty"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference,omitempty"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam,omitempty"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType,omitempty"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Sequence                         uint64               `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCiscoCatalyst6000T1VoIPGatewayT1Req) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCiscoCatalyst6000T1VoIPGatewayT1Req
	var overlay struct {
		*T
		NetworkLocation               *XNetworkLocation `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		UseTrustedRelayPoint          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio         *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		DigitSending                  *XDigitSending    `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
		FdlChannel                    *XFDLChannel      `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
		YellowAlarm                   *XYellowAlarm     `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
		ZeroSupression                *XZeroSuppression `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
		SmdiBasePort                  *XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		HandleDtmfPrecedenceSignals   *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
		UseDevicePoolCdpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PstnAccess                    *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.DigitSending = (*XDigitSending)(&overlay.T.DigitSending)
	overlay.FdlChannel = (*XFDLChannel)(&overlay.T.FdlChannel)
	overlay.YellowAlarm = (*XYellowAlarm)(&overlay.T.YellowAlarm)
	overlay.ZeroSupression = (*XZeroSuppression)(&overlay.T.ZeroSupression)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.HandleDtmfPrecedenceSignals = (*Boolean)(&overlay.T.HandleDtmfPrecedenceSignals)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCmcInfoReq struct {
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Code        string `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	NewCode     string `xml:"http://www.cisco.com/AXL/API/9.0 newCode,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateCommonDeviceConfigReq struct {
	Name                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID                        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                           string                       `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	SoftkeyTemplateName               XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	UserLocale                        XUserLocale                  `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	MlppDomainId                      string                       `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	UseTrustedRelayPoint              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	Preemption                        XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	IpAddressingMode                  XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
	IpAddressingModePreferenceControl XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
	AllowAutoConfigurationForPhones   XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
	UseImeForOutboundCalls            XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
	Sequence                          uint64                       `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCommonDeviceConfigReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCommonDeviceConfigReq
	var overlay struct {
		*T
		MlppIndicationStatus              *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		UseTrustedRelayPoint              *Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		Preemption                        *XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		IpAddressingMode                  *XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
		IpAddressingModePreferenceControl *XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
		AllowAutoConfigurationForPhones   *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
		UseImeForOutboundCalls            *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.UseTrustedRelayPoint = (*Boolean)(&overlay.T.UseTrustedRelayPoint)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.IpAddressingMode = (*XIPAddressingMode)(&overlay.T.IpAddressingMode)
	overlay.IpAddressingModePreferenceControl = (*XIPAddressingModePrefControl)(&overlay.T.IpAddressingModePreferenceControl)
	overlay.AllowAutoConfigurationForPhones = (*XStatus)(&overlay.T.AllowAutoConfigurationForPhones)
	overlay.UseImeForOutboundCalls = (*XStatus)(&overlay.T.UseImeForOutboundCalls)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCommonPhoneConfigReq struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                           string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UnlockPwd                         string                `xml:"http://www.cisco.com/AXL/API/9.0 unlockPwd,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndAlertingType                   XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
	BackgroundImage                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
	PhonePersonalization              XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	VpnGroupName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroupName,omitempty"`
	VpnProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfileName,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Sequence                          uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCommonPhoneConfigReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCommonPhoneConfigReq
	var overlay struct {
		*T
		DndOption                         *XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		DndAlertingType                   *XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
		BackgroundImage                   *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
		PhonePersonalization              *XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
		PhoneServiceDisplay               *XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
		AlwaysUsePrimeLine                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.DndAlertingType = (*XRingSetting)(&overlay.T.DndAlertingType)
	overlay.BackgroundImage = (*Boolean)(&overlay.T.BackgroundImage)
	overlay.PhonePersonalization = (*XPhonePersonalization)(&overlay.T.PhonePersonalization)
	overlay.PhoneServiceDisplay = (*XPhoneServiceDisplay)(&overlay.T.PhoneServiceDisplay)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	return d.DecodeElement(&overlay, &start)
}

type UpdateConferenceBridgeReq struct {
	Name                       string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                       XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                    string           `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                    XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	DevicePoolName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName     XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName               XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	LoadInformation            XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig               XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MaximumCapacity            XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	UseTrustedRelayPoint       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	DestinationAddress         string           `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	McuConferenceBridgeSipPort XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
	SipProfile                 XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile,omitempty"`
	SrtpAllowed                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	NormalizationScript        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScript,omitempty"`
	EnableTrace                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 enableTrace,omitempty"`
	NormalizationScriptInfos   Anon345          `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfos,omitempty"`
	UserName                   string           `xml:"http://www.cisco.com/AXL/API/9.0 userName,omitempty"`
	Password                   string           `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	HttpPort                   XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
	UseHttps                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
	Sequence                   uint64           `xml:"sequence,attr,omitempty"`
}

func (t *UpdateConferenceBridgeReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateConferenceBridgeReq
	var overlay struct {
		*T
		LocationName               *XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
		UseTrustedRelayPoint       *XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		McuConferenceBridgeSipPort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
		HttpPort                   *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
		UseHttps                   *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LocationName = (*XFkType)(&overlay.T.LocationName)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.McuConferenceBridgeSipPort = (*XInteger)(&overlay.T.McuConferenceBridgeSipPort)
	overlay.HttpPort = (*XInteger)(&overlay.T.HttpPort)
	overlay.UseHttps = (*Boolean)(&overlay.T.UseHttps)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCredentialPolicyReq struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                     XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                  string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	FailedLogon              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
	ResetFailedLogonAttempts XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
	LockoutDuration          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
	CredChangeDuration       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
	CredExpiresAfter         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
	MinCredLength            XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
	PrevCredStoredNum        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
	InactiveDaysAllowed      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
	ExpiryWarningDays        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
	TrivialCredCheck         Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
	Sequence                 uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCredentialPolicyReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCredentialPolicyReq
	var overlay struct {
		*T
		FailedLogon              *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
		ResetFailedLogonAttempts *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
		LockoutDuration          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
		CredChangeDuration       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
		CredExpiresAfter         *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
		MinCredLength            *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
		PrevCredStoredNum        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
		InactiveDaysAllowed      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
		ExpiryWarningDays        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
		TrivialCredCheck         *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.FailedLogon = (*XInteger)(&overlay.T.FailedLogon)
	overlay.ResetFailedLogonAttempts = (*XInteger)(&overlay.T.ResetFailedLogonAttempts)
	overlay.LockoutDuration = (*XInteger)(&overlay.T.LockoutDuration)
	overlay.CredChangeDuration = (*XInteger)(&overlay.T.CredChangeDuration)
	overlay.CredExpiresAfter = (*XInteger)(&overlay.T.CredExpiresAfter)
	overlay.MinCredLength = (*XInteger)(&overlay.T.MinCredLength)
	overlay.PrevCredStoredNum = (*XInteger)(&overlay.T.PrevCredStoredNum)
	overlay.InactiveDaysAllowed = (*XInteger)(&overlay.T.InactiveDaysAllowed)
	overlay.ExpiryWarningDays = (*XInteger)(&overlay.T.ExpiryWarningDays)
	overlay.TrivialCredCheck = (*Boolean)(&overlay.T.TrivialCredCheck)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCssReq struct {
	Name          string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description   string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RemoveMembers Anon34 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon35 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon36 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateCtiRoutePointReq struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                          XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                       string            `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UseTrustedRelayPoint          XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	Lines                         Anon307           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	Sequence                      uint64            `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCtiRoutePointReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCtiRoutePointReq
	var overlay struct {
		*T
		ProtocolSide                  *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint          *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCumaServerSecurityProfileReq struct {
	Name             string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid             XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName          string              `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	TransportType    XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	X509SubjectName  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	ServerIpHostName string              `xml:"http://www.cisco.com/AXL/API/9.0 serverIpHostName,omitempty"`
	Sequence         uint64              `xml:"sequence,attr,omitempty"`
}

func (t *UpdateCumaServerSecurityProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateCumaServerSecurityProfileReq
	var overlay struct {
		*T
		TransportType *XTransport `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TransportType = (*XTransport)(&overlay.T.TransportType)
	return d.DecodeElement(&overlay, &start)
}

type UpdateCustomUserFieldReq struct {
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Field    string `xml:"http://www.cisco.com/AXL/API/9.0 field"`
	NewField string `xml:"http://www.cisco.com/AXL/API/9.0 newField,omitempty"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateDateTimeGroupReq struct {
	Name                     string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                     XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                  string                   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	TimeZone                 XTimeZone                `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	Separator                string                   `xml:"http://www.cisco.com/AXL/API/9.0 separator,omitempty"`
	Dateformat               string                   `xml:"http://www.cisco.com/AXL/API/9.0 dateformat,omitempty"`
	TimeFormat               string                   `xml:"http://www.cisco.com/AXL/API/9.0 timeFormat,omitempty"`
	RemovePhoneNtpReferences RemovePhoneNtpReferences `xml:"http://www.cisco.com/AXL/API/9.0 removePhoneNtpReferences,omitempty"`
	AddPhoneNtpReferences    AddPhoneNtpReferences    `xml:"http://www.cisco.com/AXL/API/9.0 addPhoneNtpReferences,omitempty"`
	PhoneNtpReferences       Anon247                  `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpReferences,omitempty"`
	Sequence                 uint64                   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDateTimeGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDateTimeGroupReq
	var overlay struct {
		*T
		TimeZone *XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDefaultDeviceProfileReq struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PhoneButtonTemplate               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate,omitempty"`
	SoftkeyTemplate                   XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplate,omitempty"`
	Privacy                           XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	IgnorePi                          Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePi,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndication                    XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	Sequence                          uint64            `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDefaultDeviceProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDefaultDeviceProfileReq
	var overlay struct {
		*T
		Privacy                           *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
		SingleButtonBarge                 *XBarge      `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		DndOption                         *XDNDOption  `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		MlppIndication                    *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
		Preemption                        *XPreemption `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		AlwaysUsePrimeLine                *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Privacy = (*XStatus)(&overlay.T.Privacy)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.MlppIndication = (*XStatus)(&overlay.T.MlppIndication)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDeviceMobilityGroupReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateDeviceMobilityReq struct {
	Name          string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	SubNet        string   `xml:"http://www.cisco.com/AXL/API/9.0 subNet,omitempty"`
	SubNetMaskSz  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subNetMaskSz,omitempty"`
	RemoveMembers Anon109  `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon110  `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon111  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64   `xml:"sequence,attr,omitempty"`
}

type UpdateDevicePoolReq struct {
	Name                                           string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                           XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                                        string          `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	AutoSearchSpaceName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 autoSearchSpaceName,omitempty"`
	DateTimeSettingName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeSettingName,omitempty"`
	CallManagerGroupName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	MediaResourceListName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	RegionName                                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 regionName,omitempty"`
	NetworkLocale                                  XCountry        `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	SrstName                                       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 srstName,omitempty"`
	ConnectionMonitorDuration                      XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LocationName                                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MobilityCssName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mobilityCssName,omitempty"`
	PhysicalLocationName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocationName,omitempty"`
	DeviceMobilityGroupName                        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroupName,omitempty"`
	RevertPriority                                 XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
	SingleButtonBarge                              XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                                XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CgpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	CdpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	LocalRouteGroupName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 localRouteGroupName,omitempty"`
	GeoLocationName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CallingPartyNationalPrefix                     string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	AdjunctCallingSearchSpace                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 adjunctCallingSearchSpace,omitempty"`
	CallingPartyNationalStripDigits                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	ImeEnrolledPatternGroupName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	CntdPnTransformationCssName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
	Sequence                                       uint64          `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDevicePoolReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDevicePoolReq
	var overlay struct {
		*T
		ConnectionMonitorDuration *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
		RevertPriority            *XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
		SingleButtonBarge         *XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines           *XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ConnectionMonitorDuration = (*XInteger)(&overlay.T.ConnectionMonitorDuration)
	overlay.RevertPriority = (*XRevertPriority)(&overlay.T.RevertPriority)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDeviceProfileReq struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                           string            `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	VendorConfig                      XVendorConfig     `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	Lines                             Anon408           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Anon409           `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    Anon410           `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	BlfDirectedCallParks              Anon411           `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      Anon412           `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	LoginUserId                       XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	Services                          Anon413           `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	FeatureControlPolicy              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Sequence                          uint64            `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDeviceProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDeviceProfileReq
	var overlay struct {
		*T
		MlppIndicationStatus              *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		SingleButtonBarge                 *XBarge      `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		IgnorePresentationIndicators      *Boolean     `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		DndOption                         *XDNDOption  `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		AlwaysUsePrimeLine                *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		CallInfoPrivacyStatus             *XStatus     `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDhcpServerReq struct {
	Uuid                         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ProcessNodeName              XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	NewProcessNodeName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 newProcessNodeName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Sequence                     uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDhcpServerReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDhcpServerReq
	var overlay struct {
		*T
		ArpCacheTimeout    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
		IpAddressLeaseTime *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
		RenewalTime        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
		RebindingTime      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ArpCacheTimeout = (*XInteger)(&overlay.T.ArpCacheTimeout)
	overlay.IpAddressLeaseTime = (*XInteger)(&overlay.T.IpAddressLeaseTime)
	overlay.RenewalTime = (*XInteger)(&overlay.T.RenewalTime)
	overlay.RebindingTime = (*XInteger)(&overlay.T.RebindingTime)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDhcpSubnetReq struct {
	Uuid                         XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DhcpServerName               XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName"`
	SubnetIpAddress              string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress"`
	NewDhcpServerName            XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 newDhcpServerName,omitempty"`
	NewSubnetIpAddress           string   `xml:"http://www.cisco.com/AXL/API/9.0 newSubnetIpAddress,omitempty"`
	PrimaryStartIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryStartIpAddress,omitempty"`
	PrimaryEndIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryEndIpAddress,omitempty"`
	SecondaryStartIpAddress      string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryStartIpAddress,omitempty"`
	SecondaryEndIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryEndIpAddress,omitempty"`
	PrimaryRouterIpAddress       string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryRouterIpAddress,omitempty"`
	SecondaryRouterIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryRouterIpAddress,omitempty"`
	SubnetMask                   string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetMask,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	Sequence                     uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDhcpSubnetReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDhcpSubnetReq
	var overlay struct {
		*T
		ArpCacheTimeout    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
		IpAddressLeaseTime *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
		RenewalTime        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
		RebindingTime      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ArpCacheTimeout = (*XInteger)(&overlay.T.ArpCacheTimeout)
	overlay.IpAddressLeaseTime = (*XInteger)(&overlay.T.IpAddressLeaseTime)
	overlay.RenewalTime = (*XInteger)(&overlay.T.RenewalTime)
	overlay.RebindingTime = (*XInteger)(&overlay.T.RebindingTime)
	return d.DecodeElement(&overlay, &start)
}

type UpdateDirectedCallParkReq struct {
	Uuid                  XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern               string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	RetrievalPrefix       string  `xml:"http://www.cisco.com/AXL/API/9.0 retrievalPrefix,omitempty"`
	ReversionPattern      string  `xml:"http://www.cisco.com/AXL/API/9.0 reversionPattern,omitempty"`
	RevertCssName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 revertCssName,omitempty"`
	Sequence              uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateDirectoryLookupDialRulesReq struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid              XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName           string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	Sequence          uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateDirectoryLookupDialRulesReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateDirectoryLookupDialRulesReq
	var overlay struct {
		*T
		NumberOfDigits    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
		DigitsToBeRemoved *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
		Priority          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NumberOfDigits = (*XInteger)(&overlay.T.NumberOfDigits)
	overlay.DigitsToBeRemoved = (*XInteger)(&overlay.T.DigitsToBeRemoved)
	overlay.Priority = (*XInteger)(&overlay.T.Priority)
	return d.DecodeElement(&overlay, &start)
}

type UpdateEmccFeatureConfigReq struct {
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ParameterName string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName"`
	Value         string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateEndUserCapfProfileReq struct {
	Uuid                   XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	InstanceId             string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	CertificationOperation XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
	AuthenticationMode     XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString   string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion    string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
	Sequence               uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateEndUserCapfProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateEndUserCapfProfileReq
	var overlay struct {
		*T
		CertificationOperation *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
		AuthenticationMode     *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CertificationOperation = (*XCertificateOperation)(&overlay.T.CertificationOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	return d.DecodeElement(&overlay, &start)
}

type UpdateEnterpriseFeatureAccessConfigurationReq struct {
	Uuid                  XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern               string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	NewRoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	Description           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefaultEafNumber    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefaultEafNumber,omitempty"`
	Sequence              uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateEnterprisePhoneConfigReq struct {
	VendorConfig XVendorConfig `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
}

type UpdateExternalCallControlProfileReq struct {
	Name                      string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                      XUUID                   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                   string                  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	PrimaryUri                string                  `xml:"http://www.cisco.com/AXL/API/9.0 primaryUri,omitempty"`
	SecondaryUri              string                  `xml:"http://www.cisco.com/AXL/API/9.0 secondaryUri,omitempty"`
	EnableLoadBalancing       Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
	RoutingRequestTimer       XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 routingRequestTimer,omitempty"`
	DiversionReroutingCssName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 diversionReroutingCssName,omitempty"`
	CallTreatmentOnFailure    XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
	Sequence                  uint64                  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateExternalCallControlProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateExternalCallControlProfileReq
	var overlay struct {
		*T
		EnableLoadBalancing    *Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
		CallTreatmentOnFailure *XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableLoadBalancing = (*Boolean)(&overlay.T.EnableLoadBalancing)
	overlay.CallTreatmentOnFailure = (*XCallTreatmentOnFailure)(&overlay.T.CallTreatmentOnFailure)
	return d.DecodeElement(&overlay, &start)
}

type UpdateFacInfoReq struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid               XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName            string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Code               string   `xml:"http://www.cisco.com/AXL/API/9.0 code,omitempty"`
	AuthorizationLevel XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
	Sequence           uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateFacInfoReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateFacInfoReq
	var overlay struct {
		*T
		AuthorizationLevel *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AuthorizationLevel = (*XInteger)(&overlay.T.AuthorizationLevel)
	return d.DecodeElement(&overlay, &start)
}

type UpdateFallbackFeatureConfigReq struct {
	EnableFallbackForImeCalls     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableFallbackForImeCalls,omitempty"`
	QosSensistivityLevel          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	DtmfCorrelationDigits         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfCorrelationDigits,omitempty"`
	DtmfCollectionTimer           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfCollectionTimer,omitempty"`
	CallAnswerTimer               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	ClearImeCallDelayTimer        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 clearImeCallDelayTimer,omitempty"`
	DtmfInterDigitDelayTimer      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 dtmfInterDigitDelayTimer,omitempty"`
	PostConnectFallbackDelayTimer XInteger `xml:"http://www.cisco.com/AXL/API/9.0 postConnectFallbackDelayTimer,omitempty"`
	FallbackSplitDelayTimer       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fallbackSplitDelayTimer,omitempty"`
	CallCss                       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
}

type UpdateFallbackProfileReq struct {
	Name                                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                  XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                               string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                           string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AdvertisedFallbackDirectoryE164Number string                `xml:"http://www.cisco.com/AXL/API/9.0 advertisedFallbackDirectoryE164Number,omitempty"`
	QosSensistivityLevel                  XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	CallCss                               XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
	CallAnswerTimer                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	DirectoryNumberPartition              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumberPartition,omitempty"`
	DirectoryNumber                       string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	NumberOfDigitsForCallerIDPartialMatch XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
	Sequence                              uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateFallbackProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateFallbackProfileReq
	var overlay struct {
		*T
		QosSensistivityLevel                  *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
		CallCss                               *XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
		CallAnswerTimer                       *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
		NumberOfDigitsForCallerIDPartialMatch *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.QosSensistivityLevel = (*XInteger)(&overlay.T.QosSensistivityLevel)
	overlay.CallCss = (*XFallBackCSSSelection)(&overlay.T.CallCss)
	overlay.CallAnswerTimer = (*XInteger)(&overlay.T.CallAnswerTimer)
	overlay.NumberOfDigitsForCallerIDPartialMatch = (*XInteger)(&overlay.T.NumberOfDigitsForCallerIDPartialMatch)
	return d.DecodeElement(&overlay, &start)
}

type UpdateFeatureControlPolicyReq struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Features    Anon578 `xml:"http://www.cisco.com/AXL/API/9.0 features,omitempty"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateFixedMohAudioSourceReq struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid      XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName   string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Multicast Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Enable    string  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	Sequence  uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateGatekeeperReq struct {
	Name          string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description   string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RrqTimeToLive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
	RetryTimeout  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
	EnableDevice  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
	Sequence      uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateGatekeeperReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateGatekeeperReq
	var overlay struct {
		*T
		RrqTimeToLive *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
		RetryTimeout  *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
		EnableDevice  *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RrqTimeToLive = (*XInteger)(&overlay.T.RrqTimeToLive)
	overlay.RetryTimeout = (*XInteger)(&overlay.T.RetryTimeout)
	overlay.EnableDevice = (*Boolean)(&overlay.T.EnableDevice)
	return d.DecodeElement(&overlay, &start)
}

type UpdateGatewayEndpointAnalogAccessReq struct {
	Name     string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Endpoint UGatewayEndpointAnalog `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Sequence uint64                 `xml:"sequence,attr,omitempty"`
}

type UpdateGatewayEndpointDigitalAccessBriReq struct {
	Name     string                     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Endpoint UGatewayEndpointDigitalBri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Sequence uint64                     `xml:"sequence,attr,omitempty"`
}

type UpdateGatewayEndpointDigitalAccessPriReq struct {
	Name     string                     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Endpoint UGatewayEndpointDigitalPri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Sequence uint64                     `xml:"sequence,attr,omitempty"`
}

type UpdateGatewayEndpointDigitalAccessT1Req struct {
	Name     string                    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Endpoint UGatewayEndpointDigitalT1 `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Sequence uint64                    `xml:"sequence,attr,omitempty"`
}

type UpdateGatewayReq struct {
	Uuid                 XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	NewDomainName        string          `xml:"http://www.cisco.com/AXL/API/9.0 newDomainName,omitempty"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	VendorConfig         XVendorConfig   `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Sequence             uint64          `xml:"sequence,attr,omitempty"`
}

func (t *UpdateGatewayReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateGatewayReq
	var overlay struct {
		*T
		Product  *XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
		Protocol *XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Product = (*XProduct)(&overlay.T.Product)
	overlay.Protocol = (*XDeviceProtocol)(&overlay.T.Protocol)
	return d.DecodeElement(&overlay, &start)
}

type UpdateGatewaySccpEndpointsReq struct {
	Name     string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Endpoint XGatewaySccp `xml:"http://www.cisco.com/AXL/API/9.0 endpoint,omitempty"`
	Sequence uint64       `xml:"sequence,attr,omitempty"`
}

type UpdateGeoLocationFilterReq struct {
	Name                      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                      XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                   string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description               string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UseCountry                Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCountry,omitempty"`
	UseNationalSubDivision    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNationalSubDivision,omitempty"`
	UseDistrict               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useDistrict,omitempty"`
	UseCommunityName          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCommunityName,omitempty"`
	UseCityDivision           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCityDivision,omitempty"`
	UseNeighbourhood          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNeighbourhood,omitempty"`
	UseStreet                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreet,omitempty"`
	UseLeadingStreetDirection Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLeadingStreetDirection,omitempty"`
	UseTrailingStreetSuffix   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useTrailingStreetSuffix,omitempty"`
	UseStreetSuffix           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreetSuffix,omitempty"`
	UseHouseNumber            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumber,omitempty"`
	UseHouseNumberSuffix      Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumberSuffix,omitempty"`
	UseLandmark               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLandmark,omitempty"`
	UseLocation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLocation,omitempty"`
	UseFloor                  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useFloor,omitempty"`
	UseOccupantName           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useOccupantName,omitempty"`
	UsePostalCode             Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePostalCode,omitempty"`
	Sequence                  uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateGeoLocationPolicyReq struct {
	Name                   string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                   XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Country                string                `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string                `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string                `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string                `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string                `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string                `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string                `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string                `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string                `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string                `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string                `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string                `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string                `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string                `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string                `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string                `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string                `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	RemoveRelatedPolicies  RemoveRelatedPolicies `xml:"http://www.cisco.com/AXL/API/9.0 removeRelatedPolicies,omitempty"`
	AddRelatedPolicies     AddRelatedPolicies    `xml:"http://www.cisco.com/AXL/API/9.0 addRelatedPolicies,omitempty"`
	RelatedPolicies        Anon463               `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicies,omitempty"`
	Sequence               uint64                `xml:"sequence,attr,omitempty"`
}

type UpdateGeoLocationReq struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                   XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Country                string `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	Sequence               uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateH323GatewayReq struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                           XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                                XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	VendorConfig                                   XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	SigDigits                                      Anon398                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	CallingPartyNationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	DisplayIeDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIeDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	Sequence                                       uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateH323GatewayReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateH323GatewayReq
	var overlay struct {
		*T
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		TunneledProtocol                  *XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		PathReplacementSupport            *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		CodecForOutboundFaststart         *XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
		AllowH235PassThrough              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
		SigDigits                         *Anon398                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		CalledPartyIeNumberType           *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
		CallingPartyIeNumberType          *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
		CalledNumberingPlan               *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
		CallingNumberingPlan              *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		UseDevicePoolCalledCssNatl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
		UseDevicePoolCalledCssIntl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
		UseDevicePoolCalledCssUnkn        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
		UseDevicePoolCalledCssSubs        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.CodecForOutboundFaststart = (*XMediaPayload)(&overlay.T.CodecForOutboundFaststart)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	overlay.AllowH235PassThrough = (*Boolean)(&overlay.T.AllowH235PassThrough)
	overlay.SigDigits = (*Anon398)(&overlay.T.SigDigits)
	overlay.CalledPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyIeNumberType)
	overlay.CallingPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyIeNumberType)
	overlay.CalledNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledNumberingPlan)
	overlay.CallingNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingNumberingPlan)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.UseDevicePoolCalledCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssNatl)
	overlay.UseDevicePoolCalledCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssIntl)
	overlay.UseDevicePoolCalledCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCalledCssUnkn)
	overlay.UseDevicePoolCalledCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCalledCssSubs)
	return d.DecodeElement(&overlay, &start)
}

type UpdateH323PhoneReq struct {
	Name                              string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	LocationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint              XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	RemoteDevice                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	CgpnTransformationCssName         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AlwaysUsePrimeLine                XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SrtpAllowed                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	WaitForFarEndH245TerminalSet      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferredCodec                 XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
	CallerIdDn                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection             XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	PresenceGroupName                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	HlogStatus                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	SignalingPort                     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	GateKeeperInfo                    Anon369                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	Lines                             Anon370                `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	IgnorePresentationIndicators      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Sequence                          uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateH323PhoneReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateH323PhoneReq
	var overlay struct {
		*T
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		AlwaysUsePrimeLine                *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		MtpPreferredCodec                 *XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.MtpPreferredCodec = (*XSIPCodec)(&overlay.T.MtpPreferredCodec)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	return d.DecodeElement(&overlay, &start)
}

type UpdateH323TrunkReq struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                           XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                                Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	NationalPrefix                                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                                  string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	SigDigits                                      Anon380                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	GateKeeperInfo                                 Anon381                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	RemoteServerinfo                               Anon382                `xml:"http://www.cisco.com/AXL/API/9.0 remoteServerinfo,omitempty"`
	IctPassingPrecedenceLevelThroughUuie           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ictPassingPrecedenceLevelThroughUuie,omitempty"`
	IctSecurityAccessLevel                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
	IsSafEnabled                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	RunOnEveryNode                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	RemoveDestinations                             RemoveDestinations     `xml:"http://www.cisco.com/AXL/API/9.0 removeDestinations,omitempty"`
	AddDestinations                                AddDestinations        `xml:"http://www.cisco.com/AXL/API/9.0 addDestinations,omitempty"`
	Destinations                                   Anon383                `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	Sequence                                       uint64                 `xml:"sequence,attr,omitempty"`
}

func (t *UpdateH323TrunkReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateH323TrunkReq
	var overlay struct {
		*T
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		CodecForOutboundFaststart         *XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
		AllowH235PassThrough              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
		TunneledProtocol                  *XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
		SigDigits                         *Anon380                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		CalledPartyIeNumberType           *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
		CallingPartyIeNumberType          *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
		CalledNumberingPlan               *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
		CallingNumberingPlan              *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
		PathReplacementSupport            *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		IctSecurityAccessLevel            *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
		IsSafEnabled                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		UseDevicePoolCalledCssNatl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
		UseDevicePoolCalledCssIntl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
		UseDevicePoolCalledCssUnkn        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
		UseDevicePoolCalledCssSubs        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
		RunOnEveryNode                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.CodecForOutboundFaststart = (*XMediaPayload)(&overlay.T.CodecForOutboundFaststart)
	overlay.AllowH235PassThrough = (*Boolean)(&overlay.T.AllowH235PassThrough)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	overlay.SigDigits = (*Anon380)(&overlay.T.SigDigits)
	overlay.CalledPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyIeNumberType)
	overlay.CallingPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyIeNumberType)
	overlay.CalledNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledNumberingPlan)
	overlay.CallingNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingNumberingPlan)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.IctSecurityAccessLevel = (*XInteger)(&overlay.T.IctSecurityAccessLevel)
	overlay.IsSafEnabled = (*Boolean)(&overlay.T.IsSafEnabled)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.UseDevicePoolCalledCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssNatl)
	overlay.UseDevicePoolCalledCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssIntl)
	overlay.UseDevicePoolCalledCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCalledCssUnkn)
	overlay.UseDevicePoolCalledCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCalledCssSubs)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	return d.DecodeElement(&overlay, &start)
}

type UpdateHandoffConfigurationReq struct {
	Uuid                  XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern               string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	NewRoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	Sequence              uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateHuntListReq struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	VoiceMailUsage       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	RemoveMembers        Anon125 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers           Anon126 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members              Anon127 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence             uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateHuntListReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateHuntListReq
	var overlay struct {
		*T
		RouteListEnabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
		VoiceMailUsage   *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RouteListEnabled = (*Boolean)(&overlay.T.RouteListEnabled)
	overlay.VoiceMailUsage = (*Boolean)(&overlay.T.VoiceMailUsage)
	return d.DecodeElement(&overlay, &start)
}

type UpdateHuntPilotReq struct {
	Uuid                           XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern                     string             `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	HuntListName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 huntListName,omitempty"`
	ParkMonForwardNoRetrieve       Anon320            `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieve,omitempty"`
	AlertingName                   string             `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName              string             `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	E164Mask                       string             `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	AarNeighborhoodName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	ForwardHuntNoAnswer            Anon321            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntNoAnswer,omitempty"`
	ForwardHuntBusy                Anon322            `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntBusy,omitempty"`
	CallPickupGroupName            XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	MaxHuntduration                XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	DisplayConnectedNumber         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	QueueCalls                     XCallsQueue        `xml:"http://www.cisco.com/AXL/API/9.0 queueCalls,omitempty"`
	Sequence                       uint64             `xml:"sequence,attr,omitempty"`
}

func (t *UpdateHuntPilotReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateHuntPilotReq
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		DisplayConnectedNumber       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.DisplayConnectedNumber = (*Boolean)(&overlay.T.DisplayConnectedNumber)
	return d.DecodeElement(&overlay, &start)
}

type UpdateIlsConfigReq struct {
	Role                     string  `xml:"http://www.cisco.com/AXL/API/9.0 role"`
	RegistrationServer       string  `xml:"http://www.cisco.com/AXL/API/9.0 registrationServer"`
	ActivateIls              Boolean `xml:"http://www.cisco.com/AXL/API/9.0 activateIls"`
	SynchronizeClustersEvery string  `xml:"http://www.cisco.com/AXL/API/9.0 synchronizeClustersEvery"`
	ActivatedServers         string  `xml:"http://www.cisco.com/AXL/API/9.0 activatedServers"`
	DeactivatedServers       string  `xml:"http://www.cisco.com/AXL/API/9.0 deactivatedServers"`
	UseTls                   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useTls"`
	UsePassword              string  `xml:"http://www.cisco.com/AXL/API/9.0 usePassword"`
	Sequence                 uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateImeClientReq struct {
	Name                        string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                        XUUID                   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                     string                  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Domain                      string                  `xml:"http://www.cisco.com/AXL/API/9.0 domain,omitempty"`
	IsActivated                 Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName                XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	PrimaryImeServerName        XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 primaryImeServerName,omitempty"`
	SecondaryImeServerName      XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 secondaryImeServerName,omitempty"`
	LearnedRouteFilterGroupName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 learnedRouteFilterGroupName,omitempty"`
	ExclusionNumberGroupName    XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 exclusionNumberGroupName,omitempty"`
	FirewallName                XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 firewallName,omitempty"`
	RemoveMembers               Anon540                 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers                  Anon541                 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members                     Anon542                 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	RemoveCcmExternalIpMaps     RemoveCcmExternalIpMaps `xml:"http://www.cisco.com/AXL/API/9.0 removeCcmExternalIpMaps,omitempty"`
	AddCcmExternalIpMaps        AddCcmExternalIpMaps    `xml:"http://www.cisco.com/AXL/API/9.0 addCcmExternalIpMaps,omitempty"`
	CcmExternalIpMaps           Anon543                 `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMaps,omitempty"`
	Sequence                    uint64                  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeClientReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeClientReq
	var overlay struct {
		*T
		IsActivated *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsActivated = (*Boolean)(&overlay.T.IsActivated)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImeE164TransformationReq struct {
	Name                                  string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                  XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                               string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CgpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	IsCgpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
	CdpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	IsCdpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	IncomingCgpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCgpnTransformationProfileName,omitempty"`
	IncomingCdpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCdpnTransformationProfileName,omitempty"`
	Sequence                              uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeE164TransformationReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeE164TransformationReq
	var overlay struct {
		*T
		IsCgpnPreTransformation *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
		IsCdpnPreTransformation *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsCgpnPreTransformation = (*Boolean)(&overlay.T.IsCgpnPreTransformation)
	overlay.IsCdpnPreTransformation = (*Boolean)(&overlay.T.IsCdpnPreTransformation)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImeEnrolledPatternGroupReq struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName             string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FallbackProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfileName,omitempty"`
	IsPatternAllAlias   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
	Sequence            uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeEnrolledPatternGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeEnrolledPatternGroupReq
	var overlay struct {
		*T
		IsPatternAllAlias *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsPatternAllAlias = (*Boolean)(&overlay.T.IsPatternAllAlias)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImeEnrolledPatternReq struct {
	Uuid                        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	NewPattern                  string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeEnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	Sequence                    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateImeExclusionNumberGroupReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateImeExclusionNumberReq struct {
	Uuid                        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	NewPattern                  string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeExclusionNumberGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroupName,omitempty"`
	Sequence                    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateImeFeatureConfigReq struct {
	PreventImeCallsFromAnalogGateways Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 preventImeCallsFromAnalogGateways,omitempty"`
	EnableIntraDomain                 Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableIntraDomain,omitempty"`
	AllowMwiNotification              Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 allowMwiNotification,omitempty"`
	TrunkConnectionTimer              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 trunkConnectionTimer,omitempty"`
	FirewallConnectionTimer           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallConnectionTimer,omitempty"`
	FirewallTranscationTimer          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallTranscationTimer,omitempty"`
	FirewallIdleTimer                 XInteger `xml:"http://www.cisco.com/AXL/API/9.0 firewallIdleTimer,omitempty"`
	FailedCallAttemptThreshold        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedCallAttemptThreshold,omitempty"`
	CallFallbackAttemptThreshold      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 callFallbackAttemptThreshold,omitempty"`
	QualityTimer                      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 qualityTimer,omitempty"`
	UseImeForOutboundCalls            Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
}

type UpdateImeFirewallReq struct {
	Name        string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Sequence    uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeFirewallReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeFirewallReq
	var overlay struct {
		*T
		Port *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImeLearnedRoutesReq struct {
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	E164Did      string  `xml:"http://www.cisco.com/AXL/API/9.0 e164Did"`
	AdminEnabled Boolean `xml:"http://www.cisco.com/AXL/API/9.0 adminEnabled,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateImeRouteFilterElementReq struct {
	Name                    string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                    XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                 string             `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description             string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ElementType             XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	ImeRouteFilterGroupName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroupName,omitempty"`
	Sequence                uint64             `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeRouteFilterElementReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeRouteFilterElementReq
	var overlay struct {
		*T
		ElementType *XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ElementType = (*XViprFilterElement)(&overlay.T.ElementType)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImeRouteFilterGroupReq struct {
	Name              string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid              XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName           string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description       string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	GroupTrustSetting Boolean `xml:"http://www.cisco.com/AXL/API/9.0 groupTrustSetting,omitempty"`
	Sequence          uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateImeServerReq struct {
	Name               string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid               XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName            string              `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description        string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress          string              `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	DeviceSecurityMode XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	ApplicationUser    XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser,omitempty"`
	ReconnectInterval  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
	Sequence           uint64              `xml:"sequence,attr,omitempty"`
}

func (t *UpdateImeServerReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateImeServerReq
	var overlay struct {
		*T
		Port               *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		DeviceSecurityMode *XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
		ReconnectInterval  *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.DeviceSecurityMode = (*XServerSecurityMode)(&overlay.T.DeviceSecurityMode)
	overlay.ReconnectInterval = (*XInteger)(&overlay.T.ReconnectInterval)
	return d.DecodeElement(&overlay, &start)
}

type UpdateImportedDirectoryUriCatalogsReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RouteString string `xml:"http://www.cisco.com/AXL/API/9.0 routeString,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateInterClusterDirectoryUriReq struct {
	ExchangeDirectoryUri Boolean `xml:"http://www.cisco.com/AXL/API/9.0 exchangeDirectoryUri"`
	RouteString          string  `xml:"http://www.cisco.com/AXL/API/9.0 routeString"`
	Sequence             uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateInterClusterServiceProfileReq struct {
	Uuid                XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	InterClusterService XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	IsActivated         Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	Sequence            uint64               `xml:"sequence,attr,omitempty"`
}

func (t *UpdateInterClusterServiceProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateInterClusterServiceProfileReq
	var overlay struct {
		*T
		InterClusterService *XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
		IsActivated         *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InterClusterService = (*XInterClusterService)(&overlay.T.InterClusterService)
	overlay.IsActivated = (*Boolean)(&overlay.T.IsActivated)
	return d.DecodeElement(&overlay, &start)
}

type UpdateIpPhoneServicesReq struct {
	Uuid               XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ServiceName        string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceName"`
	NewServiceName     string                `xml:"http://www.cisco.com/AXL/API/9.0 newServiceName,omitempty"`
	AsciiServiceName   string                `xml:"http://www.cisco.com/AXL/API/9.0 asciiServiceName,omitempty"`
	ServiceDescription string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceDescription,omitempty"`
	ServiceUrl         string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceUrl,omitempty"`
	SecureServiceUrl   string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServiceUrl,omitempty"`
	ServiceCategory    XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
	ServiceType        XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ServiceVendor      string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVendor,omitempty"`
	ServiceVersion     string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVersion,omitempty"`
	Enabled            Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	RemoveParameters   RemoveParameters      `xml:"http://www.cisco.com/AXL/API/9.0 removeParameters,omitempty"`
	AddParameters      AddParameters         `xml:"http://www.cisco.com/AXL/API/9.0 addParameters,omitempty"`
	Parameters         Anon303               `xml:"http://www.cisco.com/AXL/API/9.0 parameters,omitempty"`
	Sequence           uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateIpPhoneServicesReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateIpPhoneServicesReq
	var overlay struct {
		*T
		ServiceCategory *XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
		ServiceType     *XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
		Enabled         *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ServiceCategory = (*XPhoneServiceCategory)(&overlay.T.ServiceCategory)
	overlay.ServiceType = (*XPhoneService)(&overlay.T.ServiceType)
	overlay.Enabled = (*Boolean)(&overlay.T.Enabled)
	return d.DecodeElement(&overlay, &start)
}

type UpdateIvrUserLocaleReq struct {
	Uuid          XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	UserLocale    XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale"`
	NewUserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 newUserLocale,omitempty"`
	OrderIndex    XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex,omitempty"`
	Sequence      uint64      `xml:"sequence,attr,omitempty"`
}

type UpdateLbmGroupReq struct {
	Name               string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName            string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 Description,omitempty"`
	ProcessnodeActive  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeActive,omitempty"`
	ProcessnodeStandby XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeStandby,omitempty"`
	Sequence           uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateLbmHubGroupReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Member1     string `xml:"http://www.cisco.com/AXL/API/9.0 member1,omitempty"`
	Member2     string `xml:"http://www.cisco.com/AXL/API/9.0 member2,omitempty"`
	Member3     string `xml:"http://www.cisco.com/AXL/API/9.0 member3,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateLdapAuthenticationReq struct {
	AuthenticateEndUsers Boolean `xml:"http://www.cisco.com/AXL/API/9.0 authenticateEndUsers,omitempty"`
	DistinguishedName    string  `xml:"http://www.cisco.com/AXL/API/9.0 distinguishedName,omitempty"`
	LdapPassword         string  `xml:"http://www.cisco.com/AXL/API/9.0 ldapPassword,omitempty"`
	UserSearchBase       string  `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
	Servers              Anon820 `xml:"http://www.cisco.com/AXL/API/9.0 servers,omitempty"`
}

type UpdateLdapDirectoryReq struct {
	Name           string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid           XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName        string        `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	LdapDn         string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapDn,omitempty"`
	LdapPassword   string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapPassword,omitempty"`
	UserSearchBase string        `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
	Repeatable     Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 repeatable,omitempty"`
	IntervalValue  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 intervalValue,omitempty"`
	ScheduleUnit   XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	NextExecTime   string        `xml:"http://www.cisco.com/AXL/API/9.0 nextExecTime,omitempty"`
	Servers        Anon510       `xml:"http://www.cisco.com/AXL/API/9.0 servers,omitempty"`
	LdapFilter     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter,omitempty"`
	Sequence       uint64        `xml:"sequence,attr,omitempty"`
}

func (t *UpdateLdapDirectoryReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateLdapDirectoryReq
	var overlay struct {
		*T
		ScheduleUnit *XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ScheduleUnit = (*XScheduleUnit)(&overlay.T.ScheduleUnit)
	return d.DecodeElement(&overlay, &start)
}

type UpdateLdapFilterReq struct {
	Name     string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName  string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Filter   string `xml:"http://www.cisco.com/AXL/API/9.0 filter,omitempty"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateLdapSyncCustomFieldReq struct {
	Uuid                  XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName"`
	CustomUserField       string `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
	LdapUserField         string `xml:"http://www.cisco.com/AXL/API/9.0 ldapUserField,omitempty"`
	Sequence              uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateLdapSystemReq struct {
	SyncEnabled     Boolean     `xml:"http://www.cisco.com/AXL/API/9.0 syncEnabled,omitempty"`
	LdapServer      XLdapServer `xml:"http://www.cisco.com/AXL/API/9.0 ldapServer,omitempty"`
	UserIdAttribute string      `xml:"http://www.cisco.com/AXL/API/9.0 userIdAttribute,omitempty"`
}

type UpdateLicenseCapabilitiesReq struct {
	Uuid      XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Userid    string  `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	EnableUps Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
	EnableUpc Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
	Sequence  uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateLicenseCapabilitiesReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateLicenseCapabilitiesReq
	var overlay struct {
		*T
		EnableUps *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
		EnableUpc *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableUps = (*Boolean)(&overlay.T.EnableUps)
	overlay.EnableUpc = (*Boolean)(&overlay.T.EnableUpc)
	return d.DecodeElement(&overlay, &start)
}

type UpdateLineGroupReq struct {
	Name                      string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                      XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                   string               `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	DistributionAlgorithm     XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	RnaReversionTimeOut       XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
	HuntAlgorithmNoAnswer     XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
	HuntAlgorithmBusy         XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
	HuntAlgorithmNotAvailable XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	RemoveMembers             Anon135              `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers                Anon136              `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members                   Anon137              `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence                  uint64               `xml:"sequence,attr,omitempty"`
}

func (t *UpdateLineGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateLineGroupReq
	var overlay struct {
		*T
		DistributionAlgorithm     *XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
		RnaReversionTimeOut       *XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
		HuntAlgorithmNoAnswer     *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
		HuntAlgorithmBusy         *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
		HuntAlgorithmNotAvailable *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DistributionAlgorithm = (*XDistributeAlgorithm)(&overlay.T.DistributionAlgorithm)
	overlay.RnaReversionTimeOut = (*XInteger)(&overlay.T.RnaReversionTimeOut)
	overlay.HuntAlgorithmNoAnswer = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmNoAnswer)
	overlay.HuntAlgorithmBusy = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmBusy)
	overlay.HuntAlgorithmNotAvailable = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmNotAvailable)
	return d.DecodeElement(&overlay, &start)
}

type UpdateLineReq struct {
	Uuid                                 XUUID                        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName                   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern                           string                       `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                          string                       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName                XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	AarNeighborhoodName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	AarDestinationMask                   string                       `xml:"http://www.cisco.com/AXL/API/9.0 aarDestinationMask,omitempty"`
	AarKeepCallHistory                   Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarKeepCallHistory,omitempty"`
	AarVoiceMailEnabled                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarVoiceMailEnabled,omitempty"`
	CallForwardAll                       XCallForwardAll              `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAll,omitempty"`
	CallForwardBusy                      XCallForwardBusy             `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusy,omitempty"`
	CallForwardBusyInt                   XCallForwardBusyInt          `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusyInt,omitempty"`
	CallForwardNoAnswer                  XCallForwardNoAnswer         `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswer,omitempty"`
	CallForwardNoAnswerInt               XCallForwardNoAnswerInt      `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswerInt,omitempty"`
	CallForwardNoCoverage                XCallForwardNoCoverage       `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverage,omitempty"`
	CallForwardNoCoverageInt             XCallForwardNoCoverageInt    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverageInt,omitempty"`
	CallForwardOnFailure                 XCallForwardOnFailure        `xml:"http://www.cisco.com/AXL/API/9.0 callForwardOnFailure,omitempty"`
	CallForwardAlternateParty            XCallForwardAlternateParty   `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAlternateParty,omitempty"`
	CallForwardNotRegistered             XCallForwardNotRegistered    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegistered,omitempty"`
	CallForwardNotRegisteredInt          XCallForwardNotRegisteredInt `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegisteredInt,omitempty"`
	CallPickupGroupName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	AutoAnswer                           XAutoAnswer                  `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
	NetworkHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId             XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AlertingName                         string                       `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	PresenceGroupName                    XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	ShareLineAppearanceCssName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 shareLineAppearanceCssName,omitempty"`
	VoiceMailProfileName                 XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	PatternPrecedence                    XPatternPrecedence           `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                        XReleaseCauseValue           `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	HrDuration                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrDuration,omitempty"`
	HrInterval                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrInterval,omitempty"`
	CfaCssPolicy                         XCFACSSActivationPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
	DefaultActivatedDeviceName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 defaultActivatedDeviceName,omitempty"`
	ParkMonForwardNoRetrieveDn           string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveDn,omitempty"`
	ParkMonForwardNoRetrieveIntDn        string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntDn,omitempty"`
	ParkMonForwardNoRetrieveVmEnabled    Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveIntVmEnabled Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveCssName      XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveCssName,omitempty"`
	ParkMonForwardNoRetrieveIntCssName   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntCssName,omitempty"`
	ParkMonReversionTimer                XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 parkMonReversionTimer,omitempty"`
	PartyEntranceTone                    XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
	DirectoryURIs                        Anon361                      `xml:"http://www.cisco.com/AXL/API/9.0 directoryURIs,omitempty"`
	AllowCtiControlFlag                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RejectAnonymousCall                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousCall,omitempty"`
	Sequence                             uint64                       `xml:"sequence,attr,omitempty"`
}

func (t *UpdateLineReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateLineReq
	var overlay struct {
		*T
		AutoAnswer          *XAutoAnswer             `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
		PatternPrecedence   *XPatternPrecedence      `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ReleaseClause       *XReleaseCauseValue      `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		CfaCssPolicy        *XCFACSSActivationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
		PartyEntranceTone   *XStatus                 `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
		AllowCtiControlFlag *Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AutoAnswer = (*XAutoAnswer)(&overlay.T.AutoAnswer)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.CfaCssPolicy = (*XCFACSSActivationPolicy)(&overlay.T.CfaCssPolicy)
	overlay.PartyEntranceTone = (*XStatus)(&overlay.T.PartyEntranceTone)
	overlay.AllowCtiControlFlag = (*Boolean)(&overlay.T.AllowCtiControlFlag)
	return d.DecodeElement(&overlay, &start)
}

type UpdateLocationReq struct {
	Name                 string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Kbits                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 kbits,omitempty"`
	VideoKbits           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoKbits,omitempty"`
	RelatedLocations     Anon84   `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocations,omitempty"`
	WithinAudioBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
	WithinVideoBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
	WithinImmersiveKbits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	BetweenLocations     Anon85   `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocations,omitempty"`
	Sequence             uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateLocationReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateLocationReq
	var overlay struct {
		*T
		WithinAudioBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
		WithinVideoBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
		WithinImmersiveKbits *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.WithinAudioBandwidth = (*XInteger)(&overlay.T.WithinAudioBandwidth)
	overlay.WithinVideoBandwidth = (*XInteger)(&overlay.T.WithinVideoBandwidth)
	overlay.WithinImmersiveKbits = (*XInteger)(&overlay.T.WithinImmersiveKbits)
	return d.DecodeElement(&overlay, &start)
}

type UpdateMediaResourceGroupReq struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Multicast     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	RemoveMembers Anon48  `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon49  `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon50  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateMediaResourceListReq struct {
	Name          string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RemoveMembers Anon55 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon56 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon57 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateMeetMeReq struct {
	Uuid                  XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern               string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName    XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern            string              `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description           string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	MinimumSecurityLevel  XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 minimumSecurityLevel,omitempty"`
	Sequence              uint64              `xml:"sequence,attr,omitempty"`
}

type UpdateMessageWaitingReq struct {
	Uuid                    XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                 string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern              string  `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	NewRoutePartitionName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MessageWaitingIndicator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	CallingSearchSpaceName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Sequence                uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateMessageWaitingReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateMessageWaitingReq
	var overlay struct {
		*T
		MessageWaitingIndicator *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MessageWaitingIndicator = (*Boolean)(&overlay.T.MessageWaitingIndicator)
	return d.DecodeElement(&overlay, &start)
}

type UpdateMlppDomainReq struct {
	Uuid          XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DomainName    string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	NewDomainName string `xml:"http://www.cisco.com/AXL/API/9.0 newDomainName,omitempty"`
	DomainId      string `xml:"http://www.cisco.com/AXL/API/9.0 domainId,omitempty"`
	Sequence      uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateMobileVoiceAccessReq struct {
	Uuid               XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string        `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	NewPattern         string        `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	RoutePartitionName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	RemoveLocales      RemoveLocales `xml:"http://www.cisco.com/AXL/API/9.0 removeLocales,omitempty"`
	AddLocales         AddLocales    `xml:"http://www.cisco.com/AXL/API/9.0 addLocales,omitempty"`
	Locales            Anon200       `xml:"http://www.cisco.com/AXL/API/9.0 locales,omitempty"`
	Sequence           uint64        `xml:"sequence,attr,omitempty"`
}

type UpdateMobilityProfileReq struct {
	Name                      string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                      XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                   string         `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description               string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MobileClientCallingOption XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	DvofServiceAccessNumber   string         `xml:"http://www.cisco.com/AXL/API/9.0 dvofServiceAccessNumber,omitempty"`
	Dirn                      XDirn          `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	DvorCallerId              string         `xml:"http://www.cisco.com/AXL/API/9.0 dvorCallerId,omitempty"`
	Sequence                  uint64         `xml:"sequence,attr,omitempty"`
}

func (t *UpdateMobilityProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateMobilityProfileReq
	var overlay struct {
		*T
		MobileClientCallingOption *XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MobileClientCallingOption = (*XDialViaOffice)(&overlay.T.MobileClientCallingOption)
	return d.DecodeElement(&overlay, &start)
}

type UpdateMobilityReq struct {
	HandoffNumber           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 handoffNumber,omitempty"`
	DTMFNumber              XFkType `xml:"http://www.cisco.com/AXL/API/9.0 DTMFNumber,omitempty"`
	NewHandoffNumber        string  `xml:"http://www.cisco.com/AXL/API/9.0 newHandoffNumber,omitempty"`
	NewHandoffPartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newHandoffPartitionName,omitempty"`
	NewDTMFNumber           string  `xml:"http://www.cisco.com/AXL/API/9.0 newDTMFNumber,omitempty"`
	NewDTMFPartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newDTMFPartitionName,omitempty"`
}

type UpdateMohAudioSourceReq struct {
	Uuid                         XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	SourceId                     XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	NewName                      string            `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	SourceFile                   string            `xml:"http://www.cisco.com/AXL/API/9.0 sourceFile,omitempty"`
	Multicast                    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Repeat                       Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 repeat,omitempty"`
	MohFileStatus                XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 mohFileStatus,omitempty"`
	InitialAnnouncement          XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncement,omitempty"`
	PeriodicAnnouncement         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncement,omitempty"`
	PeriodicAnnouncementInterval XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
	LocaleAnnouncement           XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	InitialAnnouncementPlayed    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncementPlayed,omitempty"`
	Sequence                     uint64            `xml:"sequence,attr,omitempty"`
}

func (t *UpdateMohAudioSourceReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateMohAudioSourceReq
	var overlay struct {
		*T
		PeriodicAnnouncementInterval *XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
		LocaleAnnouncement           *XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PeriodicAnnouncementInterval = (*XInteger)(&overlay.T.PeriodicAnnouncementInterval)
	overlay.LocaleAnnouncement = (*XUserLocale)(&overlay.T.LocaleAnnouncement)
	return d.DecodeElement(&overlay, &start)
}

type UpdateMohServerReq struct {
	Name                    string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                    XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                 string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description             string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName            XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MaxUnicastConnections   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
	MaxMulticastConnections XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
	FixedAudioSourceDevice  string   `xml:"http://www.cisco.com/AXL/API/9.0 fixedAudioSourceDevice,omitempty"`
	RunFlag                 Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
	UseTrustedRelayPoint    XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	IsMultiCastEnabled      Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isMultiCastEnabled,omitempty"`
	BaseMulticastIpaddress  string   `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
	BaseMulticastPort       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
	MulticastIncrementOnIp  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	AudioSources            Anon374  `xml:"http://www.cisco.com/AXL/API/9.0 audioSources,omitempty"`
	Sequence                uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateMohServerReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateMohServerReq
	var overlay struct {
		*T
		MaxUnicastConnections   *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
		MaxMulticastConnections *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
		RunFlag                 *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
		UseTrustedRelayPoint    *XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		BaseMulticastIpaddress  *string   `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
		BaseMulticastPort       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
		MulticastIncrementOnIp  *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxUnicastConnections = (*XInteger)(&overlay.T.MaxUnicastConnections)
	overlay.MaxMulticastConnections = (*XInteger)(&overlay.T.MaxMulticastConnections)
	overlay.RunFlag = (*Boolean)(&overlay.T.RunFlag)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.BaseMulticastIpaddress = (*string)(&overlay.T.BaseMulticastIpaddress)
	overlay.BaseMulticastPort = (*XInteger)(&overlay.T.BaseMulticastPort)
	overlay.MulticastIncrementOnIp = (*Boolean)(&overlay.T.MulticastIncrementOnIp)
	return d.DecodeElement(&overlay, &start)
}

type UpdateMtpReq struct {
	Name              string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid              XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName           string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description       string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	TrustedRelayPoint Boolean `xml:"http://www.cisco.com/AXL/API/9.0 trustedRelayPoint,omitempty"`
	Sequence          uint64  `xml:"sequence,attr,omitempty"`
}

type UpdatePhoneButtonTemplateReq struct {
	Name     string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid     XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName  string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Buttons  Anon293 `xml:"http://www.cisco.com/AXL/API/9.0 buttons,omitempty"`
	Sequence uint64  `xml:"sequence,attr,omitempty"`
}

type UpdatePhoneNtpReq struct {
	Uuid         XUUID      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	IpAddress    string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	NewIpAddress string     `xml:"http://www.cisco.com/AXL/API/9.0 newIpAddress,omitempty"`
	Description  string     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mode         XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
	Sequence     uint64     `xml:"sequence,attr,omitempty"`
}

func (t *UpdatePhoneNtpReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdatePhoneNtpReq
	var overlay struct {
		*T
		Mode *XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Mode = (*XZzntpmode)(&overlay.T.Mode)
	return d.DecodeElement(&overlay, &start)
}

type UpdatePhoneReq struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                              XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                           string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName,omitempty"`
	NetworkLocation                   XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                   XLoadInformation      `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp                      string                `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName         XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	Lines                             Anon388               `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PhoneTemplateName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Anon389               `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    Anon390               `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	PrimaryPhoneName                  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	RingSettingIdleBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
	RingSettingBusyBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
	BlfDirectedCallParks              Anon391               `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      Anon392               `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale           `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkLocale                     XCountry              `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	IdleTimeout                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 idleTimeout,omitempty"`
	AuthenticationUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationUrl,omitempty"`
	DirectoryUrl                      string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryUrl,omitempty"`
	IdleUrl                           string                `xml:"http://www.cisco.com/AXL/API/9.0 idleUrl,omitempty"`
	InformationUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 informationUrl,omitempty"`
	MessagesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 messagesUrl,omitempty"`
	ProxyServerUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 proxyServerUrl,omitempty"`
	ServicesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 servicesUrl,omitempty"`
	Services                          Anon393               `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	SoftkeyTemplateName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	DefaultProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	EnableExtensionMobility           Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	SingleButtonBarge                 XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	BuiltInBridgeStatus               XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
	CallInfoPrivacyStatus             XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	HlogStatus                        XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	IgnorePresentationIndicators      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	PacketCaptureMode                 XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration             XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	AllowCtiControlFlag               Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	PresenceGroupName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnattendedPort                    Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	RequireDtmfReception              Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
	Rfc2833Disabled                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
	CertificateOperation              XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode                XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                           XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	AuthenticationString              string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	UpgradeFinishTime                 string                `xml:"http://www.cisco.com/AXL/API/9.0 upgradeFinishTime,omitempty"`
	DeviceMobilityMode                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	RemoteDevice                      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	IsActive                          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	MobilityUserIdName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobilityUserIdName,omitempty"`
	PhoneSuite                        XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	IsProtected                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
	MobileSmartClientProfileName      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	MtpRequired                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferedCodec                  XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
	DialRulesName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 dialRulesName,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	DigestUser                        string                `xml:"http://www.cisco.com/AXL/API/9.0 digestUser,omitempty"`
	OutboundCallRollover              XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
	HotlineDevice                     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	SecureInformationUrl              string                `xml:"http://www.cisco.com/AXL/API/9.0 secureInformationUrl,omitempty"`
	SecureDirectoryUrl                string                `xml:"http://www.cisco.com/AXL/API/9.0 secureDirectoryUrl,omitempty"`
	SecureMessageUrl                  string                `xml:"http://www.cisco.com/AXL/API/9.0 secureMessageUrl,omitempty"`
	SecureServicesUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServicesUrl,omitempty"`
	SecureAuthenticationUrl           string                `xml:"http://www.cisco.com/AXL/API/9.0 secureAuthenticationUrl,omitempty"`
	SecureIdleUrl                     string                `xml:"http://www.cisco.com/AXL/API/9.0 secureIdleUrl,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	DeviceTrustMode                   XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
	EarlyOfferSupportForVoiceCall     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	RequireThirdPartyRegistration     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireThirdPartyRegistration,omitempty"`
	BlockIncomingCallsWhenRoaming     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 blockIncomingCallsWhenRoaming,omitempty"`
	HomeNetworkId                     string                `xml:"http://www.cisco.com/AXL/API/9.0 homeNetworkId,omitempty"`
	AllowPresentationSharingUsingBfcp Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
	RequireOffPremiseLocation         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	Sequence                          uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdatePhoneReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdatePhoneReq
	var overlay struct {
		*T
		NetworkLocation                   *XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint              *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		RingSettingIdleBlfAudibleAlert    *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
		RingSettingBusyBlfAudibleAlert    *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
		SingleButtonBarge                 *XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		BuiltInBridgeStatus               *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
		CallInfoPrivacyStatus             *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
		IgnorePresentationIndicators      *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		UnattendedPort                    *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		RequireDtmfReception              *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
		Rfc2833Disabled                   *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
		CertificateOperation              *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
		AuthenticationMode                *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                           *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
		DeviceMobilityMode                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
		RemoteDevice                      *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
		DndOption                         *XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		IsActive                          *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
		PhoneSuite                        *XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
		PhoneServiceDisplay               *XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
		IsProtected                       *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
		MtpPreferedCodec                  *XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
		OutboundCallRollover              *XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
		HotlineDevice                     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
		AlwaysUsePrimeLine                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		DeviceTrustMode                   *XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
		EarlyOfferSupportForVoiceCall     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
		AllowPresentationSharingUsingBfcp *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
		RequireOffPremiseLocation         *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.RingSettingIdleBlfAudibleAlert = (*XStatus)(&overlay.T.RingSettingIdleBlfAudibleAlert)
	overlay.RingSettingBusyBlfAudibleAlert = (*XStatus)(&overlay.T.RingSettingBusyBlfAudibleAlert)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.BuiltInBridgeStatus = (*XStatus)(&overlay.T.BuiltInBridgeStatus)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.RequireDtmfReception = (*Boolean)(&overlay.T.RequireDtmfReception)
	overlay.Rfc2833Disabled = (*Boolean)(&overlay.T.Rfc2833Disabled)
	overlay.CertificateOperation = (*XCertificateOperation)(&overlay.T.CertificateOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	overlay.DeviceMobilityMode = (*XStatus)(&overlay.T.DeviceMobilityMode)
	overlay.RemoteDevice = (*Boolean)(&overlay.T.RemoteDevice)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.IsActive = (*Boolean)(&overlay.T.IsActive)
	overlay.PhoneSuite = (*XPhonePersonalization)(&overlay.T.PhoneSuite)
	overlay.PhoneServiceDisplay = (*XPhoneServiceDisplay)(&overlay.T.PhoneServiceDisplay)
	overlay.IsProtected = (*Boolean)(&overlay.T.IsProtected)
	overlay.MtpPreferedCodec = (*XSIPCodec)(&overlay.T.MtpPreferedCodec)
	overlay.OutboundCallRollover = (*XOutboundCallRollover)(&overlay.T.OutboundCallRollover)
	overlay.HotlineDevice = (*Boolean)(&overlay.T.HotlineDevice)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.DeviceTrustMode = (*XDeviceTrustMode)(&overlay.T.DeviceTrustMode)
	overlay.EarlyOfferSupportForVoiceCall = (*Boolean)(&overlay.T.EarlyOfferSupportForVoiceCall)
	overlay.AllowPresentationSharingUsingBfcp = (*Boolean)(&overlay.T.AllowPresentationSharingUsingBfcp)
	overlay.RequireOffPremiseLocation = (*Boolean)(&overlay.T.RequireOffPremiseLocation)
	return d.DecodeElement(&overlay, &start)
}

type UpdatePhoneSecurityProfileReq struct {
	Name                       string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                       XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                    string              `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DeviceSecurityMode         XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	AuthenticationMode         XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                    XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	TftpEncryptedConfig        Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
	NonceValidityTime          XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
	TransportType              XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	SipPhonePort               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	EnableDigestAuthentication Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
	ExcludeDigestCredentials   Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
	Sequence                   uint64              `xml:"sequence,attr,omitempty"`
}

func (t *UpdatePhoneSecurityProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdatePhoneSecurityProfileReq
	var overlay struct {
		*T
		AuthenticationMode         *XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                    *XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
		TftpEncryptedConfig        *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
		NonceValidityTime          *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
		TransportType              *XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
		SipPhonePort               *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
		EnableDigestAuthentication *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
		ExcludeDigestCredentials   *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	overlay.TftpEncryptedConfig = (*Boolean)(&overlay.T.TftpEncryptedConfig)
	overlay.NonceValidityTime = (*XInteger)(&overlay.T.NonceValidityTime)
	overlay.TransportType = (*XTransport)(&overlay.T.TransportType)
	overlay.SipPhonePort = (*XInteger)(&overlay.T.SipPhonePort)
	overlay.EnableDigestAuthentication = (*Boolean)(&overlay.T.EnableDigestAuthentication)
	overlay.ExcludeDigestCredentials = (*Boolean)(&overlay.T.ExcludeDigestCredentials)
	return d.DecodeElement(&overlay, &start)
}

type UpdatePhysicalLocationReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdatePresenceGroupReq struct {
	Name           string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid           XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName        string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description    string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PresenceGroups Anon251 `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroups,omitempty"`
	Sequence       uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateProcessNodeReq struct {
	Name        string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID       `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string      `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mac         XMacAddress `xml:"http://www.cisco.com/AXL/API/9.0 mac,omitempty"`
	Ipv6Name    string      `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Name,omitempty"`
	LbmHubGroup XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup,omitempty"`
	Sequence    uint64      `xml:"sequence,attr,omitempty"`
}

type UpdateProcessNodeServiceReq struct {
	Uuid            XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	TraceLevel      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
	UserCategories  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
	Enable          Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	NumFiles        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
	MaxFileSize     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
	Sequence        uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateProcessNodeServiceReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateProcessNodeServiceReq
	var overlay struct {
		*T
		TraceLevel     *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
		UserCategories *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
		Enable         *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
		NumFiles       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
		MaxFileSize    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TraceLevel = (*XInteger)(&overlay.T.TraceLevel)
	overlay.UserCategories = (*XInteger)(&overlay.T.UserCategories)
	overlay.Enable = (*Boolean)(&overlay.T.Enable)
	overlay.NumFiles = (*XInteger)(&overlay.T.NumFiles)
	overlay.MaxFileSize = (*XInteger)(&overlay.T.MaxFileSize)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRecordingProfileReq struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName             string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RecordingCssName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 recordingCssName,omitempty"`
	RecorderDestination string  `xml:"http://www.cisco.com/AXL/API/9.0 recorderDestination,omitempty"`
	Sequence            uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateRegionMatrixReq struct {
	Uuid            XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	RegionAName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionAName"`
	RegionBName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionBName"`
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
	Sequence        uint64        `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRegionMatrixReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRegionMatrixReq
	var overlay struct {
		*T
		VideoBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.VideoBandwidth = (*XInteger)(&overlay.T.VideoBandwidth)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRegionReq struct {
	Name           string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid           XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName        string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RelatedRegions Anon61 `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegions,omitempty"`
	Sequence       uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateRemoteClusterReq struct {
	Uuid       XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ClusterId  string               `xml:"http://www.cisco.com/AXL/API/9.0 clusterId"`
	Emcc       XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 emcc,omitempty"`
	PstnAccess XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	RsvpAgent  XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 rsvpAgent,omitempty"`
	Sequence   uint64               `xml:"sequence,attr,omitempty"`
}

type UpdateRemoteDestinationProfileReq struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                          XUUID             `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                       string            `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	Lines                         Anon357           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	CallInfoPrivacyStatus         XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	UserId                        string            `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	IgnorePresentationIndicators  Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	RerouteCallingSearchSpaceName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PrimaryPhoneName              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	DndOption                     XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndStatus                     Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	MobileSmartClientProfileName  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	Sequence                      uint64            `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRemoteDestinationProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRemoteDestinationProfileReq
	var overlay struct {
		*T
		CallInfoPrivacyStatus         *XStatus    `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
		IgnorePresentationIndicators  *Boolean    `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean    `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		DndOption                     *XDNDOption `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRemoteDestinationReq struct {
	Uuid                   XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Destination            string    `xml:"http://www.cisco.com/AXL/API/9.0 destination"`
	NewName                string    `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	NewDestination         string    `xml:"http://www.cisco.com/AXL/API/9.0 newDestination,omitempty"`
	AnswerTooSoonTimer     XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
	AnswerTooLateTimer     XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
	DelayBeforeRingingCell XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
	IsMobilePhone          Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
	EnableMobileConnect    Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
	LineAssociations       Anon417   `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociations,omitempty"`
	TimeZone               XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	TodAccessName          XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 todAccessName,omitempty"`
	MobileSmartClientName  XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientName,omitempty"`
	MobilityProfileName    XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfileName,omitempty"`
	Sequence               uint64    `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRemoteDestinationReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRemoteDestinationReq
	var overlay struct {
		*T
		AnswerTooSoonTimer     *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
		AnswerTooLateTimer     *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
		DelayBeforeRingingCell *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
		IsMobilePhone          *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
		EnableMobileConnect    *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
		TimeZone               *XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AnswerTooSoonTimer = (*XInteger)(&overlay.T.AnswerTooSoonTimer)
	overlay.AnswerTooLateTimer = (*XInteger)(&overlay.T.AnswerTooLateTimer)
	overlay.DelayBeforeRingingCell = (*XInteger)(&overlay.T.DelayBeforeRingingCell)
	overlay.IsMobilePhone = (*Boolean)(&overlay.T.IsMobilePhone)
	overlay.EnableMobileConnect = (*Boolean)(&overlay.T.EnableMobileConnect)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	return d.DecodeElement(&overlay, &start)
}

type UpdateResourcePriorityNamespaceListReq struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RemoveMembers Anon102 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon103 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon104 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateResourcePriorityNamespaceReq struct {
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Namespace    string  `xml:"http://www.cisco.com/AXL/API/9.0 namespace"`
	NewNamespace string  `xml:"http://www.cisco.com/AXL/API/9.0 newNamespace,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateRouteFilterReq struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid          XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName       string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	DialPlanName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RemoveMembers Anon145 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers    Anon146 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members       Anon147 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence      uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateRouteGroupReq struct {
	Name                  string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                  XUUID                `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName               string               `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	DistributionAlgorithm XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	RemoveMembers         Anon72               `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers            Anon73               `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members               Anon74               `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence              uint64               `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRouteGroupReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRouteGroupReq
	var overlay struct {
		*T
		DistributionAlgorithm *XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DistributionAlgorithm = (*XDistributeAlgorithm)(&overlay.T.DistributionAlgorithm)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRouteListReq struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	RemoveMembers        Anon203 `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers           Anon204 `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members              Anon205 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	RunOnEveryNode       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Sequence             uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRouteListReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRouteListReq
	var overlay struct {
		*T
		RouteListEnabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
		RunOnEveryNode   *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RouteListEnabled = (*Boolean)(&overlay.T.RouteListEnabled)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRoutePartitionReq struct {
	Name                         string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                         XUUID     `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                      string    `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                  string    `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	TimeScheduleIdName           XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleIdName,omitempty"`
	UseOriginatingDeviceTimeZone Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
	TimeZone                     XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	Sequence                     uint64    `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRoutePartitionReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRoutePartitionReq
	var overlay struct {
		*T
		UseOriginatingDeviceTimeZone *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
		TimeZone                     *XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseOriginatingDeviceTimeZone = (*Boolean)(&overlay.T.UseOriginatingDeviceTimeZone)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	return d.DecodeElement(&overlay, &start)
}

type UpdateRoutePatternReq struct {
	Uuid                           XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	NewPattern                     string             `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	NewDialPlanName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newDialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	NetworkLocation                XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	NewRouteFilterName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newRouteFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SupportOverlapSending          Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 supportOverlapSending,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	AllowDeviceOverride            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Destination                    Anon326            `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	AuthorizationCodeRequired      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 authorizationCodeRequired,omitempty"`
	AuthorizationLevelRequired     XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
	ClientCodeRequired             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 clientCodeRequired,omitempty"`
	IsdnNsfInfoElement             Anon327            `xml:"http://www.cisco.com/AXL/API/9.0 isdnNsfInfoElement,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	EnableDccEnforcement           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableDccEnforcement,omitempty"`
	BlockedCallPercentage          string             `xml:"http://www.cisco.com/AXL/API/9.0 blockedCallPercentage,omitempty"`
	Sequence                       uint64             `xml:"sequence,attr,omitempty"`
}

func (t *UpdateRoutePatternReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateRoutePatternReq
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		NetworkLocation              *XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		AllowDeviceOverride          *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		AuthorizationLevelRequired   *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
		RouteClass                   *XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.AllowDeviceOverride = (*Boolean)(&overlay.T.AllowDeviceOverride)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.AuthorizationLevelRequired = (*XInteger)(&overlay.T.AuthorizationLevelRequired)
	overlay.RouteClass = (*XPatternRouteClass)(&overlay.T.RouteClass)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSIPNormalizationScriptReq struct {
	Name                               string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                               XUUID                   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                            string                  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                        string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Content                            string                  `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
	ScriptExecutionErrorRecoveryAction XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
	SystemResourceErrorRecoveryAction  XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
	MaxMemoryThreshold                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
	MaxLuaInstructionsThreshold        string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	Sequence                           uint64                  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSIPNormalizationScriptReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSIPNormalizationScriptReq
	var overlay struct {
		*T
		ScriptExecutionErrorRecoveryAction *XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
		SystemResourceErrorRecoveryAction  *XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
		MaxMemoryThreshold                 *string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
		MaxLuaInstructionsThreshold        *string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ScriptExecutionErrorRecoveryAction = (*XSIPScriptErrorHandling)(&overlay.T.ScriptExecutionErrorRecoveryAction)
	overlay.SystemResourceErrorRecoveryAction = (*XSIPScriptErrorHandling)(&overlay.T.SystemResourceErrorRecoveryAction)
	overlay.MaxMemoryThreshold = (*string)(&overlay.T.MaxMemoryThreshold)
	overlay.MaxLuaInstructionsThreshold = (*string)(&overlay.T.MaxLuaInstructionsThreshold)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSNMPCommunityStringReq struct {
	CommunityName string                `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	NewValues     RSNMPCommunityString1 `xml:"http://www.cisco.com/AXL/API/9.0 newValues"`
	Sequence      uint64                `xml:"sequence,attr,omitempty"`
}

type UpdateSNMPCommunityStringRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSNMPMIB2ListReq struct {
	SysLocation string `xml:"http://www.cisco.com/AXL/API/9.0 sysLocation"`
	SysContact  string `xml:"http://www.cisco.com/AXL/API/9.0 sysContact"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSNMPMIB2ListRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSNMPUserReq struct {
	User     RSNMPUser `xml:"http://www.cisco.com/AXL/API/9.0 user,omitempty"`
	Sequence uint64    `xml:"sequence,attr,omitempty"`
}

type UpdateSNMPUserRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSafCcdPurgeBlockLearnedRoutesReq struct {
	Uuid                    XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	LearnedPattern          string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix    string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity     string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress               string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	NewLearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 newLearnedPattern,omitempty"`
	NewLearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 newLearnedPatternPrefix,omitempty"`
	NewCallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 newCallControlIdentity,omitempty"`
	NewIpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 newIpAddress,omitempty"`
	Sequence                uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSafForwarderReq struct {
	Name                       string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                       XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                    string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ClientLabel                string                `xml:"http://www.cisco.com/AXL/API/9.0 clientLabel,omitempty"`
	SafSecurityProfile         XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile,omitempty"`
	IpAddress                  string                `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	Port                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SafReconnectInterval       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
	SafNotificationsWindowSize XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	RemoveAssociatedCucms      RemoveAssociatedCucms `xml:"http://www.cisco.com/AXL/API/9.0 removeAssociatedCucms,omitempty"`
	AddAssociatedCucms         AddAssociatedCucms    `xml:"http://www.cisco.com/AXL/API/9.0 addAssociatedCucms,omitempty"`
	AssociatedCucms            Anon485               `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucms,omitempty"`
	Sequence                   uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSafForwarderReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSafForwarderReq
	var overlay struct {
		*T
		Port                       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		SafReconnectInterval       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
		SafNotificationsWindowSize *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.SafReconnectInterval = (*XInteger)(&overlay.T.SafReconnectInterval)
	overlay.SafNotificationsWindowSize = (*XInteger)(&overlay.T.SafNotificationsWindowSize)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSafSecurityProfileReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Userid      string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	Password    string `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateServiceParameterReq struct {
	Uuid            XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	Value           string   `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	Sequence        uint64   `xml:"sequence,attr,omitempty"`
}

type UpdateServiceProfileReq struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName             string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	ServiceProfileInfos Anon606 `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfos,omitempty"`
	Sequence            uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateSipDialRulesReq struct {
	Name           string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid           XUUID          `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName        string         `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description    string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RemovePatterns RemovePatterns `xml:"http://www.cisco.com/AXL/API/9.0 removePatterns,omitempty"`
	AddPatterns    AddPatterns    `xml:"http://www.cisco.com/AXL/API/9.0 addPatterns,omitempty"`
	Patterns       Anon340        `xml:"http://www.cisco.com/AXL/API/9.0 patterns,omitempty"`
	RemovePlars    RemovePlars    `xml:"http://www.cisco.com/AXL/API/9.0 removePlars,omitempty"`
	AddPlars       AddPlars       `xml:"http://www.cisco.com/AXL/API/9.0 addPlars,omitempty"`
	Plars          Anon341        `xml:"http://www.cisco.com/AXL/API/9.0 plars,omitempty"`
	Sequence       uint64         `xml:"sequence,attr,omitempty"`
}

type UpdateSipProfileReq struct {
	Name                                      string                     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                      XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                                   string                     `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                               string                     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DefaultTelephonyEventPayloadType          XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
	RedirectByApplication                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
	Ringing180                                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
	TimerInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
	TimerRegisterDelta                        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
	TimerRegister                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
	TimerT1                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
	TimerT2                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
	RetryInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
	RetryNotInvite                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
	StartMediaPort                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
	StopMediaPort                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
	CallpickupUri                             string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
	CallpickupListUri                         string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
	CallpickupGroupUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
	MeetmeServiceUrl                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
	UserInfo                                  XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
	DtmfDbLevel                               XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
	CallHoldRingback                          XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
	AnonymousCallBlock                        XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
	CallerIdBlock                             XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
	DndControl                                XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
	TelnetLevel                               XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
	TimerKeepAlive                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
	TimerSubscribe                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
	TimerSubscribeDelta                       XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
	MaxRedirects                              XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
	TimerOffHookToFirstDigit                  XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
	CallForwardUri                            string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
	AbbreviatedDialUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
	ConfJointEnable                           Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
	Rfc2543Hold                               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
	SemiAttendedTransfer                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
	EnableVad                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
	StutterMsgWaiting                         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
	CallStats                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
	T38Invite                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
	RerouteIncomingRequest                    XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
	ResourcePriorityNamespaceListName         XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceListName,omitempty"`
	EnableAnatForEarlyOfferCalls              Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
	RsvpOverSip                               XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
	FallbackToLocalRsvp                       Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
	SipRe11XxEnabled                          XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
	GClear                                    XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
	EarlyOfferSupportForVoiceCall             Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	SendRecvSDPInMidCallInvite                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
	EnableOutboundOptionsPing                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
	OptionsPingIntervalWhenStatusOK           XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
	OptionsPingIntervalWhenStatusNotOK        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
	DeliverConferenceBridgeIdentifier         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 deliverConferenceBridgeIdentifier,omitempty"`
	SipOptionsRetryCount                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
	SipOptionsRetryTimer                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
	SipBandwidthModifier                      XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
	EnableUriOutdialSupport                   string                     `xml:"http://www.cisco.com/AXL/API/9.0 enableUriOutdialSupport,omitempty"`
	UserAgentServerHeaderInfo                 XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
	AllowPresentationSharingUsingBfcp         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowPresentationSharingUsingBfcp,omitempty"`
	ScriptParameters                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	IsScriptTraceEnabled                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
	SipNormalizationScript                    XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScript,omitempty"`
	AllowiXApplicationMedia                   Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowiXApplicationMedia,omitempty"`
	DialStringInterpretation                  XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
	AcceptAudioCodecPreferences               XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
	MlppUserAuthorization                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
	IsAssuredSipServiceEnabled                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
	ResourcePriorityNamespace                 XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	CallerIdDn                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerName                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallingLineIdentification                 XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
	RejectAnonymousIncomingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousIncomingCall,omitempty"`
	RejectAnonymousOutgoingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousOutgoingCall,omitempty"`
	VideoCallTrafficClass                     XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
	Sequence                                  uint64                     `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSipProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSipProfileReq
	var overlay struct {
		*T
		DefaultTelephonyEventPayloadType   *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
		RedirectByApplication              *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
		Ringing180                         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
		TimerInvite                        *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
		TimerRegisterDelta                 *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
		TimerRegister                      *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
		TimerT1                            *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
		TimerT2                            *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
		RetryInvite                        *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
		RetryNotInvite                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
		StartMediaPort                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
		StopMediaPort                      *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
		CallpickupUri                      *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
		CallpickupListUri                  *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
		CallpickupGroupUri                 *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
		MeetmeServiceUrl                   *string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
		UserInfo                           *XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
		DtmfDbLevel                        *XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
		CallHoldRingback                   *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
		AnonymousCallBlock                 *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
		CallerIdBlock                      *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
		DndControl                         *XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
		TelnetLevel                        *XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
		TimerKeepAlive                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
		TimerSubscribe                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
		TimerSubscribeDelta                *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
		MaxRedirects                       *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
		TimerOffHookToFirstDigit           *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
		CallForwardUri                     *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
		AbbreviatedDialUri                 *string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
		ConfJointEnable                    *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
		Rfc2543Hold                        *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
		SemiAttendedTransfer               *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
		EnableVad                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
		StutterMsgWaiting                  *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
		CallStats                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
		T38Invite                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
		RerouteIncomingRequest             *XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
		EnableAnatForEarlyOfferCalls       *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
		RsvpOverSip                        *XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
		FallbackToLocalRsvp                *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
		SipRe11XxEnabled                   *XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
		GClear                             *XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
		EarlyOfferSupportForVoiceCall      *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
		SendRecvSDPInMidCallInvite         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
		EnableOutboundOptionsPing          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
		OptionsPingIntervalWhenStatusOK    *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
		OptionsPingIntervalWhenStatusNotOK *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
		SipOptionsRetryCount               *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
		SipOptionsRetryTimer               *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
		SipBandwidthModifier               *XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
		UserAgentServerHeaderInfo          *XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
		IsScriptTraceEnabled               *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
		DialStringInterpretation           *XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
		AcceptAudioCodecPreferences        *XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
		MlppUserAuthorization              *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
		IsAssuredSipServiceEnabled         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
		CallingLineIdentification          *XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
		VideoCallTrafficClass              *XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DefaultTelephonyEventPayloadType = (*XInteger)(&overlay.T.DefaultTelephonyEventPayloadType)
	overlay.RedirectByApplication = (*Boolean)(&overlay.T.RedirectByApplication)
	overlay.Ringing180 = (*Boolean)(&overlay.T.Ringing180)
	overlay.TimerInvite = (*XInteger)(&overlay.T.TimerInvite)
	overlay.TimerRegisterDelta = (*XInteger)(&overlay.T.TimerRegisterDelta)
	overlay.TimerRegister = (*XInteger)(&overlay.T.TimerRegister)
	overlay.TimerT1 = (*XInteger)(&overlay.T.TimerT1)
	overlay.TimerT2 = (*XInteger)(&overlay.T.TimerT2)
	overlay.RetryInvite = (*XInteger)(&overlay.T.RetryInvite)
	overlay.RetryNotInvite = (*XInteger)(&overlay.T.RetryNotInvite)
	overlay.StartMediaPort = (*XInteger)(&overlay.T.StartMediaPort)
	overlay.StopMediaPort = (*XInteger)(&overlay.T.StopMediaPort)
	overlay.CallpickupUri = (*string)(&overlay.T.CallpickupUri)
	overlay.CallpickupListUri = (*string)(&overlay.T.CallpickupListUri)
	overlay.CallpickupGroupUri = (*string)(&overlay.T.CallpickupGroupUri)
	overlay.MeetmeServiceUrl = (*string)(&overlay.T.MeetmeServiceUrl)
	overlay.UserInfo = (*XZzuserInfo)(&overlay.T.UserInfo)
	overlay.DtmfDbLevel = (*XZzdtmfDbLevel)(&overlay.T.DtmfDbLevel)
	overlay.CallHoldRingback = (*XZzpreff)(&overlay.T.CallHoldRingback)
	overlay.AnonymousCallBlock = (*XZzpreff)(&overlay.T.AnonymousCallBlock)
	overlay.CallerIdBlock = (*XZzpreff)(&overlay.T.CallerIdBlock)
	overlay.DndControl = (*XZzdndcontrol)(&overlay.T.DndControl)
	overlay.TelnetLevel = (*XTelnetLevel)(&overlay.T.TelnetLevel)
	overlay.TimerKeepAlive = (*XInteger)(&overlay.T.TimerKeepAlive)
	overlay.TimerSubscribe = (*XInteger)(&overlay.T.TimerSubscribe)
	overlay.TimerSubscribeDelta = (*XInteger)(&overlay.T.TimerSubscribeDelta)
	overlay.MaxRedirects = (*XInteger)(&overlay.T.MaxRedirects)
	overlay.TimerOffHookToFirstDigit = (*XInteger)(&overlay.T.TimerOffHookToFirstDigit)
	overlay.CallForwardUri = (*string)(&overlay.T.CallForwardUri)
	overlay.AbbreviatedDialUri = (*string)(&overlay.T.AbbreviatedDialUri)
	overlay.ConfJointEnable = (*Boolean)(&overlay.T.ConfJointEnable)
	overlay.Rfc2543Hold = (*Boolean)(&overlay.T.Rfc2543Hold)
	overlay.SemiAttendedTransfer = (*Boolean)(&overlay.T.SemiAttendedTransfer)
	overlay.EnableVad = (*Boolean)(&overlay.T.EnableVad)
	overlay.StutterMsgWaiting = (*Boolean)(&overlay.T.StutterMsgWaiting)
	overlay.CallStats = (*Boolean)(&overlay.T.CallStats)
	overlay.T38Invite = (*Boolean)(&overlay.T.T38Invite)
	overlay.RerouteIncomingRequest = (*XSIPReroute)(&overlay.T.RerouteIncomingRequest)
	overlay.EnableAnatForEarlyOfferCalls = (*Boolean)(&overlay.T.EnableAnatForEarlyOfferCalls)
	overlay.RsvpOverSip = (*XRSVPOverSIP)(&overlay.T.RsvpOverSip)
	overlay.FallbackToLocalRsvp = (*Boolean)(&overlay.T.FallbackToLocalRsvp)
	overlay.SipRe11XxEnabled = (*XSIPRel1XXOptions)(&overlay.T.SipRe11XxEnabled)
	overlay.GClear = (*XGClear)(&overlay.T.GClear)
	overlay.EarlyOfferSupportForVoiceCall = (*Boolean)(&overlay.T.EarlyOfferSupportForVoiceCall)
	overlay.SendRecvSDPInMidCallInvite = (*Boolean)(&overlay.T.SendRecvSDPInMidCallInvite)
	overlay.EnableOutboundOptionsPing = (*Boolean)(&overlay.T.EnableOutboundOptionsPing)
	overlay.OptionsPingIntervalWhenStatusOK = (*XInteger)(&overlay.T.OptionsPingIntervalWhenStatusOK)
	overlay.OptionsPingIntervalWhenStatusNotOK = (*XInteger)(&overlay.T.OptionsPingIntervalWhenStatusNotOK)
	overlay.SipOptionsRetryCount = (*XInteger)(&overlay.T.SipOptionsRetryCount)
	overlay.SipOptionsRetryTimer = (*XInteger)(&overlay.T.SipOptionsRetryTimer)
	overlay.SipBandwidthModifier = (*XSIPBandwidthModifier)(&overlay.T.SipBandwidthModifier)
	overlay.UserAgentServerHeaderInfo = (*XUserAgentServerHeaderInfo)(&overlay.T.UserAgentServerHeaderInfo)
	overlay.IsScriptTraceEnabled = (*Boolean)(&overlay.T.IsScriptTraceEnabled)
	overlay.DialStringInterpretation = (*XURIDisambiguationPolicy)(&overlay.T.DialStringInterpretation)
	overlay.AcceptAudioCodecPreferences = (*XStatus)(&overlay.T.AcceptAudioCodecPreferences)
	overlay.MlppUserAuthorization = (*Boolean)(&overlay.T.MlppUserAuthorization)
	overlay.IsAssuredSipServiceEnabled = (*Boolean)(&overlay.T.IsAssuredSipServiceEnabled)
	overlay.CallingLineIdentification = (*XCallingLineIdentification)(&overlay.T.CallingLineIdentification)
	overlay.VideoCallTrafficClass = (*XVideoCallTrafficClass)(&overlay.T.VideoCallTrafficClass)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSipRealmReq struct {
	Uuid              XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Realm             string `xml:"http://www.cisco.com/AXL/API/9.0 realm"`
	NewRealm          string `xml:"http://www.cisco.com/AXL/API/9.0 newRealm,omitempty"`
	Userid            string `xml:"http://www.cisco.com/AXL/API/9.0 userid,omitempty"`
	DigestCredentials string `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	Sequence          uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateSipRoutePatternReq struct {
	Uuid                           XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	NewPattern                     string           `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName          XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	BlockEnable                    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SipTrunkName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
	DnOrPatternIpv6                string           `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPatternIpv6,omitempty"`
	RouteOnUserPart                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 routeOnUserPart,omitempty"`
	UseCallerCss                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useCallerCss,omitempty"`
	DomainRoutingCssName           XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 domainRoutingCssName,omitempty"`
	Sequence                       uint64           `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSipRoutePatternReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSipRoutePatternReq
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSipTrunkReq struct {
	Name                                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                                      XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                                   string                   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                               string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                           XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                              XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MediaResourceListName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId               XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId                  XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	PacketCaptureMode                         XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                     XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	MlppDomainId                              string                   `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                     Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                           Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	UnattendedPort                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	TransmitUtf8                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SubscribeCallingSearchSpaceName           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	ReferCallingSearchSpaceName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 referCallingSearchSpaceName,omitempty"`
	MtpRequired                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	PresenceGroupName                         XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnknownPrefix                             string                   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	DestinationAddress                        string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	DestAddrIsSrv                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 destAddrIsSrv,omitempty"`
	Destinationport                           XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 destinationport,omitempty"`
	TkSipCodec                                XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
	SigDigits                                 Anon469                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	ConnectedNamePresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
	ConnectedPartyIdPresentation              XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
	CallingPartySelection                     XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	Callingname                               XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
	CallingLineIdPresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	PrefixDn                                  string                   `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CallerName                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerIdDn                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	AcceptInboundRdnis                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptInboundRdnis,omitempty"`
	AcceptOutboundRdnis                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutboundRdnis,omitempty"`
	SrtpAllowed                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	SrtpFallbackAllowed                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
	IsPaiEnabled                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
	SipPrivacy                                XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
	IsRpidEnabled                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
	SipAssertedType                           XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
	DestinationAddressIpv6                    string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddressIpv6,omitempty"`
	DtmfSignalingMethod                       XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
	RouteClassSignalling                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	SipTrunkType                              XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
	PstnAccess                                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseImePublicIpPort                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
	UseDevicePoolCntdPnTransformationCss      Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
	CntdPnTransformationCssName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	SipNormalizationScriptName                XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScriptName,omitempty"`
	RunOnEveryNode                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	RemoveDestinations                        Anon470                  `xml:"http://www.cisco.com/AXL/API/9.0 removeDestinations,omitempty"`
	AddDestinations                           Anon471                  `xml:"http://www.cisco.com/AXL/API/9.0 addDestinations,omitempty"`
	Destinations                              Anon472                  `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	UnknownStripDigits                        int                      `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	CgpnTransformationUnknownCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationUnknownCssName,omitempty"`
	TunneledProtocol                          XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                       XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                               XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	PathReplacementSupport                    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	EnableQsigUtf8                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
	ScriptParameters                          string                   `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	ScriptTraceEnabled                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
	TrunkTrafficSecure                        XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
	CallingAndCalledPartyInfoFormat           XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	RequestUriDomainName                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 requestUriDomainName,omitempty"`
	Sequence                                  uint64                   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSipTrunkReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSipTrunkReq
	var overlay struct {
		*T
		NetworkLocation                      *XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		PacketCaptureMode                    *XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration                *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		MlppIndicationStatus                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                           *XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio                *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UnattendedPort                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		TransmitUtf8                         *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		TkSipCodec                           *XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
		SigDigits                            *Anon469                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		ConnectedNamePresentation            *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
		ConnectedPartyIdPresentation         *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
		CallingPartySelection                *XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		Callingname                          *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
		CallingLineIdPresentation            *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		SrtpAllowed                          *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		SrtpFallbackAllowed                  *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
		IsPaiEnabled                         *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
		SipPrivacy                           *XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
		IsRpidEnabled                        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
		SipAssertedType                      *XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
		DtmfSignalingMethod                  *XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
		RouteClassSignalling                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
		SipTrunkType                         *XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
		PstnAccess                           *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseImePublicIpPort                   *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
		UseDevicePoolCntdPnTransformationCss *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn    *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		RunOnEveryNode                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
		TunneledProtocol                     *XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding                  *XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                          *XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		PathReplacementSupport               *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		EnableQsigUtf8                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
		ScriptTraceEnabled                   *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
		TrunkTrafficSecure                   *XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
		CallingAndCalledPartyInfoFormat      *XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.TkSipCodec = (*XSIPCodec)(&overlay.T.TkSipCodec)
	overlay.SigDigits = (*Anon469)(&overlay.T.SigDigits)
	overlay.ConnectedNamePresentation = (*XPresentationBit)(&overlay.T.ConnectedNamePresentation)
	overlay.ConnectedPartyIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedPartyIdPresentation)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.Callingname = (*XPresentationBit)(&overlay.T.Callingname)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.SrtpFallbackAllowed = (*Boolean)(&overlay.T.SrtpFallbackAllowed)
	overlay.IsPaiEnabled = (*Boolean)(&overlay.T.IsPaiEnabled)
	overlay.SipPrivacy = (*XSipPrivacy)(&overlay.T.SipPrivacy)
	overlay.IsRpidEnabled = (*Boolean)(&overlay.T.IsRpidEnabled)
	overlay.SipAssertedType = (*XSipAssertedType)(&overlay.T.SipAssertedType)
	overlay.DtmfSignalingMethod = (*XDTMFSignaling)(&overlay.T.DtmfSignalingMethod)
	overlay.RouteClassSignalling = (*XStatus)(&overlay.T.RouteClassSignalling)
	overlay.SipTrunkType = (*XTrunkService)(&overlay.T.SipTrunkType)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseImePublicIpPort = (*Boolean)(&overlay.T.UseImePublicIpPort)
	overlay.UseDevicePoolCntdPnTransformationCss = (*Boolean)(&overlay.T.UseDevicePoolCntdPnTransformationCss)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.EnableQsigUtf8 = (*Boolean)(&overlay.T.EnableQsigUtf8)
	overlay.ScriptTraceEnabled = (*Boolean)(&overlay.T.ScriptTraceEnabled)
	overlay.TrunkTrafficSecure = (*XSIPTrunkCallLegSecurity)(&overlay.T.TrunkTrafficSecure)
	overlay.CallingAndCalledPartyInfoFormat = (*XSIPIdentityBlend)(&overlay.T.CallingAndCalledPartyInfoFormat)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSipTrunkSecurityProfileReq struct {
	Name                             string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                             XUUID               `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                          string              `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode                     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	IncomingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
	OutgoingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 outgoingTransport,omitempty"`
	DigestAuthentication             Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
	NoncePolicyTime                  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
	X509SubjectName                  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	IncomingPort                     XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
	ApplLevelAuthentication          Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
	AcceptPresenceSubscription       Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification    Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader               Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	TransmitSecurityStatus           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
	SipV150OutboundSdpOfferFiltering XV150SDPFilter      `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
	Sequence                         uint64              `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSipTrunkSecurityProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSipTrunkSecurityProfileReq
	var overlay struct {
		*T
		IncomingTransport                *XTransport     `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
		DigestAuthentication             *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
		NoncePolicyTime                  *XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
		IncomingPort                     *XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
		ApplLevelAuthentication          *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
		AcceptPresenceSubscription       *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
		AcceptOutOfDialogRefer           *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
		AcceptUnsolicitedNotification    *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
		AllowReplaceHeader               *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
		TransmitSecurityStatus           *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
		SipV150OutboundSdpOfferFiltering *XV150SDPFilter `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IncomingTransport = (*XTransport)(&overlay.T.IncomingTransport)
	overlay.DigestAuthentication = (*Boolean)(&overlay.T.DigestAuthentication)
	overlay.NoncePolicyTime = (*XInteger)(&overlay.T.NoncePolicyTime)
	overlay.IncomingPort = (*XInteger)(&overlay.T.IncomingPort)
	overlay.ApplLevelAuthentication = (*Boolean)(&overlay.T.ApplLevelAuthentication)
	overlay.AcceptPresenceSubscription = (*Boolean)(&overlay.T.AcceptPresenceSubscription)
	overlay.AcceptOutOfDialogRefer = (*Boolean)(&overlay.T.AcceptOutOfDialogRefer)
	overlay.AcceptUnsolicitedNotification = (*Boolean)(&overlay.T.AcceptUnsolicitedNotification)
	overlay.AllowReplaceHeader = (*Boolean)(&overlay.T.AllowReplaceHeader)
	overlay.TransmitSecurityStatus = (*Boolean)(&overlay.T.TransmitSecurityStatus)
	overlay.SipV150OutboundSdpOfferFiltering = (*XV150SDPFilter)(&overlay.T.SipV150OutboundSdpOfferFiltering)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSoftKeySetReq struct {
	Name             string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid             XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	RemoveCallStates RemoveCallStates `xml:"http://www.cisco.com/AXL/API/9.0 removeCallStates,omitempty"`
	AddCallStates    AddCallStates    `xml:"http://www.cisco.com/AXL/API/9.0 addCallStates,omitempty"`
	CallStates       CallStates       `xml:"http://www.cisco.com/AXL/API/9.0 callStates,omitempty"`
	Sequence         uint64           `xml:"sequence,attr,omitempty"`
}

type UpdateSoftKeyTemplateReq struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateSrstReq struct {
	Name       string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid       XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName    string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Port       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	IpAddress  string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	SipNetwork string   `xml:"http://www.cisco.com/AXL/API/9.0 SipNetwork,omitempty"`
	SipPort    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	IsSecure   Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isSecure,omitempty"`
	Sequence   uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSrstReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSrstReq
	var overlay struct {
		*T
		Port    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		SipPort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.SipPort = (*XInteger)(&overlay.T.SipPort)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSyslogConfigurationReq struct {
	ServerName    string           `xml:"http://www.cisco.com/AXL/API/9.0 serverName"`
	ServiceGroup  XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	Service       string           `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	AlarmConfigs  Anon835          `xml:"http://www.cisco.com/AXL/API/9.0 alarmConfigs"`
	EndPointAlarm Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 EndPointAlarm,omitempty"`
	Sequence      uint64           `xml:"sequence,attr,omitempty"`
}

func (t *UpdateSyslogConfigurationReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateSyslogConfigurationReq
	var overlay struct {
		*T
		ServiceGroup *XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ServiceGroup = (*XServiceGrouping)(&overlay.T.ServiceGroup)
	return d.DecodeElement(&overlay, &start)
}

type UpdateSyslogConfigurationRes struct {
	Message  string `xml:"http://www.cisco.com/AXL/API/9.0 message"`
	Sequence uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateTimePeriodReq struct {
	Name           string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid           XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName        string       `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	StartTime      XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
	EndTime        XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
	StartDay       XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
	EndDay         XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
	MonthOfYear    XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
	DayOfMonth     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
	Description    string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DayOfMonthEnd  XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
	MonthOfYearEnd XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
	Sequence       uint64       `xml:"sequence,attr,omitempty"`
}

func (t *UpdateTimePeriodReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateTimePeriodReq
	var overlay struct {
		*T
		StartTime      *XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
		EndTime        *XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
		StartDay       *XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
		EndDay         *XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
		MonthOfYear    *XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
		DayOfMonth     *XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
		DayOfMonthEnd  *XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
		MonthOfYearEnd *XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartTime = (*XTimeOfDay)(&overlay.T.StartTime)
	overlay.EndTime = (*XTimeOfDay)(&overlay.T.EndTime)
	overlay.StartDay = (*XDayOfWeek)(&overlay.T.StartDay)
	overlay.EndDay = (*XDayOfWeek)(&overlay.T.EndDay)
	overlay.MonthOfYear = (*XMonthOfYear)(&overlay.T.MonthOfYear)
	overlay.DayOfMonth = (*XInteger)(&overlay.T.DayOfMonth)
	overlay.DayOfMonthEnd = (*XInteger)(&overlay.T.DayOfMonthEnd)
	overlay.MonthOfYearEnd = (*XMonthOfYear)(&overlay.T.MonthOfYearEnd)
	return d.DecodeElement(&overlay, &start)
}

type UpdateTimeScheduleReq struct {
	Name                 string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID                 `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string                `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RemoveMembers        RemoveMembers         `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers           AddMembers            `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members              Anon8                 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Description          string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	TimeScheduleCategory XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	Sequence             uint64                `xml:"sequence,attr,omitempty"`
}

func (t *UpdateTimeScheduleReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateTimeScheduleReq
	var overlay struct {
		*T
		TimeScheduleCategory *XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TimeScheduleCategory = (*XTimeScheduleCategory)(&overlay.T.TimeScheduleCategory)
	return d.DecodeElement(&overlay, &start)
}

type UpdateTodAccessReq struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Members     Anon13 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	Sequence    uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateTransPatternReq struct {
	Uuid                           XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	NewPattern                     string             `xml:"http://www.cisco.com/AXL/API/9.0 newPattern,omitempty"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewRoutePartitionName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newRoutePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	NewDialPlanName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newDialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	NewRouteFilterName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 newRouteFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	CallingSearchSpaceName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteNextHopByCgpn             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	CallInterceptProfileName       XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callInterceptProfileName,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	Sequence                       uint64             `xml:"sequence,attr,omitempty"`
}

func (t *UpdateTransPatternReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateTransPatternReq
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		RouteNextHopByCgpn           *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
		RouteClass                   *XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.RouteNextHopByCgpn = (*Boolean)(&overlay.T.RouteNextHopByCgpn)
	overlay.RouteClass = (*XPatternRouteClass)(&overlay.T.RouteClass)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	return d.DecodeElement(&overlay, &start)
}

type UpdateTranscoderReq struct {
	Name                   string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                   XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                string           `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description            string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName         XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LoadInformation        XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig           XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	IsTrustedRelayPoint    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	MaximumCapacity        XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	Sequence               uint64           `xml:"sequence,attr,omitempty"`
}

func (t *UpdateTranscoderReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateTranscoderReq
	var overlay struct {
		*T
		IsTrustedRelayPoint *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsTrustedRelayPoint = (*Boolean)(&overlay.T.IsTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type UpdateTransformationProfileReq struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                     XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                  string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description              string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalStripDigits      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalPrefix           string   `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix      string   `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix            string   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix         string   `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalCssName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 nationalCssName,omitempty"`
	InternationalCssName     XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 internationalCssName,omitempty"`
	UnknownCssName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 unknownCssName,omitempty"`
	SubscriberCssName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 subscriberCssName,omitempty"`
	Sequence                 uint64   `xml:"sequence,attr,omitempty"`
}

type UpdateTvsCertificateReq struct {
	Uuid         XUUID  `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber"`
	TimeToLive   int    `xml:"http://www.cisco.com/AXL/API/9.0 timeToLive,omitempty"`
	Sequence     uint64 `xml:"sequence,attr,omitempty"`
}

type UpdateUcServiceReq struct {
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID            `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName      string           `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description  string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Hostnameorip string           `xml:"http://www.cisco.com/AXL/API/9.0 hostnameorip,omitempty"`
	Port         XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Protocol     XConnectProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	UcServiceXml XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 ucServiceXml,omitempty"`
	Sequence     uint64           `xml:"sequence,attr,omitempty"`
}

type UpdateUserGroupReq struct {
	Name            string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid            XUUID           `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName         string          `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	RemoveMembers   Anon159         `xml:"http://www.cisco.com/AXL/API/9.0 removeMembers,omitempty"`
	AddMembers      Anon160         `xml:"http://www.cisco.com/AXL/API/9.0 addMembers,omitempty"`
	Members         Anon161         `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	RemoveUserRoles RemoveUserRoles `xml:"http://www.cisco.com/AXL/API/9.0 removeUserRoles,omitempty"`
	AddUserRoles    AddUserRoles    `xml:"http://www.cisco.com/AXL/API/9.0 addUserRoles,omitempty"`
	UserRoles       Anon162         `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
	Sequence        uint64          `xml:"sequence,attr,omitempty"`
}

type UpdateUserReq struct {
	Uuid                                  XUUID              `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Userid                                string             `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	FirstName                             string             `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	MiddleName                            string             `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	LastName                              string             `xml:"http://www.cisco.com/AXL/API/9.0 lastName,omitempty"`
	NewUserid                             string             `xml:"http://www.cisco.com/AXL/API/9.0 newUserid,omitempty"`
	Password                              string             `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                                   string             `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	TelephoneNumber                       string             `xml:"http://www.cisco.com/AXL/API/9.0 telephoneNumber,omitempty"`
	Mailid                                string             `xml:"http://www.cisco.com/AXL/API/9.0 mailid,omitempty"`
	Department                            string             `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
	Manager                               string             `xml:"http://www.cisco.com/AXL/API/9.0 manager,omitempty"`
	UserLocale                            XUserLocale        `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	AssociatedDevices                     Anon209            `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	PrimaryExtension                      Anon210            `xml:"http://www.cisco.com/AXL/API/9.0 primaryExtension,omitempty"`
	AssociatedPc                          string             `xml:"http://www.cisco.com/AXL/API/9.0 associatedPc,omitempty"`
	AssociatedGroups                      Anon211            `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	EnableCti                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
	DigestCredentials                     string             `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PhoneProfiles                         Anon214            `xml:"http://www.cisco.com/AXL/API/9.0 phoneProfiles,omitempty"`
	DefaultProfile                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfile,omitempty"`
	PresenceGroupName                     XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	SubscribeCallingSearchSpaceName       XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	EnableMobility                        Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
	EnableMobileVoiceAccess               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
	MaxDeskPickupWaitTime                 XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
	RemoteDestinationLimit                XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
	PasswordCredentials                   Anon215            `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	PinCredentials                        Anon216            `xml:"http://www.cisco.com/AXL/API/9.0 pinCredentials,omitempty"`
	PrimaryDevice                         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 primaryDevice,omitempty"`
	EnableEmcc                            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableEmcc,omitempty"`
	CtiControlledDeviceProfiles           Anon217            `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
	PatternPrecedence                     XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	NumericUserId                         string             `xml:"http://www.cisco.com/AXL/API/9.0 numericUserId,omitempty"`
	MlppPassword                          string             `xml:"http://www.cisco.com/AXL/API/9.0 mlppPassword,omitempty"`
	CustomUserFields                      Anon218            `xml:"http://www.cisco.com/AXL/API/9.0 customUserFields,omitempty"`
	HomeCluster                           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	ImAndPresenceEnable                   Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 imAndPresenceEnable,omitempty"`
	ServiceProfile                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile,omitempty"`
	LineAppearanceAssociationForPresences Anon219            `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresences,omitempty"`
	DirectoryUri                          string             `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
	Sequence                              uint64             `xml:"sequence,attr,omitempty"`
}

func (t *UpdateUserReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateUserReq
	var overlay struct {
		*T
		EnableCti               *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
		EnableMobility          *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
		EnableMobileVoiceAccess *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
		MaxDeskPickupWaitTime   *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
		RemoteDestinationLimit  *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
		PatternPrecedence       *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		HomeCluster             *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableCti = (*Boolean)(&overlay.T.EnableCti)
	overlay.EnableMobility = (*Boolean)(&overlay.T.EnableMobility)
	overlay.EnableMobileVoiceAccess = (*Boolean)(&overlay.T.EnableMobileVoiceAccess)
	overlay.MaxDeskPickupWaitTime = (*XInteger)(&overlay.T.MaxDeskPickupWaitTime)
	overlay.RemoteDestinationLimit = (*XInteger)(&overlay.T.RemoteDestinationLimit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.HomeCluster = (*Boolean)(&overlay.T.HomeCluster)
	return d.DecodeElement(&overlay, &start)
}

type UpdateVg224Req struct {
	Uuid                 XUUID         `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	DomainName           string        `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	NewDomainName        string        `xml:"http://www.cisco.com/AXL/API/9.0 newDomainName,omitempty"`
	Description          string        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	VendorConfig         XVendorConfig `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Sequence             uint64        `xml:"sequence,attr,omitempty"`
}

type UpdateVoiceMailPilotReq struct {
	Uuid        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Dirn        string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName     XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	NewDirn     string  `xml:"http://www.cisco.com/AXL/API/9.0 newDirn,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NewCssName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 newCssName,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateVoiceMailPortReq struct {
	Name                             string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                             XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName                          string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description                      string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallingSearchSpaceName           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                     XFkType `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	UseTrustedRelayPoint             XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName              XFkType `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	GeoLocationName                  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	DnPattern                        string  `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern,omitempty"`
	RoutePartition                   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	DnCallingSearchSpace             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dnCallingSearchSpace,omitempty"`
	AarNeighborhoodName              XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	CallerIdDisplay                  string  `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplay,omitempty"`
	CallerIdDisplayAscii             string  `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplayAscii,omitempty"`
	ExternalMask                     string  `xml:"http://www.cisco.com/AXL/API/9.0 externalMask,omitempty"`
	Sequence                         uint64  `xml:"sequence,attr,omitempty"`
}

func (t *UpdateVoiceMailPortReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateVoiceMailPortReq
	var overlay struct {
		*T
		UseTrustedRelayPoint *XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type UpdateVoiceMailProfileReq struct {
	Name             string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid             XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName          string   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description      string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault        Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	VoiceMailboxMask string   `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailboxMask,omitempty"`
	VoiceMailPilot   XVmPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot,omitempty"`
	Sequence         uint64   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateVoiceMailProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateVoiceMailProfileReq
	var overlay struct {
		*T
		IsDefault *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsDefault = (*Boolean)(&overlay.T.IsDefault)
	return d.DecodeElement(&overlay, &start)
}

type UpdateVpnGatewayReq struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid         XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName      string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Url          string  `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	Certificates Anon519 `xml:"http://www.cisco.com/AXL/API/9.0 certificates,omitempty"`
	Sequence     uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateVpnGroupReq struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid        XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName     string  `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	VpnGateways Anon523 `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateways,omitempty"`
	Sequence    uint64  `xml:"sequence,attr,omitempty"`
}

type UpdateVpnProfileReq struct {
	Name                 string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Uuid                 XUUID                    `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	NewName              string                   `xml:"http://www.cisco.com/AXL/API/9.0 newName,omitempty"`
	Description          string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoNetworkDetection Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 autoNetworkDetection,omitempty"`
	Mtu                  XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
	FailToConnect        XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
	ClientAuthentication XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	PwdPersistant        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pwdPersistant,omitempty"`
	EnableHostIdCheck    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableHostIdCheck,omitempty"`
	Sequence             uint64                   `xml:"sequence,attr,omitempty"`
}

func (t *UpdateVpnProfileReq) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T UpdateVpnProfileReq
	var overlay struct {
		*T
		Mtu                  *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
		FailToConnect        *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
		ClientAuthentication *XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Mtu = (*XInteger)(&overlay.T.Mtu)
	overlay.FailToConnect = (*XInteger)(&overlay.T.FailToConnect)
	overlay.ClientAuthentication = (*XVPNClientAuthentication)(&overlay.T.ClientAuthentication)
	return d.DecodeElement(&overlay, &start)
}

type UserGroup struct {
	Name      string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	UserRoles Anon1138 `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type UserRoles struct {
	UserRole []XUserGroupRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRole,omitempty"`
}

type VpnGateways struct {
	VpnGateway []XVpnGroupMember `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateway,omitempty"`
}

type XASN1RoseOidEncoding string

type XAarGroup struct {
	Name string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
}

type XAarGroupMatrix struct {
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit,omitempty"`
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName"`
}

type XAarGroupRelationship struct {
	AarGroupFromName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupFromName"`
	AarGroupToName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 aarGroupToName"`
	PrefixDigit      string  `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigit"`
}

type XAddOnModule struct {
	LoadInformation XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	Model           XModel           `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Index           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

func (t *XAddOnModule) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XAddOnModule
	var overlay struct {
		*T
		Model *XModel `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Model = (*XModel)(&overlay.T.Model)
	return d.DecodeElement(&overlay, &start)
}

type XAdminBoolean string

type XAdminError string

type XAlarmSeverity string

type XAlertSound string

type XAnalogPort struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits"`
	SigDigits                   Anon795                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	Lines                       Anon796                      `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit,omitempty"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold,omitempty"`
	SmdiPortNumber              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 smdiPortNumber,omitempty"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk,omitempty"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel,omitempty"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx,omitempty"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx,omitempty"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6"`
}

func (t *XAnalogPort) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XAnalogPort
	var overlay struct {
		*T
		DigitSending      *XDigitSending      `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
		SmdiPortNumber    *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 smdiPortNumber,omitempty"`
		StartDialProtocol *XStartDialProtocol `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DigitSending = (*XDigitSending)(&overlay.T.DigitSending)
	overlay.SmdiPortNumber = (*XInteger)(&overlay.T.SmdiPortNumber)
	overlay.StartDialProtocol = (*XStartDialProtocol)(&overlay.T.StartDialProtocol)
	return d.DecodeElement(&overlay, &start)
}

type XAnnouncement struct {
	Name             string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description      string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AnnouncementFile string `xml:"http://www.cisco.com/AXL/API/9.0 announcementFile,omitempty"`
}

type XAnnunciator struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName       XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	UseTrustedRelayPoint XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
}

func (t *XAnnunciator) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XAnnunciator
	var overlay struct {
		*T
		UseTrustedRelayPoint *XStatus `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type XAppOrDeviceReroute string

type XAppServer string

type XAppServerContent string

type XAppServerInfo struct {
	AppServerName    XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 appServerName"`
	AppServerContent XAppServerContent `xml:"http://www.cisco.com/AXL/API/9.0 appServerContent"`
	Content          XContent          `xml:"http://www.cisco.com/AXL/API/9.0 content,omitempty"`
}

type XAppUser struct {
	Userid                        string  `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Password                      string  `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	PasswordCredentials           Anon226 `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	DigestCredentials             string  `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PresenceGroupName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	AcceptPresenceSubscription    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer        Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	AssociatedDevices             Anon227 `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	AssociatedGroups              Anon228 `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	CtiControlledDeviceProfiles   Anon231 `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
}

func (t *XAppUser) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XAppUser
	var overlay struct {
		*T
		AcceptPresenceSubscription    *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
		AcceptOutOfDialogRefer        *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
		AcceptUnsolicitedNotification *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
		AllowReplaceHeader            *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AcceptPresenceSubscription = (*Boolean)(&overlay.T.AcceptPresenceSubscription)
	overlay.AcceptOutOfDialogRefer = (*Boolean)(&overlay.T.AcceptOutOfDialogRefer)
	overlay.AcceptUnsolicitedNotification = (*Boolean)(&overlay.T.AcceptUnsolicitedNotification)
	overlay.AllowReplaceHeader = (*Boolean)(&overlay.T.AllowReplaceHeader)
	return d.DecodeElement(&overlay, &start)
}

type XApplication string

type XApplicationDialRule string

type XApplicationDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
}

func (t *XApplicationDialRules) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XApplicationDialRules
	var overlay struct {
		*T
		NumberOfDigits    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
		DigitsToBeRemoved *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
		Priority          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NumberOfDigits = (*XInteger)(&overlay.T.NumberOfDigits)
	overlay.DigitsToBeRemoved = (*XInteger)(&overlay.T.DigitsToBeRemoved)
	overlay.Priority = (*XInteger)(&overlay.T.Priority)
	return d.DecodeElement(&overlay, &start)
}

type XApplicationServer struct {
	AppServerType   XAppServer `xml:"http://www.cisco.com/AXL/API/9.0 appServerType"`
	Name            string     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	IpAddress       string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
	AppUsers        AppUsers   `xml:"http://www.cisco.com/AXL/API/9.0 appUsers,omitempty"`
	Url             string     `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	EndUserUrl      string     `xml:"http://www.cisco.com/AXL/API/9.0 endUserUrl,omitempty"`
	ProcessNodeName XFkType    `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	EndUsers        EndUsers   `xml:"http://www.cisco.com/AXL/API/9.0 endUsers,omitempty"`
}

type XApplicationToSoftKeyTemplate struct {
	SoftKeyTemplateName         XFkType `xml:"http://www.cisco.com/AXL/API/9.0 softKeyTemplateName"`
	StandardSoftKeyTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 standardSoftKeyTemplateName"`
	Uuid                        XUUID   `xml:"uuid,attr,omitempty"`
}

type XApplicationUserCapfProfile struct {
	ApplicationUser      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser"`
	InstanceId           string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	CertificateOperation XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode   XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize              XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion  string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
}

func (t *XApplicationUserCapfProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XApplicationUserCapfProfile
	var overlay struct {
		*T
		CertificateOperation *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
		AuthenticationMode   *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize              *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CertificateOperation = (*XCertificateOperation)(&overlay.T.CertificateOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	return d.DecodeElement(&overlay, &start)
}

type XApplyToCall string

type XAudioCodecPreferenceList struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description  string       `xml:"http://www.cisco.com/AXL/API/9.0 description"`
	CodecsInList CodecsInList `xml:"http://www.cisco.com/AXL/API/9.0 codecsInList"`
}

type XAudit string

type XAuthenticationMode string

type XAutoAnswer string

type XBATFile string

type XBATFileSubClause string

type XBATFrequency string

type XBATFunction string

type XBATJobStatus string

type XBATResultStatus string

type XBATTarget string

type XBATUsage string

type XBLFDirectedCallPark struct {
	Label                          string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	DirectedCallParkId             XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkId"`
	DirectedCallParkDnAndPartition Anon794  `xml:"http://www.cisco.com/AXL/API/9.0 directedCallParkDnAndPartition"`
	LabelAscii                     string   `xml:"http://www.cisco.com/AXL/API/9.0 labelAscii,omitempty"`
	Index                          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type XBLFSDOption string

type XBandwidth string

type XBarge string

type XBillingServer struct {
	HostName              string                 `xml:"http://www.cisco.com/AXL/API/9.0 hostName"`
	UserId                string                 `xml:"http://www.cisco.com/AXL/API/9.0 userId"`
	Password              string                 `xml:"http://www.cisco.com/AXL/API/9.0 password"`
	Directory             string                 `xml:"http://www.cisco.com/AXL/API/9.0 directory"`
	ResendOnFailure       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
	BillingServerProtocol XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
}

func (t *XBillingServer) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XBillingServer
	var overlay struct {
		*T
		ResendOnFailure       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 resendOnFailure,omitempty"`
		BillingServerProtocol *XBillingserverprotocol `xml:"http://www.cisco.com/AXL/API/9.0 billingServerProtocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ResendOnFailure = (*Boolean)(&overlay.T.ResendOnFailure)
	overlay.BillingServerProtocol = (*XBillingserverprotocol)(&overlay.T.BillingServerProtocol)
	return d.DecodeElement(&overlay, &start)
}

type XBillingserverprotocol string

type XBitPos string

type XBoolean string

type XBriProtocol string

type XBusyLampField struct {
	BlfDest                 string   `xml:"http://www.cisco.com/AXL/API/9.0 blfDest"`
	BlfDirn                 string   `xml:"http://www.cisco.com/AXL/API/9.0 blfDirn"`
	RoutePartition          string   `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	Label                   string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel              string   `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	AssociatedBlfSdFeatures Anon793  `xml:"http://www.cisco.com/AXL/API/9.0 associatedBlfSdFeatures,omitempty"`
	Index                   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type XButton struct {
	Feature      XFeature `xml:"http://www.cisco.com/AXL/API/9.0 feature"`
	Label        string   `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	ButtonNumber XInteger `xml:"http://www.cisco.com/AXL/API/9.0 buttonNumber"`
}

type XCFACSSActivationPolicy string

type XCOSRouting string

type XCOSRoutingClassification string

type XCSUParam string

type XCallForwardAll struct {
	ForwardToVoiceMail              Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName          XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	SecondaryCallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 secondaryCallingSearchSpaceName,omitempty"`
	Destination                     string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardAlternateParty struct {
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type XCallForwardBusy struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardBusyInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardNoAnswer struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type XCallForwardNoAnswerInt struct {
	ForwardToVoiceMail     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	Duration               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 duration,omitempty"`
}

type XCallForwardNoCoverage struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardNoCoverageInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardNotRegistered struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardNotRegisteredInt struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallForwardOnFailure struct {
	ForwardToVoiceMail     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 forwardToVoiceMail,omitempty"`
	CallingSearchSpaceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string  `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
}

type XCallInfoDisplay string

type XCallManager struct {
	Name             string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description      string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoRegistration AutoRegistration `xml:"http://www.cisco.com/AXL/API/9.0 autoRegistration,omitempty"`
	Ports            Ports            `xml:"http://www.cisco.com/AXL/API/9.0 ports"`
	ProcessNodeName  XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	LbmGroup         XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 lbmGroup,omitempty"`
	Ctiid            int              `xml:"ctiid,attr,omitempty"`
}

type XCallManagerGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	TftpDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 tftpDefault,omitempty"`
	Members     Anon151 `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

type XCallManagerMember struct {
	CallManagerName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName"`
	Priority        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority"`
}

type XCallPark struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallManagerName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
}

type XCallPickupGroup struct {
	Pattern                       string                        `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                   string                        `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName            XFkType                       `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Name                          string                        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Members                       Anon453                       `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	PickupNotification            XPickupNotification           `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
	PickupNotificationTimer       XInteger                      `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	CallInfoForPickupNotification CallInfoForPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 callInfoForPickupNotification,omitempty"`
}

func (t *XCallPickupGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCallPickupGroup
	var overlay struct {
		*T
		PickupNotification      *XPickupNotification `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotification,omitempty"`
		PickupNotificationTimer *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 pickupNotificationTimer,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PickupNotification = (*XPickupNotification)(&overlay.T.PickupNotification)
	overlay.PickupNotificationTimer = (*XInteger)(&overlay.T.PickupNotificationTimer)
	return d.DecodeElement(&overlay, &start)
}

type XCallState string

type XCallStateMember struct {
	CallStateName string   `xml:"http://www.cisco.com/AXL/API/9.0 callStateName,omitempty"`
	SoftKeys      SoftKeys `xml:"http://www.cisco.com/AXL/API/9.0 softKeys,omitempty"`
}

type XCallTreatmentOnFailure string

type XCalledPartyTracing struct {
	Directorynumber string `xml:"http://www.cisco.com/AXL/API/9.0 directorynumber"`
	Description     string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XCalledPartyTransformationPattern struct {
	Pattern                       string         `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                   string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName            XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CalledPartyTransformationMask string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	DialPlanName                  XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName   XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	RouteFilterName               XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CalledPartyPrefixDigits       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyPrefixDigits,omitempty"`
	CalledPartyNumberingPlan      XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType         XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
}

func (t *XCalledPartyTransformationPattern) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCalledPartyTransformationPattern
	var overlay struct {
		*T
		CalledPartyNumberingPlan *XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType    *XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	return d.DecodeElement(&overlay, &start)
}

type XCallerFilterList struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsAllowedType Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isAllowedType,omitempty"`
	EndUserIdName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 endUserIdName,omitempty"`
	Members       Anon23  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

func (t *XCallerFilterList) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCallerFilterList
	var overlay struct {
		*T
		IsAllowedType *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isAllowedType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsAllowedType = (*Boolean)(&overlay.T.IsAllowedType)
	return d.DecodeElement(&overlay, &start)
}

type XCallerFilterListMember struct {
	DnMask           string            `xml:"http://www.cisco.com/AXL/API/9.0 DnMask"`
	CallerFilterMask XCallerFilterMask `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterMask,omitempty"`
}

func (t *XCallerFilterListMember) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCallerFilterListMember
	var overlay struct {
		*T
		CallerFilterMask *XCallerFilterMask `xml:"http://www.cisco.com/AXL/API/9.0 callerFilterMask,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CallerFilterMask = (*XCallerFilterMask)(&overlay.T.CallerFilterMask)
	return d.DecodeElement(&overlay, &start)
}

type XCallerFilterMask string

type XCallerID string

type XCallingLineIdentification string

type XCallingPartySelection string

type XCallingPartyTransformationPattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	DialPlanName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	RouteFilterName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
}

func (t *XCallingPartyTransformationPattern) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCallingPartyTransformationPattern
	var overlay struct {
		*T
		UseCallingPartyPhoneMask   *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingPartyNumberingPlan  *XNumberingPlan   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType     *XPriOfNumber     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	return d.DecodeElement(&overlay, &start)
}

type XCallingSearchSpaceMember struct {
	RoutePartitionName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName"`
	Index              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type XCallsQueue struct {
	MaxCallersInQueue                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxCallersInQueue,omitempty"`
	QueueFullDestination             string   `xml:"http://www.cisco.com/AXL/API/9.0 queueFullDestination,omitempty"`
	CallingSearchSpacePilotQueueFull XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpacePilotQueueFull,omitempty"`
	MaxWaitTimeInQueue               XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeInQueue,omitempty"`
	MaxWaitTimeDestination           string   `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeDestination,omitempty"`
	CallingSearchSpaceMaxWaitTime    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceMaxWaitTime,omitempty"`
	NoAgentDestination               string   `xml:"http://www.cisco.com/AXL/API/9.0 noAgentDestination,omitempty"`
	CallingSearchSpaceNoAgent        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceNoAgent,omitempty"`
	NetworkHoldMohAudioSourceID      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceID,omitempty"`
}

func (t *XCallsQueue) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCallsQueue
	var overlay struct {
		*T
		MaxCallersInQueue  *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxCallersInQueue,omitempty"`
		MaxWaitTimeInQueue *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxWaitTimeInQueue,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxCallersInQueue = (*XInteger)(&overlay.T.MaxCallersInQueue)
	overlay.MaxWaitTimeInQueue = (*XInteger)(&overlay.T.MaxWaitTimeInQueue)
	return d.DecodeElement(&overlay, &start)
}

type XCarrierSelectCode string

type XCcdAdvertisingService struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description  string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	HostDnGroup  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 hostDnGroup"`
	SafSipTrunk  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safSipTrunk,omitempty"`
	SafH323Trunk XFkType `xml:"http://www.cisco.com/AXL/API/9.0 safH323Trunk,omitempty"`
}

type XCcdHostedDN struct {
	HostedPattern             string   `xml:"http://www.cisco.com/AXL/API/9.0 hostedPattern"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CcdHostedDnGroup          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 CcdHostedDnGroup"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
}

func (t *XCcdHostedDN) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCcdHostedDN
	var overlay struct {
		*T
		UsePstnFailover *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePstnFailover = (*Boolean)(&overlay.T.UsePstnFailover)
	return d.DecodeElement(&overlay, &start)
}

type XCcdHostedDNGroup struct {
	Name                      string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description               string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PstnFailoverStripDigits   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverStripDigits,omitempty"`
	PstnFailoverPrependDigits string   `xml:"http://www.cisco.com/AXL/API/9.0 pstnFailoverPrependDigits,omitempty"`
	UsePstnFailover           Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
}

func (t *XCcdHostedDNGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCcdHostedDNGroup
	var overlay struct {
		*T
		UsePstnFailover *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePstnFailover,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UsePstnFailover = (*Boolean)(&overlay.T.UsePstnFailover)
	return d.DecodeElement(&overlay, &start)
}

type XCcdRequestingService struct {
	Name                 string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description          string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsActivated          Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	RoutePartitionName   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	LearnedPatternPrefix string           `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	PstnPrefix           string           `xml:"http://www.cisco.com/AXL/API/9.0 pstnPrefix,omitempty"`
	AssociatedTrunks     AssociatedTrunks `xml:"http://www.cisco.com/AXL/API/9.0 associatedTrunks,omitempty"`
}

type XCcdRequestingServiceMember struct {
	TrunkName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 trunkName"`
}

type XCcmExternalIpMap struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName,omitempty"`
	IpAddressHost   string  `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressHost,omitempty"`
	Port            string  `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

func (t *XCcmExternalIpMap) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCcmExternalIpMap
	var overlay struct {
		*T
		Port *string `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*string)(&overlay.T.Port)
	return d.DecodeElement(&overlay, &start)
}

type XCertificate string

type XCertificateOperation string

type XCertificateRole struct {
	RoleName XTrustRole `xml:"http://www.cisco.com/AXL/API/9.0 roleName,omitempty"`
}

type XCertificateService string

type XCertificateStatus string

type XCertificateVerificationLevel string

type XChangeNotifySubscribe string

type XCiscoCatalyst600024PortFXSGateway struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                    XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	Ports                            Anon433              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	PortSelectionOrder               XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 portSelectionOrder"`
	TransmitUtf8                     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
}

func (t *XCiscoCatalyst600024PortFXSGateway) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCiscoCatalyst600024PortFXSGateway
	var overlay struct {
		*T
		ProtocolSide         *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		TransmitUtf8         *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	return d.DecodeElement(&overlay, &start)
}

type XCiscoCatalyst6000E1VoIPGateway struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi"`
	SigDigits                          Anon438                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
}

func (t *XCiscoCatalyst6000E1VoIPGateway) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCiscoCatalyst6000E1VoIPGateway
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingPlan                       *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChanIe                            *XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		FirstDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
		InterfaceId                       *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
		IntraDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
		NumDigitsToStrip                  *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
		CallingLinePresentationBit        *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		ConnectedLineIdPresentation       *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
		SecurityAccessLevel               *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
		SmdiBasePort                      *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		V150                              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QSIGVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChanIe = (*XPRIChanIE)(&overlay.T.ChanIe)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.FirstDelay = (*XInteger)(&overlay.T.FirstDelay)
	overlay.InterfaceId = (*XInteger)(&overlay.T.InterfaceId)
	overlay.IntraDelay = (*XInteger)(&overlay.T.IntraDelay)
	overlay.NumDigitsToStrip = (*XInteger)(&overlay.T.NumDigitsToStrip)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.ConnectedLineIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedLineIdPresentation)
	overlay.SecurityAccessLevel = (*XInteger)(&overlay.T.SecurityAccessLevel)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QSIGVariant = (*XQSIGVariant)(&overlay.T.QSIGVariant)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type XCiscoCatalyst6000T1VoIPGatewayPri struct {
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIe                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIE                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIE"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi"`
	SigDigits                          Anon443                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QSIGVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
}

func (t *XCiscoCatalyst6000T1VoIPGatewayPri) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCiscoCatalyst6000T1VoIPGatewayPri
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		MlppPreemption                    *XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingPlan                       *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChanIe                            *XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIe,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		FirstDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
		InterfaceId                       *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
		IntraDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
		NumDigitsToStrip                  *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip,omitempty"`
		CallingLinePresentationBit        *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		ConnectedLineIdPresentation       *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
		SecurityAccessLevel               *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
		SmdiBasePort                      *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		V150                              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QSIGVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 QSIGVariant,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.MlppPreemption = (*XPreemption)(&overlay.T.MlppPreemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChanIe = (*XPRIChanIE)(&overlay.T.ChanIe)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.FirstDelay = (*XInteger)(&overlay.T.FirstDelay)
	overlay.InterfaceId = (*XInteger)(&overlay.T.InterfaceId)
	overlay.IntraDelay = (*XInteger)(&overlay.T.IntraDelay)
	overlay.NumDigitsToStrip = (*XInteger)(&overlay.T.NumDigitsToStrip)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.ConnectedLineIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedLineIdPresentation)
	overlay.SecurityAccessLevel = (*XInteger)(&overlay.T.SecurityAccessLevel)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QSIGVariant = (*XQSIGVariant)(&overlay.T.QSIGVariant)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type XCiscoCatalyst6000T1VoIPGatewayT1 struct {
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation"`
	Ports                            Anon448              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
}

func (t *XCiscoCatalyst6000T1VoIPGatewayT1) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCiscoCatalyst6000T1VoIPGatewayT1
	var overlay struct {
		*T
		ProtocolSide                  *XProtocolSide    `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation               *XNetworkLocation `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                    *XPreemption      `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio         *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		DigitSending                  *XDigitSending    `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
		FdlChannel                    *XFDLChannel      `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
		YellowAlarm                   *XYellowAlarm     `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
		ZeroSupression                *XZeroSuppression `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
		SmdiBasePort                  *XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		HandleDtmfPrecedenceSignals   *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
		UseDevicePoolCdpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PstnAccess                    *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.DigitSending = (*XDigitSending)(&overlay.T.DigitSending)
	overlay.FdlChannel = (*XFDLChannel)(&overlay.T.FdlChannel)
	overlay.YellowAlarm = (*XYellowAlarm)(&overlay.T.YellowAlarm)
	overlay.ZeroSupression = (*XZeroSuppression)(&overlay.T.ZeroSupression)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.HandleDtmfPrecedenceSignals = (*Boolean)(&overlay.T.HandleDtmfPrecedenceSignals)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type XClass string

type XClientAppModel string

type XClockReference string

type XCmcInfo struct {
	Code        string `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XCodec string

type XCommonDeviceConfig struct {
	Name                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	SoftkeyTemplateName               XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	UserLocale                        XUserLocale                  `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	MlppDomainId                      string                       `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	UseTrustedRelayPoint              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	Preemption                        XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	IpAddressingMode                  XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
	IpAddressingModePreferenceControl XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
	AllowAutoConfigurationForPhones   XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
	UseImeForOutboundCalls            XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
}

func (t *XCommonDeviceConfig) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCommonDeviceConfig
	var overlay struct {
		*T
		MlppIndicationStatus              *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		UseTrustedRelayPoint              *Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		Preemption                        *XPreemption                  `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		IpAddressingMode                  *XIPAddressingMode            `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingMode,omitempty"`
		IpAddressingModePreferenceControl *XIPAddressingModePrefControl `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressingModePreferenceControl,omitempty"`
		AllowAutoConfigurationForPhones   *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 allowAutoConfigurationForPhones,omitempty"`
		UseImeForOutboundCalls            *XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 useImeForOutboundCalls,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.UseTrustedRelayPoint = (*Boolean)(&overlay.T.UseTrustedRelayPoint)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.IpAddressingMode = (*XIPAddressingMode)(&overlay.T.IpAddressingMode)
	overlay.IpAddressingModePreferenceControl = (*XIPAddressingModePrefControl)(&overlay.T.IpAddressingModePreferenceControl)
	overlay.AllowAutoConfigurationForPhones = (*XStatus)(&overlay.T.AllowAutoConfigurationForPhones)
	overlay.UseImeForOutboundCalls = (*XStatus)(&overlay.T.UseImeForOutboundCalls)
	return d.DecodeElement(&overlay, &start)
}

type XCommonMembersExtension struct {
}

type XCommonPhoneConfig struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UnlockPwd                         string                `xml:"http://www.cisco.com/AXL/API/9.0 unlockPwd,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndAlertingType                   XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
	BackgroundImage                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
	PhonePersonalization              XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	VpnGroupName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnGroupName,omitempty"`
	VpnProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 vpnProfileName,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
}

func (t *XCommonPhoneConfig) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCommonPhoneConfig
	var overlay struct {
		*T
		DndOption                         *XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		DndAlertingType                   *XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndAlertingType,omitempty"`
		BackgroundImage                   *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 backgroundImage,omitempty"`
		PhonePersonalization              *XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phonePersonalization,omitempty"`
		PhoneServiceDisplay               *XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
		AlwaysUsePrimeLine                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.DndAlertingType = (*XRingSetting)(&overlay.T.DndAlertingType)
	overlay.BackgroundImage = (*Boolean)(&overlay.T.BackgroundImage)
	overlay.PhonePersonalization = (*XPhonePersonalization)(&overlay.T.PhonePersonalization)
	overlay.PhoneServiceDisplay = (*XPhoneServiceDisplay)(&overlay.T.PhoneServiceDisplay)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	return d.DecodeElement(&overlay, &start)
}

type XConferenceBridge struct {
	Name                       string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                    XProduct                 `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	DevicePoolName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	SubUnit                    XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	LoadInformation            XLoadInformation         `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig               XVendorConfig            `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MaximumCapacity            XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
	UseTrustedRelayPoint       XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName        XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	DestinationAddress         string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	McuConferenceBridgeSipPort XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
	SipProfile                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipProfile,omitempty"`
	SrtpAllowed                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	NormalizationScript        XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScript,omitempty"`
	EnableTrace                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableTrace,omitempty"`
	NormalizationScriptInfos   NormalizationScriptInfos `xml:"http://www.cisco.com/AXL/API/9.0 normalizationScriptInfos,omitempty"`
	UserName                   string                   `xml:"http://www.cisco.com/AXL/API/9.0 userName,omitempty"`
	Password                   string                   `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	HttpPort                   XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
	UseHttps                   Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
}

func (t *XConferenceBridge) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XConferenceBridge
	var overlay struct {
		*T
		LocationName               *XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
		SubUnit                    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
		UseTrustedRelayPoint       *XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		McuConferenceBridgeSipPort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 mcuConferenceBridgeSipPort,omitempty"`
		HttpPort                   *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 httpPort,omitempty"`
		UseHttps                   *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 useHttps,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.LocationName = (*XFkType)(&overlay.T.LocationName)
	overlay.SubUnit = (*XInteger)(&overlay.T.SubUnit)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.McuConferenceBridgeSipPort = (*XInteger)(&overlay.T.McuConferenceBridgeSipPort)
	overlay.HttpPort = (*XInteger)(&overlay.T.HttpPort)
	overlay.UseHttps = (*Boolean)(&overlay.T.UseHttps)
	return d.DecodeElement(&overlay, &start)
}

type XConfigInputData string

type XConfigInputDataGrouping string

type XConnectProtocol string

type XConnectedPBX string

type XConnection string

type XConnectionUsage string

type XContact string

type XContactAddress string

type XContactFolder string

type XContent []string

func (a XContent) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	var output struct {
		ArrayType string   `xml:"http://schemas.xmlsoap.org/wsdl/ arrayType,attr"`
		Items     []string `xml:" item"`
	}
	output.Items = []string(a)
	start.Attr = append(start.Attr, xml.Attr{Name: xml.Name{"", "xmlns:ns1"}, Value: "http://www.w3.org/2001/XMLSchema"})
	output.ArrayType = "ns1:anyType[]"
	return e.EncodeElement(&output, start)
}
func (a *XContent) UnmarshalXML(d *xml.Decoder, start xml.StartElement) (err error) {
	var tok xml.Token
	for tok, err = d.Token(); err == nil; tok, err = d.Token() {
		if tok, ok := tok.(xml.StartElement); ok {
			var item string
			if err = d.DecodeElement(&item, &tok); err == nil {
				*a = append(*a, item)
			}
		}
		if _, ok := tok.(xml.EndElement); ok {
			break
		}
	}
	return err
}

type XCountry string

type XCredential string

type XCredentialPolicy struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	FailedLogon              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
	ResetFailedLogonAttempts XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
	LockoutDuration          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
	CredChangeDuration       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
	CredExpiresAfter         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
	MinCredLength            XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
	PrevCredStoredNum        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
	InactiveDaysAllowed      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
	ExpiryWarningDays        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
	TrivialCredCheck         Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
}

func (t *XCredentialPolicy) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCredentialPolicy
	var overlay struct {
		*T
		FailedLogon              *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 failedLogon,omitempty"`
		ResetFailedLogonAttempts *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 resetFailedLogonAttempts,omitempty"`
		LockoutDuration          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lockoutDuration,omitempty"`
		CredChangeDuration       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credChangeDuration,omitempty"`
		CredExpiresAfter         *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 credExpiresAfter,omitempty"`
		MinCredLength            *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 minCredLength,omitempty"`
		PrevCredStoredNum        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 prevCredStoredNum,omitempty"`
		InactiveDaysAllowed      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 inactiveDaysAllowed,omitempty"`
		ExpiryWarningDays        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 expiryWarningDays,omitempty"`
		TrivialCredCheck         *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trivialCredCheck,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.FailedLogon = (*XInteger)(&overlay.T.FailedLogon)
	overlay.ResetFailedLogonAttempts = (*XInteger)(&overlay.T.ResetFailedLogonAttempts)
	overlay.LockoutDuration = (*XInteger)(&overlay.T.LockoutDuration)
	overlay.CredChangeDuration = (*XInteger)(&overlay.T.CredChangeDuration)
	overlay.CredExpiresAfter = (*XInteger)(&overlay.T.CredExpiresAfter)
	overlay.MinCredLength = (*XInteger)(&overlay.T.MinCredLength)
	overlay.PrevCredStoredNum = (*XInteger)(&overlay.T.PrevCredStoredNum)
	overlay.InactiveDaysAllowed = (*XInteger)(&overlay.T.InactiveDaysAllowed)
	overlay.ExpiryWarningDays = (*XInteger)(&overlay.T.ExpiryWarningDays)
	overlay.TrivialCredCheck = (*Boolean)(&overlay.T.TrivialCredCheck)
	return d.DecodeElement(&overlay, &start)
}

type XCredentialUser string

type XCss struct {
	Name           string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description    string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Members        Anon33          `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	PartitionUsage XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
}

func (t *XCss) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCss
	var overlay struct {
		*T
		PartitionUsage *XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PartitionUsage = (*XPartitionUsage)(&overlay.T.PartitionUsage)
	return d.DecodeElement(&overlay, &start)
}

type XCtiRoutePoint struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UseTrustedRelayPoint          XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	Lines                         Lines             `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
}

func (t *XCtiRoutePoint) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCtiRoutePoint
	var overlay struct {
		*T
		ProtocolSide                  *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint          *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	return d.DecodeElement(&overlay, &start)
}

type XCubaDevice string

type XCubaProductDisplayGroup string

type XCumaServerSecurityProfile struct {
	Name             string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	TransportType    XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	X509SubjectName  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	ServerIpHostName string              `xml:"http://www.cisco.com/AXL/API/9.0 serverIpHostName"`
}

func (t *XCumaServerSecurityProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XCumaServerSecurityProfile
	var overlay struct {
		*T
		TransportType *XTransport `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TransportType = (*XTransport)(&overlay.T.TransportType)
	return d.DecodeElement(&overlay, &start)
}

type XCustomUserAttribute string

type XCustomUserField struct {
	Field string `xml:"http://www.cisco.com/AXL/API/9.0 field"`
}

type XDNDOption string

type XDNUsage string

type XDPDeviceProtocol string

type XDPJobFeature string

type XDPJobStatus string

type XDPProduct string

type XDPTraceLevel string

type XDPVerificationStatus string

type XDPWebProtocol string

type XDTMFSignaling string

type XData string

type XDateTimeGroup struct {
	Name               string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	TimeZone           XTimeZone          `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	Separator          string             `xml:"http://www.cisco.com/AXL/API/9.0 separator"`
	Dateformat         string             `xml:"http://www.cisco.com/AXL/API/9.0 dateformat"`
	TimeFormat         string             `xml:"http://www.cisco.com/AXL/API/9.0 timeFormat"`
	PhoneNtpReferences PhoneNtpReferences `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpReferences,omitempty"`
}

func (t *XDateTimeGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDateTimeGroup
	var overlay struct {
		*T
		TimeZone *XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	return d.DecodeElement(&overlay, &start)
}

type XDateTimeGroupNtpReference struct {
	PhoneNtpName   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneNtpName"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

func (t *XDateTimeGroupNtpReference) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDateTimeGroupNtpReference
	var overlay struct {
		*T
		SelectionOrder *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SelectionOrder = (*XInteger)(&overlay.T.SelectionOrder)
	return d.DecodeElement(&overlay, &start)
}

type XDayOfMonth string

type XDayOfWeek string

type XDdi struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Clause       string  `xml:"http://www.cisco.com/AXL/API/9.0 clause,omitempty"`
	DialPlanName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName"`
	Members      Anon172 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

type XDefaultDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PhoneButtonTemplate               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneButtonTemplate,omitempty"`
	SoftkeyTemplate                   XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplate,omitempty"`
	Privacy                           XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	IgnorePi                          Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePi,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndication                    XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
}

func (t *XDefaultDeviceProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDefaultDeviceProfile
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		Privacy                           *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 privacy,omitempty"`
		SingleButtonBarge                 *XBarge        `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		DndOption                         *XDNDOption    `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		MlppIndication                    *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndication,omitempty"`
		Preemption                        *XPreemption   `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		AlwaysUsePrimeLine                *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.Privacy = (*XStatus)(&overlay.T.Privacy)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.MlppIndication = (*XStatus)(&overlay.T.MlppIndication)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	return d.DecodeElement(&overlay, &start)
}

type XDeviceFeature string

type XDeviceMobility struct {
	Name         string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	SubNet       string   `xml:"http://www.cisco.com/AXL/API/9.0 subNet"`
	SubNetMaskSz XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subNetMaskSz"`
	Members      Anon108  `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

type XDeviceMobilityGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XDevicePool struct {
	Name                                           string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	AutoSearchSpaceName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 autoSearchSpaceName,omitempty"`
	DateTimeSettingName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dateTimeSettingName"`
	CallManagerGroupName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName"`
	MediaResourceListName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	RegionName                                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 regionName"`
	NetworkLocale                                  XCountry        `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	SrstName                                       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 srstName"`
	ConnectionMonitorDuration                      XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LocationName                                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName,omitempty"`
	MobilityCssName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 mobilityCssName,omitempty"`
	PhysicalLocationName                           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 physicalLocationName,omitempty"`
	DeviceMobilityGroupName                        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityGroupName,omitempty"`
	RevertPriority                                 XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
	SingleButtonBarge                              XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                                XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	CgpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	CdpnTransformationCssName                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	LocalRouteGroupName                            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 localRouteGroupName,omitempty"`
	GeoLocationName                                XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CallingPartyNationalPrefix                     string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string          `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	AdjunctCallingSearchSpace                      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 adjunctCallingSearchSpace,omitempty"`
	CallingPartyNationalStripDigits                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string          `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	ImeEnrolledPatternGroupName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
	CntdPnTransformationCssName                    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
}

func (t *XDevicePool) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDevicePool
	var overlay struct {
		*T
		ConnectionMonitorDuration *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 connectionMonitorDuration,omitempty"`
		RevertPriority            *XRevertPriority `xml:"http://www.cisco.com/AXL/API/9.0 revertPriority,omitempty"`
		SingleButtonBarge         *XBarge          `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines           *XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ConnectionMonitorDuration = (*XInteger)(&overlay.T.ConnectionMonitorDuration)
	overlay.RevertPriority = (*XRevertPriority)(&overlay.T.RevertPriority)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	return d.DecodeElement(&overlay, &start)
}

type XDevicePoolDeviceMobility struct {
	DevicePoolName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName"`
}

type XDeviceProfile struct {
	Name                              string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                       string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                             XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                          XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                      XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	VendorConfig                      XVendorConfig     `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string            `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption       `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	Lines                             Anon402           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PhoneTemplateName                 XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Anon403           `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    Anon404           `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	BlfDirectedCallParks              Anon405           `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      Anon406           `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	SingleButtonBarge                 XBarge            `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	LoginUserId                       XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 loginUserId,omitempty"`
	IgnorePresentationIndicators      Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	DndOption                         XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting      `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	EmccCallingSearchSpace            XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 emccCallingSearchSpace,omitempty"`
	AlwaysUsePrimeLine                XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SoftkeyTemplateName               XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	CallInfoPrivacyStatus             XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	Services                          Anon407           `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	FeatureControlPolicy              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	Ctiid                             int               `xml:"ctiid,attr,omitempty"`
}

func (t *XDeviceProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDeviceProfile
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		MlppIndicationStatus              *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption   `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		SingleButtonBarge                 *XBarge        `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		IgnorePresentationIndicators      *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		DndOption                         *XDNDOption    `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		AlwaysUsePrimeLine                *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		CallInfoPrivacyStatus             *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	return d.DecodeElement(&overlay, &start)
}

type XDeviceProtocol string

type XDeviceSecurityMode string

type XDeviceTrustMode string

type XDhcpServer struct {
	ProcessNodeName              XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
}

func (t *XDhcpServer) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDhcpServer
	var overlay struct {
		*T
		ArpCacheTimeout    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
		IpAddressLeaseTime *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
		RenewalTime        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
		RebindingTime      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ArpCacheTimeout = (*XInteger)(&overlay.T.ArpCacheTimeout)
	overlay.IpAddressLeaseTime = (*XInteger)(&overlay.T.IpAddressLeaseTime)
	overlay.RenewalTime = (*XInteger)(&overlay.T.RenewalTime)
	overlay.RebindingTime = (*XInteger)(&overlay.T.RebindingTime)
	return d.DecodeElement(&overlay, &start)
}

type XDhcpSubnet struct {
	DhcpServerName               XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dhcpServerName"`
	SubnetIpAddress              string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetIpAddress"`
	PrimaryStartIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryStartIpAddress"`
	PrimaryEndIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryEndIpAddress"`
	SecondaryStartIpAddress      string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryStartIpAddress,omitempty"`
	SecondaryEndIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryEndIpAddress,omitempty"`
	PrimaryRouterIpAddress       string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryRouterIpAddress,omitempty"`
	SecondaryRouterIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryRouterIpAddress,omitempty"`
	SubnetMask                   string   `xml:"http://www.cisco.com/AXL/API/9.0 subnetMask"`
	DomainName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName,omitempty"`
	PrimaryDnsIpAddress          string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryDnsIpAddress,omitempty"`
	SecondaryDnsIpAddress        string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryDnsIpAddress,omitempty"`
	TftpServerName               string   `xml:"http://www.cisco.com/AXL/API/9.0 tftpServerName,omitempty"`
	PrimaryTftpServerIpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 primaryTftpServerIpAddress,omitempty"`
	SecondaryTftpServerIpAddress string   `xml:"http://www.cisco.com/AXL/API/9.0 secondaryTftpServerIpAddress,omitempty"`
	BootstrapServerIpAddress     string   `xml:"http://www.cisco.com/AXL/API/9.0 bootstrapServerIpAddress,omitempty"`
	ArpCacheTimeout              XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
	IpAddressLeaseTime           XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
	RenewalTime                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
	RebindingTime                XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
}

func (t *XDhcpSubnet) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDhcpSubnet
	var overlay struct {
		*T
		ArpCacheTimeout    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 arpCacheTimeout,omitempty"`
		IpAddressLeaseTime *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 ipAddressLeaseTime,omitempty"`
		RenewalTime        *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 renewalTime,omitempty"`
		RebindingTime      *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rebindingTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ArpCacheTimeout = (*XInteger)(&overlay.T.ArpCacheTimeout)
	overlay.IpAddressLeaseTime = (*XInteger)(&overlay.T.IpAddressLeaseTime)
	overlay.RenewalTime = (*XInteger)(&overlay.T.RenewalTime)
	overlay.RebindingTime = (*XInteger)(&overlay.T.RebindingTime)
	return d.DecodeElement(&overlay, &start)
}

type XDialParameter string

type XDialPattern string

type XDialPlan struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XDialPlanTag struct {
	Name                    string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DialPlanName            XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName"`
	Operator                XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
	SuppressFromRouteFilter Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 suppressFromRouteFilter,omitempty"`
}

func (t *XDialPlanTag) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDialPlanTag
	var overlay struct {
		*T
		Operator                *XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator,omitempty"`
		SuppressFromRouteFilter *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 suppressFromRouteFilter,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Operator = (*XOperator)(&overlay.T.Operator)
	overlay.SuppressFromRouteFilter = (*Boolean)(&overlay.T.SuppressFromRouteFilter)
	return d.DecodeElement(&overlay, &start)
}

type XDialViaOffice string

type XDigitDiscardInstructionMember struct {
	DialPlanTagName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName"`
}

type XDigitSending string

type XDirectedCallPark struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	RetrievalPrefix    string  `xml:"http://www.cisco.com/AXL/API/9.0 retrievalPrefix,omitempty"`
	ReversionPattern   string  `xml:"http://www.cisco.com/AXL/API/9.0 reversionPattern,omitempty"`
	RevertCssName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 revertCssName,omitempty"`
}

type XDirectoryLookupDialRules struct {
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NumberBeginWith   string   `xml:"http://www.cisco.com/AXL/API/9.0 numberBeginWith,omitempty"`
	NumberOfDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
	DigitsToBeRemoved XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
	PrefixPattern     string   `xml:"http://www.cisco.com/AXL/API/9.0 prefixPattern,omitempty"`
	Priority          XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
}

func (t *XDirectoryLookupDialRules) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XDirectoryLookupDialRules
	var overlay struct {
		*T
		NumberOfDigits    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigits,omitempty"`
		DigitsToBeRemoved *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 digitsToBeRemoved,omitempty"`
		Priority          *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.NumberOfDigits = (*XInteger)(&overlay.T.NumberOfDigits)
	overlay.DigitsToBeRemoved = (*XInteger)(&overlay.T.DigitsToBeRemoved)
	overlay.Priority = (*XInteger)(&overlay.T.Priority)
	return d.DecodeElement(&overlay, &start)
}

type XDirectoryUri struct {
	IsPrimary Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPrimary"`
	Uri       string  `xml:"http://www.cisco.com/AXL/API/9.0 uri"`
	Partition XFkType `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
}

type XDirn struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Uuid               XUUID   `xml:"uuid,attr,omitempty"`
}

type XDistributeAlgorithm string

type XDomainSource string

type XDrfRegistered string

type XDrfScript string

type XE911LocationState string

type XE911Message string

type XEmailAddress string

type XEmccFeatureConfig struct {
	ParameterName string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName"`
	Value         string `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
}

type XEncode string

type XEndUserCapfProfile struct {
	EndUserId              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 endUserId"`
	InstanceId             string                `xml:"http://www.cisco.com/AXL/API/9.0 instanceId"`
	CertificationOperation XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
	AuthenticationMode     XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	AuthenticationString   string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	KeySize                XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	OperationCompletion    string                `xml:"http://www.cisco.com/AXL/API/9.0 operationCompletion,omitempty"`
}

func (t *XEndUserCapfProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XEndUserCapfProfile
	var overlay struct {
		*T
		CertificationOperation *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificationOperation,omitempty"`
		AuthenticationMode     *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.CertificationOperation = (*XCertificateOperation)(&overlay.T.CertificationOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	return d.DecodeElement(&overlay, &start)
}

type XEnduserMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId"`
}

type XEnterpriseFeatureAccessConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefaultEafNumber Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefaultEafNumber,omitempty"`
}

type XEnterprisePhoneConfig struct {
	VendorConfig XVendorConfig `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
}

type XEvtDistMethod string

type XExternalCallControlProfile struct {
	Name                      string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	PrimaryUri                string                  `xml:"http://www.cisco.com/AXL/API/9.0 primaryUri"`
	SecondaryUri              string                  `xml:"http://www.cisco.com/AXL/API/9.0 secondaryUri,omitempty"`
	EnableLoadBalancing       Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
	RoutingRequestTimer       XInteger                `xml:"http://www.cisco.com/AXL/API/9.0 routingRequestTimer,omitempty"`
	DiversionReroutingCssName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 diversionReroutingCssName,omitempty"`
	CallTreatmentOnFailure    XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
}

func (t *XExternalCallControlProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XExternalCallControlProfile
	var overlay struct {
		*T
		EnableLoadBalancing    *Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 enableLoadBalancing,omitempty"`
		CallTreatmentOnFailure *XCallTreatmentOnFailure `xml:"http://www.cisco.com/AXL/API/9.0 callTreatmentOnFailure,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableLoadBalancing = (*Boolean)(&overlay.T.EnableLoadBalancing)
	overlay.CallTreatmentOnFailure = (*XCallTreatmentOnFailure)(&overlay.T.CallTreatmentOnFailure)
	return d.DecodeElement(&overlay, &start)
}

type XFDLChannel string

type XFacInfo struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Code               string   `xml:"http://www.cisco.com/AXL/API/9.0 code"`
	AuthorizationLevel XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
}

func (t *XFacInfo) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XFacInfo
	var overlay struct {
		*T
		AuthorizationLevel *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevel,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AuthorizationLevel = (*XInteger)(&overlay.T.AuthorizationLevel)
	return d.DecodeElement(&overlay, &start)
}

type XFallBackCSSSelection string

type XFallbackProfile struct {
	Name                                  string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                           string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AdvertisedFallbackDirectoryE164Number string                `xml:"http://www.cisco.com/AXL/API/9.0 advertisedFallbackDirectoryE164Number,omitempty"`
	QosSensistivityLevel                  XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
	CallCss                               XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
	CallAnswerTimer                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
	DirectoryNumberPartition              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumberPartition,omitempty"`
	DirectoryNumber                       string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber,omitempty"`
	NumberOfDigitsForCallerIDPartialMatch XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
}

func (t *XFallbackProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XFallbackProfile
	var overlay struct {
		*T
		QosSensistivityLevel                  *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 qosSensistivityLevel,omitempty"`
		CallCss                               *XFallBackCSSSelection `xml:"http://www.cisco.com/AXL/API/9.0 callCss,omitempty"`
		CallAnswerTimer                       *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 callAnswerTimer,omitempty"`
		NumberOfDigitsForCallerIDPartialMatch *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 numberOfDigitsForCallerIDPartialMatch,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.QosSensistivityLevel = (*XInteger)(&overlay.T.QosSensistivityLevel)
	overlay.CallCss = (*XFallBackCSSSelection)(&overlay.T.CallCss)
	overlay.CallAnswerTimer = (*XInteger)(&overlay.T.CallAnswerTimer)
	overlay.NumberOfDigitsForCallerIDPartialMatch = (*XInteger)(&overlay.T.NumberOfDigitsForCallerIDPartialMatch)
	return d.DecodeElement(&overlay, &start)
}

type XFallbackSensitivityLevel string

type XFeature string

type XFeatureConfig string

type XFeatureControl string

type XFeatureControlConfig struct {
	FeatureName     string  `xml:"http://www.cisco.com/AXL/API/9.0 featureName"`
	OverrideDefault Boolean `xml:"http://www.cisco.com/AXL/API/9.0 overrideDefault,omitempty"`
	EnableSetting   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableSetting,omitempty"`
}

type XFeatureControlPolicy struct {
	Name        string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Features    Features `xml:"http://www.cisco.com/AXL/API/9.0 features,omitempty"`
}

type XFixedMohAudioSource struct {
	Name      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Multicast Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast,omitempty"`
	Enable    string  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
}

type XFkType struct {
	Value string `xml:",chardata"`
	Uuid  XUUID  `xml:"uuid,attr,omitempty"`
}

type XForward string

type XFraming string

type XGClear string

type XGatekeeper struct {
	Name          string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description   string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RrqTimeToLive XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
	RetryTimeout  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
	EnableDevice  Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
}

func (t *XGatekeeper) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatekeeper
	var overlay struct {
		*T
		RrqTimeToLive *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 rrqTimeToLive,omitempty"`
		RetryTimeout  *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 retryTimeout,omitempty"`
		EnableDevice  *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableDevice,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RrqTimeToLive = (*XInteger)(&overlay.T.RrqTimeToLive)
	overlay.RetryTimeout = (*XInteger)(&overlay.T.RetryTimeout)
	overlay.EnableDevice = (*Boolean)(&overlay.T.EnableDevice)
	return d.DecodeElement(&overlay, &start)
}

type XGateway struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Units                Units           `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	VendorConfig         XVendorConfig   `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
}

func (t *XGateway) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGateway
	var overlay struct {
		*T
		Product  *XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
		Protocol *XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Product = (*XProduct)(&overlay.T.Product)
	overlay.Protocol = (*XDeviceProtocol)(&overlay.T.Protocol)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayEndpointAnalog struct {
	Index                                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                              string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Model                                    XModel               `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                                 XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                             XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry             `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Port                                     XAnalogPort          `xml:"http://www.cisco.com/AXL/API/9.0 port"`
	TrunkSelectionOrder                      XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder"`
	TransmitUtf8                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode   `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	ImeE164DirectoryNumber                   string               `xml:"http://www.cisco.com/AXL/API/9.0 imeE164DirectoryNumber,omitempty"`
	Ctiid                                    int                  `xml:"ctiid,attr,omitempty"`
}

func (t *XGatewayEndpointAnalog) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewayEndpointAnalog
	var overlay struct {
		*T
		Index                                *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
		ProtocolSide                         *XProtocolSide      `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint                 *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio                *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		TransmitUtf8                         *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		UseDevicePoolCdpnTransformCss        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssUnknown *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
		HotlineDevice                        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
		PacketCaptureMode                    *XPacketCaptureMode `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration                *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		PstnAccess                           *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssUnknown = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnknown)
	overlay.HotlineDevice = (*Boolean)(&overlay.T.HotlineDevice)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayEndpointAnalogAccess struct {
	DomainName  string                 `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID                  `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    XGatewayEndpointAnalog `xml:"http://www.cisco.com/AXL/API/9.0 endpoint"`
}

func (t *XGatewayEndpointAnalogAccess) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewayEndpointAnalogAccess
	var overlay struct {
		*T
		Unit *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Unit = (*XInteger)(&overlay.T.Unit)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayEndpointDigitalAccessBri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
	Endpoint    XGatewayEndpointDigitalBri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint"`
}

type XGatewayEndpointDigitalAccessPri struct {
	DomainName  string                     `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID                      `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
	Subunit     XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
	Endpoint    XGatewayEndpointDigitalPri `xml:"http://www.cisco.com/AXL/API/9.0 endpoint"`
}

type XGatewayEndpointDigitalAccessT1 struct {
	DomainName  string                    `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID                     `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 unit"`
	Subunit     XInteger                  `xml:"http://www.cisco.com/AXL/API/9.0 subunit"`
	Endpoint    XGatewayEndpointDigitalT1 `xml:"http://www.cisco.com/AXL/API/9.0 endpoint"`
}

type XGatewayEndpointDigitalBri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe"`
	BriProtocol                        XBriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 briProtocol"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	PresentationBit                    XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi"`
	SigDigits                          Anon798                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
}

func (t *XGatewayEndpointDigitalBri) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewayEndpointDigitalBri
	var overlay struct {
		*T
		Index                             *XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
		ProtocolSide                      *XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan       `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber         `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPlan                       *XNumberingPlan       `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber         `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode   `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PstnAccess                        *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayEndpointDigitalPri struct {
	Index                              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                            XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                              XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                           XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                       XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                    XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	NetworkLocale                      XCountry               `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	MediaResourceListName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                    XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                       XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	MlppPreemption                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
	UseTrustedRelayPoint               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	CgpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	RedirectInboundNumberIe            Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe"`
	CalledPlan                         XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
	CalledPri                          XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
	CallerIdDn                         string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection              XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingPlan                        XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
	CallingPri                         XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
	ChanIE                             XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIE,omitempty"`
	ClockReference                     XClockReference        `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	DChannelEnable                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 dChannelEnable"`
	ChannelSelectionOrder              XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
	DisplayIe                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIe"`
	PcmType                            XEncode                `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	CsuParam                           XCSUParam              `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	FirstDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
	InterfaceIdPresent                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 interfaceIdPresent"`
	InterfaceId                        XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
	IntraDelay                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
	McdnEnable                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mcdnEnable"`
	RedirectOutboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe"`
	NumDigitsToStrip                   XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 numDigitsToStrip"`
	PassingPrecedenceLevelThrough      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 passingPrecedenceLevelThrough"`
	Prefix                             string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefix,omitempty"`
	CallingLinePresentationBit         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	ConnectedLineIdPresentation        XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
	PriProtocol                        XPriProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 priProtocol"`
	SecurityAccessLevel                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
	SendCallingNameInFacilityIe        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendCallingNameInFacilityIe"`
	SendExLeadingCharInDispIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendExLeadingCharInDispIe"`
	SendRestart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendRestart"`
	SetupNonIsdnPi                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 setupNonIsdnPi"`
	SigDigits                          Anon797                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	Span                               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 span"`
	StatusPoll                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 statusPoll"`
	SmdiBasePort                       XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	GClearEnable                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 GClearEnable"`
	PacketCaptureMode                  XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	TransmitUtf8                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	V150                               Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	Asn1RoseOidEncoding                XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                        XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	UnattendedPort                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CdpnTransformationCssName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	NationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	GeoLocationFilterName              XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	RouteClassSignalling               XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	NationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 nationalTransformationCssName,omitempty"`
	InternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 internationalTransformationCssName,omitempty"`
	UnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 unknownTransformationCssName,omitempty"`
	SubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscriberTransformationCssName,omitempty"`
	PstnAccess                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	Ctiid                              int                    `xml:"ctiid,attr,omitempty"`
}

func (t *XGatewayEndpointDigitalPri) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewayEndpointDigitalPri
	var overlay struct {
		*T
		Index                             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		MlppPreemption                    *XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 mlppPreemption,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		CalledPlan                        *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledPlan,omitempty"`
		CalledPri                         *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPri,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingPlan                       *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingPlan,omitempty"`
		CallingPri                        *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPri,omitempty"`
		ChanIE                            *XPRIChanIE             `xml:"http://www.cisco.com/AXL/API/9.0 chanIE,omitempty"`
		ChannelSelectionOrder             *XTrunkSelectionOrder   `xml:"http://www.cisco.com/AXL/API/9.0 channelSelectionOrder,omitempty"`
		FirstDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 firstDelay,omitempty"`
		InterfaceId                       *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 interfaceId,omitempty"`
		IntraDelay                        *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 intraDelay,omitempty"`
		CallingLinePresentationBit        *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		ConnectedLineIdPresentation       *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 connectedLineIdPresentation,omitempty"`
		SecurityAccessLevel               *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 securityAccessLevel,omitempty"`
		SmdiBasePort                      *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		V150                              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		RouteClassSignalling              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.MlppPreemption = (*XPreemption)(&overlay.T.MlppPreemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.CalledPlan = (*XNumberingPlan)(&overlay.T.CalledPlan)
	overlay.CalledPri = (*XPriOfNumber)(&overlay.T.CalledPri)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingPlan = (*XNumberingPlan)(&overlay.T.CallingPlan)
	overlay.CallingPri = (*XPriOfNumber)(&overlay.T.CallingPri)
	overlay.ChanIE = (*XPRIChanIE)(&overlay.T.ChanIE)
	overlay.ChannelSelectionOrder = (*XTrunkSelectionOrder)(&overlay.T.ChannelSelectionOrder)
	overlay.FirstDelay = (*XInteger)(&overlay.T.FirstDelay)
	overlay.InterfaceId = (*XInteger)(&overlay.T.InterfaceId)
	overlay.IntraDelay = (*XInteger)(&overlay.T.IntraDelay)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.ConnectedLineIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedLineIdPresentation)
	overlay.SecurityAccessLevel = (*XInteger)(&overlay.T.SecurityAccessLevel)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.RouteClassSignalling = (*XStatus)(&overlay.T.RouteClassSignalling)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayEndpointDigitalT1 struct {
	Index                            XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                             string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                      string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct             `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                            XClass               `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                         XDeviceProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                     XProtocolSide        `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                  XNetworkLocation     `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                     XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName              XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                  XLoadInformation     `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                     XVendorConfig        `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	TraceFlag                        Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                     string               `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                       XPreemption          `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio            Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                  XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	SendGeoLocation                  Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation"`
	CdpnTransformationCssName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	V150                             Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
	GeoLocationFilterName            XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	Ports                            Anon800              `xml:"http://www.cisco.com/AXL/API/9.0 ports,omitempty"`
	TrunkSelectionOrder              XTrunkSelectionOrder `xml:"http://www.cisco.com/AXL/API/9.0 trunkSelectionOrder"`
	ClockReference                   XClockReference      `xml:"http://www.cisco.com/AXL/API/9.0 clockReference"`
	CsuParam                         XCSUParam            `xml:"http://www.cisco.com/AXL/API/9.0 csuParam"`
	DigitSending                     XDigitSending        `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	PcmType                          XEncode              `xml:"http://www.cisco.com/AXL/API/9.0 pcmType"`
	FdlChannel                       XFDLChannel          `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
	YellowAlarm                      XYellowAlarm         `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
	ZeroSupression                   XZeroSuppression     `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
	SmdiBasePort                     XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
	HandleDtmfPrecedenceSignals      Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
	EncodeOutboundVoiceRouteClass    Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 encodeOutboundVoiceRouteClass,omitempty"`
	RouteClassSignalling             XStatus              `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	PstnAccess                       Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	Ctiid                            int                  `xml:"ctiid,attr,omitempty"`
}

func (t *XGatewayEndpointDigitalT1) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewayEndpointDigitalT1
	var overlay struct {
		*T
		Index                         *XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
		ProtocolSide                  *XProtocolSide    `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation               *XNetworkLocation `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                    *XPreemption      `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio         *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		V150                          *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 v150,omitempty"`
		DigitSending                  *XDigitSending    `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
		FdlChannel                    *XFDLChannel      `xml:"http://www.cisco.com/AXL/API/9.0 fdlChannel,omitempty"`
		YellowAlarm                   *XYellowAlarm     `xml:"http://www.cisco.com/AXL/API/9.0 yellowAlarm,omitempty"`
		ZeroSupression                *XZeroSuppression `xml:"http://www.cisco.com/AXL/API/9.0 zeroSupression,omitempty"`
		SmdiBasePort                  *XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 smdiBasePort,omitempty"`
		HandleDtmfPrecedenceSignals   *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 handleDtmfPrecedenceSignals,omitempty"`
		EncodeOutboundVoiceRouteClass *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 encodeOutboundVoiceRouteClass,omitempty"`
		RouteClassSignalling          *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
		PstnAccess                    *Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.V150 = (*Boolean)(&overlay.T.V150)
	overlay.DigitSending = (*XDigitSending)(&overlay.T.DigitSending)
	overlay.FdlChannel = (*XFDLChannel)(&overlay.T.FdlChannel)
	overlay.YellowAlarm = (*XYellowAlarm)(&overlay.T.YellowAlarm)
	overlay.ZeroSupression = (*XZeroSuppression)(&overlay.T.ZeroSupression)
	overlay.SmdiBasePort = (*XInteger)(&overlay.T.SmdiBasePort)
	overlay.HandleDtmfPrecedenceSignals = (*Boolean)(&overlay.T.HandleDtmfPrecedenceSignals)
	overlay.EncodeOutboundVoiceRouteClass = (*Boolean)(&overlay.T.EncodeOutboundVoiceRouteClass)
	overlay.RouteClassSignalling = (*XStatus)(&overlay.T.RouteClassSignalling)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	return d.DecodeElement(&overlay, &start)
}

type XGatewaySccp struct {
	Index                                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
	Name                                     string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                              string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                  XProduct           `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Model                                    XModel             `xml:"http://www.cisco.com/AXL/API/9.0 model,omitempty"`
	Class                                    XClass             `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                                 XDeviceProtocol    `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                             XProtocolSide      `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                           XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocale                            XCountry           `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	LocationName                             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	VendorConfig                             XVendorConfig      `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	MlppDomainId                             string             `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	TransmitUtf8                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	CdpnTransformationCssName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	CallingPartyNumberPrefix                 string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberPrefix,omitempty"`
	CallingPartyStripDigits                  XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyStripDigits,omitempty"`
	CallingPartyUnknownTransformationCssName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnknown     Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
	HotlineDevice                            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	PacketCaptureMode                        XPacketCaptureMode `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                    XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	PstnAccess                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	PhoneTemplateName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	SecurityProfileName                      XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	UserLocale                               XUserLocale        `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	DeviceMobilityMode                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	OwnerUserId                              XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserId,omitempty"`
	CommonPhoneConfigName                    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName"`
	AlwaysUsePrimeLine                       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVM                  XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVM,omitempty"`
	AllowCtiControlFlag                      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RemoteDevice                             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	SubscribeCallingSearchSpaceName          XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName"`
	UnattendedPort                           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	PresenceGroupName                        XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName"`
	MlppIndicationStatus                     XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                               XPreemption        `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	HlogStatus                               Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	IgnorePresentationIndicators             XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Lines                                    Anon805            `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	Ctiid                                    int                `xml:"ctiid,attr,omitempty"`
}

func (t *XGatewaySccp) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewaySccp
	var overlay struct {
		*T
		Index                                *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 index,omitempty"`
		ProtocolSide                         *XProtocolSide      `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint                 *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio                *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		TransmitUtf8                         *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		UseDevicePoolCdpnTransformCss        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UseDevicePoolCgpnTransformCssUnknown *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnknown,omitempty"`
		HotlineDevice                        *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
		PacketCaptureMode                    *XPacketCaptureMode `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration                *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		PstnAccess                           *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		DeviceMobilityMode                   *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
		AlwaysUsePrimeLine                   *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVM              *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVM,omitempty"`
		MlppIndicationStatus                 *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                           *XPreemption        `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Index = (*XInteger)(&overlay.T.Index)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UseDevicePoolCgpnTransformCssUnknown = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnknown)
	overlay.HotlineDevice = (*Boolean)(&overlay.T.HotlineDevice)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.DeviceMobilityMode = (*XStatus)(&overlay.T.DeviceMobilityMode)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVM = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVM)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	return d.DecodeElement(&overlay, &start)
}

type XGatewaySccpEndpoints struct {
	DomainName  string       `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID        `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunit     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 subunit,omitempty"`
	Endpoint    XGatewaySccp `xml:"http://www.cisco.com/AXL/API/9.0 endpoint"`
}

func (t *XGatewaySccpEndpoints) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewaySccpEndpoints
	var overlay struct {
		*T
		Unit *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Unit = (*XInteger)(&overlay.T.Unit)
	return d.DecodeElement(&overlay, &start)
}

type XGatewaySubunits struct {
	DomainName  string   `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID    `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Unit        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	Subunits    Anon508  `xml:"http://www.cisco.com/AXL/API/9.0 subunits"`
}

func (t *XGatewaySubunits) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XGatewaySubunits
	var overlay struct {
		*T
		Unit *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Unit = (*XInteger)(&overlay.T.Unit)
	return d.DecodeElement(&overlay, &start)
}

type XGatewayUsage string

type XGeoLocation struct {
	Name                   string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Country                string `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
}

type XGeoLocationDevice string

type XGeoLocationFilter struct {
	Name                      string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description               string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	UseCountry                Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCountry,omitempty"`
	UseNationalSubDivision    Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNationalSubDivision,omitempty"`
	UseDistrict               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useDistrict,omitempty"`
	UseCommunityName          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCommunityName,omitempty"`
	UseCityDivision           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useCityDivision,omitempty"`
	UseNeighbourhood          Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useNeighbourhood,omitempty"`
	UseStreet                 Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreet,omitempty"`
	UseLeadingStreetDirection Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLeadingStreetDirection,omitempty"`
	UseTrailingStreetSuffix   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useTrailingStreetSuffix,omitempty"`
	UseStreetSuffix           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useStreetSuffix,omitempty"`
	UseHouseNumber            Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumber,omitempty"`
	UseHouseNumberSuffix      Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useHouseNumberSuffix,omitempty"`
	UseLandmark               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLandmark,omitempty"`
	UseLocation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useLocation,omitempty"`
	UseFloor                  Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useFloor,omitempty"`
	UseOccupantName           Boolean `xml:"http://www.cisco.com/AXL/API/9.0 useOccupantName,omitempty"`
	UsePostalCode             Boolean `xml:"http://www.cisco.com/AXL/API/9.0 usePostalCode,omitempty"`
}

type XGeoLocationPolicy struct {
	Name                   string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Country                string          `xml:"http://www.cisco.com/AXL/API/9.0 country,omitempty"`
	Description            string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalSubDivision    string          `xml:"http://www.cisco.com/AXL/API/9.0 nationalSubDivision,omitempty"`
	District               string          `xml:"http://www.cisco.com/AXL/API/9.0 district,omitempty"`
	CommunityName          string          `xml:"http://www.cisco.com/AXL/API/9.0 communityName,omitempty"`
	CityDivision           string          `xml:"http://www.cisco.com/AXL/API/9.0 cityDivision,omitempty"`
	Neighbourhood          string          `xml:"http://www.cisco.com/AXL/API/9.0 neighbourhood,omitempty"`
	Street                 string          `xml:"http://www.cisco.com/AXL/API/9.0 street,omitempty"`
	LeadingStreetDirection string          `xml:"http://www.cisco.com/AXL/API/9.0 leadingStreetDirection,omitempty"`
	TrailingStreetSuffix   string          `xml:"http://www.cisco.com/AXL/API/9.0 trailingStreetSuffix,omitempty"`
	StreetSuffix           string          `xml:"http://www.cisco.com/AXL/API/9.0 streetSuffix,omitempty"`
	HouseNumber            string          `xml:"http://www.cisco.com/AXL/API/9.0 houseNumber,omitempty"`
	HouseNumberSuffix      string          `xml:"http://www.cisco.com/AXL/API/9.0 houseNumberSuffix,omitempty"`
	Landmark               string          `xml:"http://www.cisco.com/AXL/API/9.0 landmark,omitempty"`
	Location               string          `xml:"http://www.cisco.com/AXL/API/9.0 location,omitempty"`
	Floor                  string          `xml:"http://www.cisco.com/AXL/API/9.0 floor,omitempty"`
	OccupantName           string          `xml:"http://www.cisco.com/AXL/API/9.0 occupantName,omitempty"`
	PostalCode             string          `xml:"http://www.cisco.com/AXL/API/9.0 postalCode,omitempty"`
	RelatedPolicies        RelatedPolicies `xml:"http://www.cisco.com/AXL/API/9.0 relatedPolicies,omitempty"`
}

type XGkOption string

type XGlobalSetting string

type XGroupVersionStamp string

type XH323Gateway struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                                XLoadInformation       `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	VendorConfig                                   XVendorConfig          `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	SigDigits                                      Anon397                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	CallingPartyNationalPrefix                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalPrefix,omitempty"`
	CallingPartyInternationalPrefix                string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalPrefix,omitempty"`
	CallingPartyUnknownPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownPrefix,omitempty"`
	CallingPartySubscriberPrefix                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberPrefix,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	DisplayIeDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIeDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
}

func (t *XH323Gateway) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XH323Gateway
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		TunneledProtocol                  *XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		PathReplacementSupport            *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		CodecForOutboundFaststart         *XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
		AllowH235PassThrough              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
		SigDigits                         *Anon397                `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		CalledPartyIeNumberType           *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
		CallingPartyIeNumberType          *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
		CalledNumberingPlan               *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
		CallingNumberingPlan              *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		UseDevicePoolCalledCssNatl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
		UseDevicePoolCalledCssIntl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
		UseDevicePoolCalledCssUnkn        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
		UseDevicePoolCalledCssSubs        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.CodecForOutboundFaststart = (*XMediaPayload)(&overlay.T.CodecForOutboundFaststart)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	overlay.AllowH235PassThrough = (*Boolean)(&overlay.T.AllowH235PassThrough)
	overlay.SigDigits = (*Anon397)(&overlay.T.SigDigits)
	overlay.CalledPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyIeNumberType)
	overlay.CallingPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyIeNumberType)
	overlay.CalledNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledNumberingPlan)
	overlay.CallingNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingNumberingPlan)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.UseDevicePoolCalledCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssNatl)
	overlay.UseDevicePoolCalledCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssIntl)
	overlay.UseDevicePoolCalledCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCalledCssUnkn)
	overlay.UseDevicePoolCalledCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCalledCssSubs)
	return d.DecodeElement(&overlay, &start)
}

type XH323Line struct {
	Index                XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index"`
	Label                string          `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel           string          `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display              string          `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                 XDirn           `xml:"http://www.cisco.com/AXL/API/9.0 dirn"`
	DisplayAscii         string          `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask             string          `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	MaxNumCalls          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger          XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay      Anon803         `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName    XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag        XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi           XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial            string          `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage       XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	AssociatedEndusers   Anon804         `xml:"http://www.cisco.com/AXL/API/9.0 associatedEndusers,omitempty"`
	Ctiid                int             `xml:"ctiid,attr,omitempty"`
}

func (t *XH323Line) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XH323Line
	var overlay struct {
		*T
		MaxNumCalls    *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
		BusyTrigger    *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
		RecordingFlag  *XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
		AudibleMwi     *XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
		PartitionUsage *XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxNumCalls = (*XInteger)(&overlay.T.MaxNumCalls)
	overlay.BusyTrigger = (*XInteger)(&overlay.T.BusyTrigger)
	overlay.RecordingFlag = (*XRecordingFlag)(&overlay.T.RecordingFlag)
	overlay.AudibleMwi = (*XStatus)(&overlay.T.AudibleMwi)
	overlay.PartitionUsage = (*XPartitionUsage)(&overlay.T.PartitionUsage)
	return d.DecodeElement(&overlay, &start)
}

type XH323Phone struct {
	Name                              string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                             XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                          XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                      XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName"`
	LocationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName             XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	UseTrustedRelayPoint              XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	RemoteDevice                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	CgpnTransformationCssName         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AlwaysUsePrimeLine                XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	SrtpAllowed                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	WaitForFarEndH245TerminalSet      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferredCodec                 XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
	CallerIdDn                        string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection             XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation         XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	PresenceGroupName                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	HlogStatus                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	SignalingPort                     XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	GateKeeperInfo                    GateKeeperInfo         `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	Lines                             Anon368                `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	IgnorePresentationIndicators      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	Ctiid                             int                    `xml:"ctiid,attr,omitempty"`
}

func (t *XH323Phone) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XH323Phone
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		AlwaysUsePrimeLine                *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		MtpPreferredCodec                 *XSIPCodec              `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferredCodec,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.MtpPreferredCodec = (*XSIPCodec)(&overlay.T.MtpPreferredCodec)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	return d.DecodeElement(&overlay, &start)
}

type XH323Trunk struct {
	Name                                           string                 `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                        XProduct               `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                                          XClass                 `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                                       XDeviceProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                                   XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                                 XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                         XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                                XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                                   XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	AarNeighborhoodName                            XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	TraceFlag                                      Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                                   string                 `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                     XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                           XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                          Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	CgpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                                XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                          XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                                Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss                  Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	PacketCaptureMode                              XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                          XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SrtpAllowed                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	UnattendedPort                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	WaitForFarEndH245TerminalSet                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 waitForFarEndH245TerminalSet,omitempty"`
	MtpRequired                                    Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	CallerIdDn                                     string                 `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallingPartySelection                          XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	CallingLineIdPresentation                      XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	DisplayIEDelivery                              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 displayIEDelivery,omitempty"`
	RedirectOutboundNumberIe                       Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectOutboundNumberIe,omitempty"`
	RedirectInboundNumberIe                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 redirectInboundNumberIe,omitempty"`
	EnableInboundFaststart                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableInboundFaststart,omitempty"`
	EnableOutboundFaststart                        Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundFaststart,omitempty"`
	CodecForOutboundFaststart                      XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
	AllowH235PassThrough                           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
	TunneledProtocol                               XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                            XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                                    XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	TransmitUtf8                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SignalingPort                                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
	NationalPrefix                                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix                            string                 `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix                                  string                 `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix                               string                 `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	SigDigits                                      SigDigits              `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	PrefixDn                                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CalledPartyIeNumberType                        XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
	CallingPartyIeNumberType                       XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
	CalledNumberingPlan                            XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
	CallingNumberingPlan                           XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
	PathReplacementSupport                         Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	GateKeeperInfo                                 Anon379                `xml:"http://www.cisco.com/AXL/API/9.0 gateKeeperInfo,omitempty"`
	RemoteServerinfo                               RemoteServerinfo       `xml:"http://www.cisco.com/AXL/API/9.0 remoteServerinfo,omitempty"`
	IctPassingPrecedenceLevelThroughUuie           Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 ictPassingPrecedenceLevelThroughUuie,omitempty"`
	IctSecurityAccessLevel                         XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
	IsSafEnabled                                   Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
	CallingPartyNationalStripDigits                XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalStripDigits,omitempty"`
	CallingPartyInternationalStripDigits           XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalStripDigits,omitempty"`
	CallingPartyUnknownStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownStripDigits,omitempty"`
	CallingPartySubscriberStripDigits              XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberStripDigits,omitempty"`
	CallingPartyNationalTransformationCssName      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNationalTransformationCssName,omitempty"`
	CallingPartyInternationalTransformationCssName XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyInternationalTransformationCssName,omitempty"`
	CallingPartyUnknownTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyUnknownTransformationCssName,omitempty"`
	CallingPartySubscriberTransformationCssName    XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySubscriberTransformationCssName,omitempty"`
	CalledPartyNationalPrefix                      string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalPrefix,omitempty"`
	CalledPartyInternationalPrefix                 string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalPrefix,omitempty"`
	CalledPartyUnknownPrefix                       string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownPrefix,omitempty"`
	CalledPartySubscriberPrefix                    string                 `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberPrefix,omitempty"`
	PstnAccess                                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                      XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	AutomatedAlternateRoutingCssName               XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	UseDevicePoolCgpnTransformCssNatl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
	UseDevicePoolCgpnTransformCssIntl              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	UseDevicePoolCgpnTransformCssSubs              Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
	UseDevicePoolCalledCssNatl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
	UseDevicePoolCalledCssIntl                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
	UseDevicePoolCalledCssUnkn                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
	UseDevicePoolCalledCssSubs                     Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
	CalledPartyNationalStripDigits                 XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalStripDigits,omitempty"`
	CalledPartyInternationalStripDigits            XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalStripDigits,omitempty"`
	CalledPartyUnknownStripDigits                  XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownStripDigits,omitempty"`
	CalledPartySubscriberStripDigits               XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberStripDigits,omitempty"`
	CalledPartyNationalTransformationCssName       XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNationalTransformationCssName,omitempty"`
	CalledPartyInternationalTransformationCssName  XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyInternationalTransformationCssName,omitempty"`
	CalledPartyUnknownTransformationCssName        XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyUnknownTransformationCssName,omitempty"`
	CalledPartySubscriberTransformationCssName     XFkType                `xml:"http://www.cisco.com/AXL/API/9.0 calledPartySubscriberTransformationCssName,omitempty"`
	RunOnEveryNode                                 Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Destinations                                   Destinations           `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	Ctiid                                          int                    `xml:"ctiid,attr,omitempty"`
}

func (t *XH323Trunk) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XH323Trunk
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide          `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation       `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption            `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint              *XStatus                `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss     *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode     `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		SrtpAllowed                       *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		UnattendedPort                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		CallingPartySelection             *XCallingPartySelection `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		CallingLineIdPresentation         *XPresentationBit       `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		CodecForOutboundFaststart         *XMediaPayload          `xml:"http://www.cisco.com/AXL/API/9.0 codecForOutboundFaststart,omitempty"`
		AllowH235PassThrough              *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 allowH235PassThrough,omitempty"`
		TunneledProtocol                  *XTunneledProtocol      `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding               *XASN1RoseOidEncoding   `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                       *XQSIGVariant           `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		TransmitUtf8                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		SignalingPort                     *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 signalingPort,omitempty"`
		SigDigits                         *SigDigits              `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		CalledPartyIeNumberType           *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyIeNumberType,omitempty"`
		CallingPartyIeNumberType          *XPriOfNumber           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyIeNumberType,omitempty"`
		CalledNumberingPlan               *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 calledNumberingPlan,omitempty"`
		CallingNumberingPlan              *XNumberingPlan         `xml:"http://www.cisco.com/AXL/API/9.0 callingNumberingPlan,omitempty"`
		PathReplacementSupport            *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		IctSecurityAccessLevel            *XInteger               `xml:"http://www.cisco.com/AXL/API/9.0 ictSecurityAccessLevel,omitempty"`
		IsSafEnabled                      *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 isSafEnabled,omitempty"`
		PstnAccess                        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseDevicePoolCgpnTransformCssNatl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssNatl,omitempty"`
		UseDevicePoolCgpnTransformCssIntl *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssIntl,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		UseDevicePoolCgpnTransformCssSubs *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssSubs,omitempty"`
		UseDevicePoolCalledCssNatl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssNatl,omitempty"`
		UseDevicePoolCalledCssIntl        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssIntl,omitempty"`
		UseDevicePoolCalledCssUnkn        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssUnkn,omitempty"`
		UseDevicePoolCalledCssSubs        *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCalledCssSubs,omitempty"`
		RunOnEveryNode                    *Boolean                `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.CodecForOutboundFaststart = (*XMediaPayload)(&overlay.T.CodecForOutboundFaststart)
	overlay.AllowH235PassThrough = (*Boolean)(&overlay.T.AllowH235PassThrough)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.SignalingPort = (*XInteger)(&overlay.T.SignalingPort)
	overlay.SigDigits = (*SigDigits)(&overlay.T.SigDigits)
	overlay.CalledPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyIeNumberType)
	overlay.CallingPartyIeNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyIeNumberType)
	overlay.CalledNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledNumberingPlan)
	overlay.CallingNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingNumberingPlan)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.IctSecurityAccessLevel = (*XInteger)(&overlay.T.IctSecurityAccessLevel)
	overlay.IsSafEnabled = (*Boolean)(&overlay.T.IsSafEnabled)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseDevicePoolCgpnTransformCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssNatl)
	overlay.UseDevicePoolCgpnTransformCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssIntl)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.UseDevicePoolCgpnTransformCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssSubs)
	overlay.UseDevicePoolCalledCssNatl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssNatl)
	overlay.UseDevicePoolCalledCssIntl = (*Boolean)(&overlay.T.UseDevicePoolCalledCssIntl)
	overlay.UseDevicePoolCalledCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCalledCssUnkn)
	overlay.UseDevicePoolCalledCssSubs = (*Boolean)(&overlay.T.UseDevicePoolCalledCssSubs)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	return d.DecodeElement(&overlay, &start)
}

type XH323TrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder"`
}

type XHandoffConfiguration struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type XHash string

type XHuntAlgorithm string

type XHuntForwardInfoBusy struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type XHuntForwardInfoNoAnswer struct {
	UsePersonalPreferences Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 usePersonalPreferences,omitempty"`
	CallingSearchSpaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	Destination            string   `xml:"http://www.cisco.com/AXL/API/9.0 destination,omitempty"`
	MaxHuntduration        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
}

type XHuntList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	VoiceMailUsage       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	Members              Anon124 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

func (t *XHuntList) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XHuntList
	var overlay struct {
		*T
		RouteListEnabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
		VoiceMailUsage   *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailUsage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RouteListEnabled = (*Boolean)(&overlay.T.RouteListEnabled)
	overlay.VoiceMailUsage = (*Boolean)(&overlay.T.VoiceMailUsage)
	return d.DecodeElement(&overlay, &start)
}

type XHuntListMember struct {
	LineGroupName  XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 lineGroupName,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder"`
}

type XHuntPilot struct {
	Pattern                        string                   `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                    string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable"`
	CalledPartyTransformationMask  string                   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string                   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string                   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string                   `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence       `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan           `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	HuntListName                   XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 huntListName"`
	ParkMonForwardNoRetrieve       ParkMonForwardNoRetrieve `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieve,omitempty"`
	AlertingName                   string                   `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName              string                   `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	E164Mask                       string                   `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	AarNeighborhoodName            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	ForwardHuntNoAnswer            ForwardHuntNoAnswer      `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntNoAnswer,omitempty"`
	ForwardHuntBusy                ForwardHuntBusy          `xml:"http://www.cisco.com/AXL/API/9.0 forwardHuntBusy,omitempty"`
	CallPickupGroupName            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	MaxHuntduration                XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 maxHuntduration,omitempty"`
	ReleaseClause                  XReleaseCauseValue       `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	DisplayConnectedNumber         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	QueueCalls                     XCallsQueue              `xml:"http://www.cisco.com/AXL/API/9.0 queueCalls,omitempty"`
}

func (t *XHuntPilot) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XHuntPilot
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		DisplayConnectedNumber       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 displayConnectedNumber,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.DisplayConnectedNumber = (*Boolean)(&overlay.T.DisplayConnectedNumber)
	return d.DecodeElement(&overlay, &start)
}

type XIDSAuditLevel string

type XILSSyncStatus string

type XIMAddress string

type XIPAddressingMode string

type XIPAddressingModePrefControl string

type XIPMALineMode string

type XIPMATarget string

type XIdentifier string

type XImage string

type XImeClient struct {
	Name                        string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                 string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Domain                      string            `xml:"http://www.cisco.com/AXL/API/9.0 domain"`
	IsActivated                 Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName"`
	PrimaryImeServerName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 primaryImeServerName"`
	SecondaryImeServerName      XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 secondaryImeServerName,omitempty"`
	LearnedRouteFilterGroupName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 learnedRouteFilterGroupName,omitempty"`
	ExclusionNumberGroupName    XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 exclusionNumberGroupName,omitempty"`
	FirewallName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 firewallName,omitempty"`
	Members                     Anon539           `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	CcmExternalIpMaps           CcmExternalIpMaps `xml:"http://www.cisco.com/AXL/API/9.0 ccmExternalIpMaps,omitempty"`
}

func (t *XImeClient) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeClient
	var overlay struct {
		*T
		IsActivated *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsActivated = (*Boolean)(&overlay.T.IsActivated)
	return d.DecodeElement(&overlay, &start)
}

type XImeClientMember struct {
	EnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 enrolledPatternGroupName"`
}

type XImeE164Transformation struct {
	Name                                  string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                           string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CgpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	IsCgpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
	CdpnTransformationCssName             XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	IsCdpnPreTransformation               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	IncomingCgpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCgpnTransformationProfileName,omitempty"`
	IncomingCdpnTransformationProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 incomingCdpnTransformationProfileName,omitempty"`
}

func (t *XImeE164Transformation) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeE164Transformation
	var overlay struct {
		*T
		IsCgpnPreTransformation *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCgpnPreTransformation,omitempty"`
		IsCdpnPreTransformation *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isCdpnPreTransformation,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsCgpnPreTransformation = (*Boolean)(&overlay.T.IsCgpnPreTransformation)
	overlay.IsCdpnPreTransformation = (*Boolean)(&overlay.T.IsCdpnPreTransformation)
	return d.DecodeElement(&overlay, &start)
}

type XImeEnrolledPattern struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeEnrolledPatternGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeEnrolledPatternGroupName,omitempty"`
}

type XImeEnrolledPatternGroup struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description         string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FallbackProfileName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 fallbackProfileName,omitempty"`
	IsPatternAllAlias   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
}

func (t *XImeEnrolledPatternGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeEnrolledPatternGroup
	var overlay struct {
		*T
		IsPatternAllAlias *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isPatternAllAlias,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsPatternAllAlias = (*Boolean)(&overlay.T.IsPatternAllAlias)
	return d.DecodeElement(&overlay, &start)
}

type XImeExclusionNumber struct {
	Pattern                     string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                 string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ImeExclusionNumberGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 imeExclusionNumberGroupName,omitempty"`
}

type XImeExclusionNumberGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XImeFirewall struct {
	Name        string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress   string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
}

func (t *XImeFirewall) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeFirewall
	var overlay struct {
		*T
		Port *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	return d.DecodeElement(&overlay, &start)
}

type XImeRouteFilterElement struct {
	Name                    string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description             string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ElementType             XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	ImeRouteFilterGroupName XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 imeRouteFilterGroupName"`
}

func (t *XImeRouteFilterElement) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeRouteFilterElement
	var overlay struct {
		*T
		ElementType *XViprFilterElement `xml:"http://www.cisco.com/AXL/API/9.0 elementType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ElementType = (*XViprFilterElement)(&overlay.T.ElementType)
	return d.DecodeElement(&overlay, &start)
}

type XImeRouteFilterGroup struct {
	Name              string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description       string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	GroupTrustSetting Boolean `xml:"http://www.cisco.com/AXL/API/9.0 groupTrustSetting,omitempty"`
}

type XImeServer struct {
	Name               string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description        string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IpAddress          string              `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Port               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	DeviceSecurityMode XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	ApplicationUser    XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 applicationUser"`
	ReconnectInterval  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
}

func (t *XImeServer) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImeServer
	var overlay struct {
		*T
		Port               *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		DeviceSecurityMode *XServerSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
		ReconnectInterval  *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 reconnectInterval,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.DeviceSecurityMode = (*XServerSecurityMode)(&overlay.T.DeviceSecurityMode)
	overlay.ReconnectInterval = (*XInteger)(&overlay.T.ReconnectInterval)
	return d.DecodeElement(&overlay, &start)
}

type XImportedDirectoryUriCatalogs struct {
	Name               string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description        string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RouteString        string   `xml:"http://www.cisco.com/AXL/API/9.0 routeString"`
	LastLoadedFileName string   `xml:"http://www.cisco.com/AXL/API/9.0 lastLoadedFileName,omitempty"`
	FileLoadDateTime   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fileLoadDateTime,omitempty"`
}

func (t *XImportedDirectoryUriCatalogs) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XImportedDirectoryUriCatalogs
	var overlay struct {
		*T
		FileLoadDateTime *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 fileLoadDateTime,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.FileLoadDateTime = (*XInteger)(&overlay.T.FileLoadDateTime)
	return d.DecodeElement(&overlay, &start)
}

type XInteger string

type XInterClusterService string

type XInterClusterServiceProfile struct {
	InterClusterService XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
	IsActivated         Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	SipTrunkName        XFkType              `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName,omitempty"`
}

func (t *XInterClusterServiceProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XInterClusterServiceProfile
	var overlay struct {
		*T
		InterClusterService *XInterClusterService `xml:"http://www.cisco.com/AXL/API/9.0 interClusterService,omitempty"`
		IsActivated         *Boolean              `xml:"http://www.cisco.com/AXL/API/9.0 isActivated,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.InterClusterService = (*XInterClusterService)(&overlay.T.InterClusterService)
	overlay.IsActivated = (*Boolean)(&overlay.T.IsActivated)
	return d.DecodeElement(&overlay, &start)
}

type XIpPhoneServices struct {
	ServiceName            string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceName"`
	AsciiServiceName       string                `xml:"http://www.cisco.com/AXL/API/9.0 asciiServiceName"`
	ServiceDescription     string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceDescription,omitempty"`
	ServiceUrl             string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceUrl,omitempty"`
	SecureServiceUrl       string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServiceUrl,omitempty"`
	ServiceCategory        XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
	ServiceType            XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
	ServiceVendor          string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVendor,omitempty"`
	ServiceVersion         string                `xml:"http://www.cisco.com/AXL/API/9.0 serviceVersion,omitempty"`
	Enabled                Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	EnterpriseSubscription Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseSubscription,omitempty"`
	Parameters             Parameters            `xml:"http://www.cisco.com/AXL/API/9.0 parameters,omitempty"`
}

func (t *XIpPhoneServices) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XIpPhoneServices
	var overlay struct {
		*T
		ServiceCategory        *XPhoneServiceCategory `xml:"http://www.cisco.com/AXL/API/9.0 serviceCategory,omitempty"`
		ServiceType            *XPhoneService         `xml:"http://www.cisco.com/AXL/API/9.0 serviceType,omitempty"`
		Enabled                *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
		EnterpriseSubscription *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enterpriseSubscription,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ServiceCategory = (*XPhoneServiceCategory)(&overlay.T.ServiceCategory)
	overlay.ServiceType = (*XPhoneService)(&overlay.T.ServiceType)
	overlay.Enabled = (*Boolean)(&overlay.T.Enabled)
	overlay.EnterpriseSubscription = (*Boolean)(&overlay.T.EnterpriseSubscription)
	return d.DecodeElement(&overlay, &start)
}

type XIpPhoneServicesParameter struct {
	Name          string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DisplayName   string  `xml:"http://www.cisco.com/AXL/API/9.0 displayName"`
	Default       string  `xml:"http://www.cisco.com/AXL/API/9.0 default,omitempty"`
	Description   string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ParamRequired Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramRequired,omitempty"`
	ParamPassword Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramPassword,omitempty"`
}

func (t *XIpPhoneServicesParameter) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XIpPhoneServicesParameter
	var overlay struct {
		*T
		ParamRequired *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramRequired,omitempty"`
		ParamPassword *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 paramPassword,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ParamRequired = (*Boolean)(&overlay.T.ParamRequired)
	overlay.ParamPassword = (*Boolean)(&overlay.T.ParamPassword)
	return d.DecodeElement(&overlay, &start)
}

type XIvrUserLocale struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex"`
}

type XKey string

type XKeyAuthority string

type XKeyPadMapping string

type XKeySize string

type XLDAPProtocol string

type XLampBlinkRate string

type XLanguage string

type XLanguageGroup string

type XLbmGroup struct {
	Name               string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description        string  `xml:"http://www.cisco.com/AXL/API/9.0 Description,omitempty"`
	ProcessnodeActive  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeActive,omitempty"`
	ProcessnodeStandby XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ProcessnodeStandby,omitempty"`
}

type XLbmHubGroup struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Member1     string `xml:"http://www.cisco.com/AXL/API/9.0 member1"`
	Member2     string `xml:"http://www.cisco.com/AXL/API/9.0 member2,omitempty"`
	Member3     string `xml:"http://www.cisco.com/AXL/API/9.0 member3,omitempty"`
}

type XLdapAuthentication struct {
	AuthenticateEndUsers Boolean `xml:"http://www.cisco.com/AXL/API/9.0 authenticateEndUsers,omitempty"`
	DistinguishedName    string  `xml:"http://www.cisco.com/AXL/API/9.0 distinguishedName,omitempty"`
	LdapPassword         string  `xml:"http://www.cisco.com/AXL/API/9.0 ldapPassword,omitempty"`
	UserSearchBase       string  `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase,omitempty"`
	Servers              Anon817 `xml:"http://www.cisco.com/AXL/API/9.0 servers,omitempty"`
	Uuid                 XUUID   `xml:"uuid,attr,omitempty"`
}

type XLdapDirectory struct {
	Name           string        `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	LdapDn         string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapDn"`
	LdapPassword   string        `xml:"http://www.cisco.com/AXL/API/9.0 ldapPassword"`
	UserSearchBase string        `xml:"http://www.cisco.com/AXL/API/9.0 userSearchBase"`
	Repeatable     Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 repeatable,omitempty"`
	IntervalValue  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 intervalValue,omitempty"`
	ScheduleUnit   XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	NextExecTime   string        `xml:"http://www.cisco.com/AXL/API/9.0 nextExecTime"`
	Servers        Servers       `xml:"http://www.cisco.com/AXL/API/9.0 servers"`
	MiddleName     string        `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	PhoneNumber    string        `xml:"http://www.cisco.com/AXL/API/9.0 phoneNumber,omitempty"`
	MailId         string        `xml:"http://www.cisco.com/AXL/API/9.0 mailId,omitempty"`
	LdapFilter     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 ldapFilter,omitempty"`
	DirectoryUri   string        `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
}

func (t *XLdapDirectory) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLdapDirectory
	var overlay struct {
		*T
		ScheduleUnit *XScheduleUnit `xml:"http://www.cisco.com/AXL/API/9.0 scheduleUnit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ScheduleUnit = (*XScheduleUnit)(&overlay.T.ScheduleUnit)
	return d.DecodeElement(&overlay, &start)
}

type XLdapFilter struct {
	Name   string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Filter string `xml:"http://www.cisco.com/AXL/API/9.0 filter"`
}

type XLdapServer string

type XLdapServerAttr string

type XLdapSyncCustomField struct {
	LdapConfigurationName string `xml:"http://www.cisco.com/AXL/API/9.0 ldapConfigurationName"`
	CustomUserField       string `xml:"http://www.cisco.com/AXL/API/9.0 customUserField"`
	LdapUserField         string `xml:"http://www.cisco.com/AXL/API/9.0 ldapUserField"`
}

type XLdapSystem struct {
	SyncEnabled     Boolean     `xml:"http://www.cisco.com/AXL/API/9.0 syncEnabled,omitempty"`
	LdapServer      XLdapServer `xml:"http://www.cisco.com/AXL/API/9.0 ldapServer,omitempty"`
	UserIdAttribute string      `xml:"http://www.cisco.com/AXL/API/9.0 userIdAttribute,omitempty"`
}

type XLicenseCapabilities struct {
	Userid    string  `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	EnableUps Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
	EnableUpc Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
}

func (t *XLicenseCapabilities) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLicenseCapabilities
	var overlay struct {
		*T
		EnableUps *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUps,omitempty"`
		EnableUpc *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enableUpc,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableUps = (*Boolean)(&overlay.T.EnableUps)
	overlay.EnableUpc = (*Boolean)(&overlay.T.EnableUpc)
	return d.DecodeElement(&overlay, &start)
}

type XLicenseFeature string

type XLicenseUnit string

type XLicenseUnitReport struct {
	ServerName             string                 `xml:"http://www.cisco.com/AXL/API/9.0 serverName,omitempty"`
	PhoneLicenseFeature    PhoneLicenseFeature    `xml:"http://www.cisco.com/AXL/API/9.0 phoneLicenseFeature,omitempty"`
	CcmNodeLicenseFeature  CcmNodeLicenseFeature  `xml:"http://www.cisco.com/AXL/API/9.0 ccmNodeLicenseFeature,omitempty"`
	SoftwareLicenseVersion SoftwareLicenseVersion `xml:"http://www.cisco.com/AXL/API/9.0 softwareLicenseVersion,omitempty"`
}

type XLicensedResource string

type XLicensingMode string

type XLicensingState string

type XLine struct {
	Pattern                              string                       `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                          string                       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                                XPatternUsage                `xml:"http://www.cisco.com/AXL/API/9.0 usage"`
	RoutePartitionName                   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	AarNeighborhoodName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	AarDestinationMask                   string                       `xml:"http://www.cisco.com/AXL/API/9.0 aarDestinationMask,omitempty"`
	AarKeepCallHistory                   Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarKeepCallHistory,omitempty"`
	AarVoiceMailEnabled                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 aarVoiceMailEnabled,omitempty"`
	CallForwardAll                       XCallForwardAll              `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAll,omitempty"`
	CallForwardBusy                      XCallForwardBusy             `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusy,omitempty"`
	CallForwardBusyInt                   XCallForwardBusyInt          `xml:"http://www.cisco.com/AXL/API/9.0 callForwardBusyInt,omitempty"`
	CallForwardNoAnswer                  XCallForwardNoAnswer         `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswer,omitempty"`
	CallForwardNoAnswerInt               XCallForwardNoAnswerInt      `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoAnswerInt,omitempty"`
	CallForwardNoCoverage                XCallForwardNoCoverage       `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverage,omitempty"`
	CallForwardNoCoverageInt             XCallForwardNoCoverageInt    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNoCoverageInt,omitempty"`
	CallForwardOnFailure                 XCallForwardOnFailure        `xml:"http://www.cisco.com/AXL/API/9.0 callForwardOnFailure,omitempty"`
	CallForwardAlternateParty            XCallForwardAlternateParty   `xml:"http://www.cisco.com/AXL/API/9.0 callForwardAlternateParty,omitempty"`
	CallForwardNotRegistered             XCallForwardNotRegistered    `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegistered,omitempty"`
	CallForwardNotRegisteredInt          XCallForwardNotRegisteredInt `xml:"http://www.cisco.com/AXL/API/9.0 callForwardNotRegisteredInt,omitempty"`
	CallPickupGroupName                  XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 callPickupGroupName,omitempty"`
	AutoAnswer                           XAutoAnswer                  `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
	NetworkHoldMohAudioSourceId          XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId             XMOHAudioSourceId            `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AlertingName                         string                       `xml:"http://www.cisco.com/AXL/API/9.0 alertingName,omitempty"`
	AsciiAlertingName                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 asciiAlertingName,omitempty"`
	PresenceGroupName                    XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	ShareLineAppearanceCssName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 shareLineAppearanceCssName,omitempty"`
	VoiceMailProfileName                 XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	PatternPrecedence                    XPatternPrecedence           `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                        XReleaseCauseValue           `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	HrDuration                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrDuration,omitempty"`
	HrInterval                           XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 hrInterval,omitempty"`
	CfaCssPolicy                         XCFACSSActivationPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
	DefaultActivatedDeviceName           XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 defaultActivatedDeviceName,omitempty"`
	ParkMonForwardNoRetrieveDn           string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveDn,omitempty"`
	ParkMonForwardNoRetrieveIntDn        string                       `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntDn,omitempty"`
	ParkMonForwardNoRetrieveVmEnabled    Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveIntVmEnabled Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntVmEnabled,omitempty"`
	ParkMonForwardNoRetrieveCssName      XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveCssName,omitempty"`
	ParkMonForwardNoRetrieveIntCssName   XFkType                      `xml:"http://www.cisco.com/AXL/API/9.0 parkMonForwardNoRetrieveIntCssName,omitempty"`
	ParkMonReversionTimer                XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 parkMonReversionTimer,omitempty"`
	PartyEntranceTone                    XStatus                      `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
	DirectoryURIs                        DirectoryURIs                `xml:"http://www.cisco.com/AXL/API/9.0 directoryURIs,omitempty"`
	AllowCtiControlFlag                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	RejectAnonymousCall                  Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousCall,omitempty"`
}

func (t *XLine) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLine
	var overlay struct {
		*T
		AutoAnswer          *XAutoAnswer             `xml:"http://www.cisco.com/AXL/API/9.0 autoAnswer,omitempty"`
		PatternPrecedence   *XPatternPrecedence      `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ReleaseClause       *XReleaseCauseValue      `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		CfaCssPolicy        *XCFACSSActivationPolicy `xml:"http://www.cisco.com/AXL/API/9.0 cfaCssPolicy,omitempty"`
		PartyEntranceTone   *XStatus                 `xml:"http://www.cisco.com/AXL/API/9.0 partyEntranceTone,omitempty"`
		AllowCtiControlFlag *Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AutoAnswer = (*XAutoAnswer)(&overlay.T.AutoAnswer)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.CfaCssPolicy = (*XCFACSSActivationPolicy)(&overlay.T.CfaCssPolicy)
	overlay.PartyEntranceTone = (*XStatus)(&overlay.T.PartyEntranceTone)
	overlay.AllowCtiControlFlag = (*Boolean)(&overlay.T.AllowCtiControlFlag)
	return d.DecodeElement(&overlay, &start)
}

type XLineAppearanceAssociationForPresence struct {
	LaapAssociate   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 laapAssociate,omitempty"`
	LaapProductType string  `xml:"http://www.cisco.com/AXL/API/9.0 laapProductType,omitempty"`
	LaapDeviceName  string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDeviceName,omitempty"`
	LaapDirectory   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDirectory,omitempty"`
	LaapPartition   string  `xml:"http://www.cisco.com/AXL/API/9.0 laapPartition,omitempty"`
	LaapDescription string  `xml:"http://www.cisco.com/AXL/API/9.0 laapDescription,omitempty"`
}

type XLineAssociation struct {
	Uuid               XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 uuid"`
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type XLineGroup struct {
	Name                      string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DistributionAlgorithm     XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	RnaReversionTimeOut       XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
	HuntAlgorithmNoAnswer     XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
	HuntAlgorithmBusy         XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
	HuntAlgorithmNotAvailable XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	Members                   Anon134              `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

func (t *XLineGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLineGroup
	var overlay struct {
		*T
		DistributionAlgorithm     *XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
		RnaReversionTimeOut       *XInteger             `xml:"http://www.cisco.com/AXL/API/9.0 rnaReversionTimeOut,omitempty"`
		HuntAlgorithmNoAnswer     *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNoAnswer,omitempty"`
		HuntAlgorithmBusy         *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmBusy,omitempty"`
		HuntAlgorithmNotAvailable *XHuntAlgorithm       `xml:"http://www.cisco.com/AXL/API/9.0 huntAlgorithmNotAvailable,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DistributionAlgorithm = (*XDistributeAlgorithm)(&overlay.T.DistributionAlgorithm)
	overlay.RnaReversionTimeOut = (*XInteger)(&overlay.T.RnaReversionTimeOut)
	overlay.HuntAlgorithmNoAnswer = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmNoAnswer)
	overlay.HuntAlgorithmBusy = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmBusy)
	overlay.HuntAlgorithmNotAvailable = (*XHuntAlgorithm)(&overlay.T.HuntAlgorithmNotAvailable)
	return d.DecodeElement(&overlay, &start)
}

type XLineGroupMember struct {
	LineSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 lineSelectionOrder"`
	DirectoryNumber    XDirn    `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber"`
}

type XLoadInformation struct {
	Value   string  `xml:",chardata"`
	Special Boolean `xml:"special,attr,omitempty"`
}

type XLocation struct {
	Name                 string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Kbits                XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 kbits,omitempty"`
	VideoKbits           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 videoKbits,omitempty"`
	RelatedLocations     RelatedLocations `xml:"http://www.cisco.com/AXL/API/9.0 relatedLocations,omitempty"`
	WithinAudioBandwidth XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
	WithinVideoBandwidth XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
	WithinImmersiveKbits XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	BetweenLocations     BetweenLocations `xml:"http://www.cisco.com/AXL/API/9.0 betweenLocations"`
}

func (t *XLocation) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLocation
	var overlay struct {
		*T
		WithinAudioBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinAudioBandwidth,omitempty"`
		WithinVideoBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinVideoBandwidth,omitempty"`
		WithinImmersiveKbits *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 withinImmersiveKbits,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.WithinAudioBandwidth = (*XInteger)(&overlay.T.WithinAudioBandwidth)
	overlay.WithinVideoBandwidth = (*XInteger)(&overlay.T.WithinVideoBandwidth)
	overlay.WithinImmersiveKbits = (*XInteger)(&overlay.T.WithinImmersiveKbits)
	return d.DecodeElement(&overlay, &start)
}

type XLocationBetween struct {
	LocationName       XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	Weight             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 weight,omitempty"`
	AudioBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 audioBandwidth"`
	VideoBandwidth     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	ImmersiveBandwidth XInteger `xml:"http://www.cisco.com/AXL/API/9.0 immersiveBandwidth,omitempty"`
}

func (t *XLocationBetween) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XLocationBetween
	var overlay struct {
		*T
		Weight             *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 weight,omitempty"`
		VideoBandwidth     *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
		ImmersiveBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 immersiveBandwidth,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Weight = (*XInteger)(&overlay.T.Weight)
	overlay.VideoBandwidth = (*XInteger)(&overlay.T.VideoBandwidth)
	overlay.ImmersiveBandwidth = (*XInteger)(&overlay.T.ImmersiveBandwidth)
	return d.DecodeElement(&overlay, &start)
}

type XLocationRelationship struct {
	LocationName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	RsvpSetting  XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 rsvpSetting"`
}

type XLogicalPartitionPolicy string

type XLoginContext string

type XLossyNetwork string

type XMGCPSlotModule string

type XMGCPVic string

type XMOHAudioSourceId string

type XMOHCodec string

type XMWLPolicy string

// Must match the pattern ([0-9]|[a-f]|[A-F]){12}
type XMacAddress string

type XMaintStatus string

type XMatrix string

type XMatrixValue string

type XMedia string

type XMediaPayload string

type XMediaResourceGroup struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Multicast   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 multicast"`
	Members     Anon47  `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

type XMediaResourceGroupMember struct {
	DeviceName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 deviceName"`
}

type XMediaResourceList struct {
	Name    string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Members Anon54 `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

type XMediaResourceListMember struct {
	MediaResourceGroupName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceGroupName"`
	Order                  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 order"`
}

type XMeetMe struct {
	Pattern              string              `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description          string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName   XFkType             `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	MinimumSecurityLevel XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 minimumSecurityLevel,omitempty"`
}

type XMessageWaiting struct {
	Pattern                 string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName      XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MessageWaitingIndicator Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	CallingSearchSpaceName  XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
}

func (t *XMessageWaiting) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XMessageWaiting
	var overlay struct {
		*T
		MessageWaitingIndicator *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 messageWaitingIndicator,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MessageWaitingIndicator = (*Boolean)(&overlay.T.MessageWaitingIndicator)
	return d.DecodeElement(&overlay, &start)
}

type XMixer string

type XMlppDomain struct {
	DomainName string `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	DomainId   string `xml:"http://www.cisco.com/AXL/API/9.0 domainId"`
}

type XMobileSmartClient string

type XMobileSmartClientProfile struct {
	Name              string             `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	MobileSmartClient XMobileSmartClient `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClient,omitempty"`
	EnableSnrUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableSnrUri,omitempty"`
	EnableCFAUri      string             `xml:"http://www.cisco.com/AXL/API/9.0 enableCFAUri,omitempty"`
	HandOffUri        string             `xml:"http://www.cisco.com/AXL/API/9.0 handOffUri,omitempty"`
}

func (t *XMobileSmartClientProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XMobileSmartClientProfile
	var overlay struct {
		*T
		MobileSmartClient *XMobileSmartClient `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClient,omitempty"`
		EnableSnrUri      *string             `xml:"http://www.cisco.com/AXL/API/9.0 enableSnrUri,omitempty"`
		EnableCFAUri      *string             `xml:"http://www.cisco.com/AXL/API/9.0 enableCFAUri,omitempty"`
		HandOffUri        *string             `xml:"http://www.cisco.com/AXL/API/9.0 handOffUri,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MobileSmartClient = (*XMobileSmartClient)(&overlay.T.MobileSmartClient)
	overlay.EnableSnrUri = (*string)(&overlay.T.EnableSnrUri)
	overlay.EnableCFAUri = (*string)(&overlay.T.EnableCFAUri)
	overlay.HandOffUri = (*string)(&overlay.T.HandOffUri)
	return d.DecodeElement(&overlay, &start)
}

type XMobileVoiceAccess struct {
	Pattern            string  `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	RoutePartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	Locales            Locales `xml:"http://www.cisco.com/AXL/API/9.0 locales"`
}

type XMobileVoiceMember struct {
	UserLocale XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 userLocale"`
	OrderIndex XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 orderIndex"`
}

type XMobility struct {
	HandoffNumber        string  `xml:"http://www.cisco.com/AXL/API/9.0 handoffNumber"`
	HandoffPartitionName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 handoffPartitionName,omitempty"`
	DTMFNumber           string  `xml:"http://www.cisco.com/AXL/API/9.0 DTMFNumber"`
	DTMFPartitionName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 DTMFPartitionName,omitempty"`
}

type XMobilityProfile struct {
	Name                      string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description               string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	MobileClientCallingOption XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	DvofServiceAccessNumber   string         `xml:"http://www.cisco.com/AXL/API/9.0 dvofServiceAccessNumber,omitempty"`
	Dirn                      XDirn          `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	DvorCallerId              string         `xml:"http://www.cisco.com/AXL/API/9.0 dvorCallerId,omitempty"`
}

func (t *XMobilityProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XMobilityProfile
	var overlay struct {
		*T
		MobileClientCallingOption *XDialViaOffice `xml:"http://www.cisco.com/AXL/API/9.0 mobileClientCallingOption,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MobileClientCallingOption = (*XDialViaOffice)(&overlay.T.MobileClientCallingOption)
	return d.DecodeElement(&overlay, &start)
}

type XModel string

type XMohAudioSource struct {
	SourceId                     XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 sourceId"`
	Name                         string            `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	SourceFile                   string            `xml:"http://www.cisco.com/AXL/API/9.0 sourceFile,omitempty"`
	Multicast                    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 multicast"`
	Repeat                       Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 repeat,omitempty"`
	MohFileStatus                XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 mohFileStatus,omitempty"`
	InitialAnnouncement          XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncement,omitempty"`
	PeriodicAnnouncement         XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncement,omitempty"`
	PeriodicAnnouncementInterval XInteger          `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
	LocaleAnnouncement           XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	InitialAnnouncementPlayed    Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 initialAnnouncementPlayed,omitempty"`
}

func (t *XMohAudioSource) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XMohAudioSource
	var overlay struct {
		*T
		PeriodicAnnouncementInterval *XInteger    `xml:"http://www.cisco.com/AXL/API/9.0 periodicAnnouncementInterval,omitempty"`
		LocaleAnnouncement           *XUserLocale `xml:"http://www.cisco.com/AXL/API/9.0 localeAnnouncement,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.PeriodicAnnouncementInterval = (*XInteger)(&overlay.T.PeriodicAnnouncementInterval)
	overlay.LocaleAnnouncement = (*XUserLocale)(&overlay.T.LocaleAnnouncement)
	return d.DecodeElement(&overlay, &start)
}

type XMohServer struct {
	Name                    string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description             string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ProcessNodeName         XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName,omitempty"`
	DevicePoolName          XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	LocationName            XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MaxUnicastConnections   XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
	MaxMulticastConnections XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
	FixedAudioSourceDevice  string       `xml:"http://www.cisco.com/AXL/API/9.0 fixedAudioSourceDevice,omitempty"`
	RunFlag                 Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
	UseTrustedRelayPoint    XStatus      `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	IsMultiCastEnabled      Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 isMultiCastEnabled,omitempty"`
	BaseMulticastIpaddress  string       `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
	BaseMulticastPort       XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
	MulticastIncrementOnIp  Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	AudioSources            AudioSources `xml:"http://www.cisco.com/AXL/API/9.0 audioSources,omitempty"`
}

func (t *XMohServer) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XMohServer
	var overlay struct {
		*T
		MaxUnicastConnections   *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxUnicastConnections,omitempty"`
		MaxMulticastConnections *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxMulticastConnections,omitempty"`
		RunFlag                 *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 runFlag,omitempty"`
		UseTrustedRelayPoint    *XStatus  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		BaseMulticastIpaddress  *string   `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastIpaddress,omitempty"`
		BaseMulticastPort       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 baseMulticastPort,omitempty"`
		MulticastIncrementOnIp  *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 multicastIncrementOnIp,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.MaxUnicastConnections = (*XInteger)(&overlay.T.MaxUnicastConnections)
	overlay.MaxMulticastConnections = (*XInteger)(&overlay.T.MaxMulticastConnections)
	overlay.RunFlag = (*Boolean)(&overlay.T.RunFlag)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.BaseMulticastIpaddress = (*string)(&overlay.T.BaseMulticastIpaddress)
	overlay.BaseMulticastPort = (*XInteger)(&overlay.T.BaseMulticastPort)
	overlay.MulticastIncrementOnIp = (*Boolean)(&overlay.T.MulticastIncrementOnIp)
	return d.DecodeElement(&overlay, &start)
}

type XMonitor string

type XMonthOfYear string

type XMtp struct {
	MtpType           XProduct `xml:"http://www.cisco.com/AXL/API/9.0 mtpType"`
	Name              string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description       string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DevicePoolName    XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	TrustedRelayPoint Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 trustedRelayPoint,omitempty"`
}

type XNSFService string

type XNameAttribute struct {
	Name XProduct `xml:"name,attr,omitempty"`
}

type XNameDisplayFormat string

type XNetworkLocation string

type XNodeAccess string

type XNodeUsage string

type XNormalizationScriptInfo struct {
	ParameterName  string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
	ParameterValue string `xml:"http://www.cisco.com/AXL/API/9.0 parameterValue,omitempty"`
}

func (t *XNormalizationScriptInfo) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XNormalizationScriptInfo
	var overlay struct {
		*T
		ParameterName  *string `xml:"http://www.cisco.com/AXL/API/9.0 parameterName,omitempty"`
		ParameterValue *string `xml:"http://www.cisco.com/AXL/API/9.0 parameterValue,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ParameterName = (*string)(&overlay.T.ParameterName)
	overlay.ParameterValue = (*string)(&overlay.T.ParameterValue)
	return d.DecodeElement(&overlay, &start)
}

type XNotification struct {
	Object        string   `xml:"http://www.cisco.com/AXL/API/9.0 object"`
	Count         string   `xml:"http://www.cisco.com/AXL/API/9.0 count"`
	ChangedObject []string `xml:"http://www.cisco.com/AXL/API/9.0 changedObject"`
}

type XNumberingPlan string

type XNumplanIdentifier struct {
	DirectoryNumber    string `xml:"http://www.cisco.com/AXL/API/9.0 directoryNumber"`
	RoutePartitionName string `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
}

type XOSVersion struct {
	OsName    string `xml:"http://www.cisco.com/AXL/API/9.0 osName"`
	OsVersion string `xml:"http://www.cisco.com/AXL/API/9.0 osVersion"`
}

type XOccasionDate string

type XOperator string

type XOpsRestrict string

type XOutboundCallRollover string

type XPRIChanIE string

type XPacketCaptureMode string

type XParam string

type XParameterMember struct {
	Parameter      XDialParameter `xml:"http://www.cisco.com/AXL/API/9.0 parameter,omitempty"`
	Value          string         `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	SelectionOrder XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
}

func (t *XParameterMember) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XParameterMember
	var overlay struct {
		*T
		SelectionOrder *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SelectionOrder = (*XInteger)(&overlay.T.SelectionOrder)
	return d.DecodeElement(&overlay, &start)
}

type XPartitionUsage string

type XPattern string

type XPatternMember struct {
	Description    string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DialParameters Anon802  `xml:"http://www.cisco.com/AXL/API/9.0 dialParameters,omitempty"`
	SelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder"`
}

type XPatternPrecedence string

type XPatternRouteClass string

type XPatternUsage string

type XPermission string

type XPersonalPhoneNumber string

type XPhone struct {
	Name                              string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                       string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                           XProduct              `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                             XClass                `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                          XDeviceProtocol       `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                      XProtocolSide         `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName            XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	CommonPhoneConfigName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 commonPhoneConfigName"`
	NetworkLocation                   XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId       XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId          XMOHAudioSourceId     `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	LoadInformation                   XLoadInformation      `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig                      XVendorConfig         `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp                      string                `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
	TraceFlag                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                      string                `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                        XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint              XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio             Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                    XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName         XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName             XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	Lines                             Anon387               `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	PhoneTemplateName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 phoneTemplateName,omitempty"`
	Speeddials                        Speeddials            `xml:"http://www.cisco.com/AXL/API/9.0 speeddials,omitempty"`
	BusyLampFields                    BusyLampFields        `xml:"http://www.cisco.com/AXL/API/9.0 busyLampFields,omitempty"`
	PrimaryPhoneName                  XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	RingSettingIdleBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
	RingSettingBusyBlfAudibleAlert    XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
	BlfDirectedCallParks              BlfDirectedCallParks  `xml:"http://www.cisco.com/AXL/API/9.0 blfDirectedCallParks,omitempty"`
	AddOnModules                      AddOnModules          `xml:"http://www.cisco.com/AXL/API/9.0 addOnModules,omitempty"`
	UserLocale                        XUserLocale           `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	NetworkLocale                     XCountry              `xml:"http://www.cisco.com/AXL/API/9.0 networkLocale,omitempty"`
	IdleTimeout                       XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 idleTimeout,omitempty"`
	AuthenticationUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationUrl,omitempty"`
	DirectoryUrl                      string                `xml:"http://www.cisco.com/AXL/API/9.0 directoryUrl,omitempty"`
	IdleUrl                           string                `xml:"http://www.cisco.com/AXL/API/9.0 idleUrl,omitempty"`
	InformationUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 informationUrl,omitempty"`
	MessagesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 messagesUrl,omitempty"`
	ProxyServerUrl                    string                `xml:"http://www.cisco.com/AXL/API/9.0 proxyServerUrl,omitempty"`
	ServicesUrl                       string                `xml:"http://www.cisco.com/AXL/API/9.0 servicesUrl,omitempty"`
	Services                          Services              `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
	SoftkeyTemplateName               XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 softkeyTemplateName,omitempty"`
	DefaultProfileName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfileName,omitempty"`
	EnableExtensionMobility           Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	SingleButtonBarge                 XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
	JoinAcrossLines                   XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
	BuiltInBridgeStatus               XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
	CallInfoPrivacyStatus             XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	HlogStatus                        XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 hlogStatus,omitempty"`
	OwnerUserName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 ownerUserName,omitempty"`
	IgnorePresentationIndicators      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	PacketCaptureMode                 XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration             XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	SubscribeCallingSearchSpaceName   XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	AllowCtiControlFlag               Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 allowCtiControlFlag,omitempty"`
	PresenceGroupName                 XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName,omitempty"`
	UnattendedPort                    Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	RequireDtmfReception              Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
	Rfc2833Disabled                   Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
	CertificateOperation              XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
	AuthenticationMode                XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                           XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	AuthenticationString              string                `xml:"http://www.cisco.com/AXL/API/9.0 authenticationString,omitempty"`
	UpgradeFinishTime                 string                `xml:"http://www.cisco.com/AXL/API/9.0 upgradeFinishTime,omitempty"`
	DeviceMobilityMode                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
	RemoteDevice                      Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
	DndOption                         XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndRingSetting                    XRingSetting          `xml:"http://www.cisco.com/AXL/API/9.0 dndRingSetting,omitempty"`
	DndStatus                         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	IsActive                          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
	IsDualMode                        Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isDualMode,omitempty"`
	MobilityUserIdName                XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobilityUserIdName,omitempty"`
	PhoneSuite                        XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
	PhoneServiceDisplay               XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
	IsProtected                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
	MobileSmartClientProfileName      XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	MtpRequired                       Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	MtpPreferedCodec                  XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
	DialRulesName                     XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 dialRulesName,omitempty"`
	SshUserId                         string                `xml:"http://www.cisco.com/AXL/API/9.0 sshUserId,omitempty"`
	SshPwd                            string                `xml:"http://www.cisco.com/AXL/API/9.0 sshPwd,omitempty"`
	DigestUser                        string                `xml:"http://www.cisco.com/AXL/API/9.0 digestUser,omitempty"`
	OutboundCallRollover              XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
	HotlineDevice                     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
	SecureInformationUrl              string                `xml:"http://www.cisco.com/AXL/API/9.0 secureInformationUrl,omitempty"`
	SecureDirectoryUrl                string                `xml:"http://www.cisco.com/AXL/API/9.0 secureDirectoryUrl,omitempty"`
	SecureMessageUrl                  string                `xml:"http://www.cisco.com/AXL/API/9.0 secureMessageUrl,omitempty"`
	SecureServicesUrl                 string                `xml:"http://www.cisco.com/AXL/API/9.0 secureServicesUrl,omitempty"`
	SecureAuthenticationUrl           string                `xml:"http://www.cisco.com/AXL/API/9.0 secureAuthenticationUrl,omitempty"`
	SecureIdleUrl                     string                `xml:"http://www.cisco.com/AXL/API/9.0 secureIdleUrl,omitempty"`
	AlwaysUsePrimeLine                XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
	AlwaysUsePrimeLineForVoiceMessage XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
	FeatureControlPolicy              XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 featureControlPolicy,omitempty"`
	DeviceTrustMode                   XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
	EarlyOfferSupportForVoiceCall     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	RequireThirdPartyRegistration     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireThirdPartyRegistration,omitempty"`
	BlockIncomingCallsWhenRoaming     Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 blockIncomingCallsWhenRoaming,omitempty"`
	HomeNetworkId                     string                `xml:"http://www.cisco.com/AXL/API/9.0 homeNetworkId,omitempty"`
	AllowPresentationSharingUsingBfcp Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
	RequireOffPremiseLocation         Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	Ctiid                             int                   `xml:"ctiid,attr,omitempty"`
}

func (t *XPhone) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XPhone
	var overlay struct {
		*T
		ProtocolSide                      *XProtocolSide         `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                   *XNetworkLocation      `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		MlppIndicationStatus              *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                        *XPreemption           `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint              *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio             *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		RingSettingIdleBlfAudibleAlert    *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdleBlfAudibleAlert,omitempty"`
		RingSettingBusyBlfAudibleAlert    *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingBusyBlfAudibleAlert,omitempty"`
		SingleButtonBarge                 *XBarge                `xml:"http://www.cisco.com/AXL/API/9.0 singleButtonBarge,omitempty"`
		JoinAcrossLines                   *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 joinAcrossLines,omitempty"`
		BuiltInBridgeStatus               *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 builtInBridgeStatus,omitempty"`
		CallInfoPrivacyStatus             *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
		IgnorePresentationIndicators      *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		PacketCaptureMode                 *XPacketCaptureMode    `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration             *XInteger              `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		UnattendedPort                    *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		RequireDtmfReception              *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireDtmfReception,omitempty"`
		Rfc2833Disabled                   *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 rfc2833Disabled,omitempty"`
		CertificateOperation              *XCertificateOperation `xml:"http://www.cisco.com/AXL/API/9.0 certificateOperation,omitempty"`
		AuthenticationMode                *XAuthenticationMode   `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                           *XKeySize              `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
		DeviceMobilityMode                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 deviceMobilityMode,omitempty"`
		RemoteDevice                      *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 remoteDevice,omitempty"`
		DndOption                         *XDNDOption            `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
		IsActive                          *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isActive,omitempty"`
		PhoneSuite                        *XPhonePersonalization `xml:"http://www.cisco.com/AXL/API/9.0 phoneSuite,omitempty"`
		PhoneServiceDisplay               *XPhoneServiceDisplay  `xml:"http://www.cisco.com/AXL/API/9.0 phoneServiceDisplay,omitempty"`
		IsProtected                       *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isProtected,omitempty"`
		MtpPreferedCodec                  *XSIPCodec             `xml:"http://www.cisco.com/AXL/API/9.0 mtpPreferedCodec,omitempty"`
		OutboundCallRollover              *XOutboundCallRollover `xml:"http://www.cisco.com/AXL/API/9.0 outboundCallRollover,omitempty"`
		HotlineDevice                     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 hotlineDevice,omitempty"`
		AlwaysUsePrimeLine                *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLine,omitempty"`
		AlwaysUsePrimeLineForVoiceMessage *XStatus               `xml:"http://www.cisco.com/AXL/API/9.0 alwaysUsePrimeLineForVoiceMessage,omitempty"`
		DeviceTrustMode                   *XDeviceTrustMode      `xml:"http://www.cisco.com/AXL/API/9.0 deviceTrustMode,omitempty"`
		EarlyOfferSupportForVoiceCall     *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
		AllowPresentationSharingUsingBfcp *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 AllowPresentationSharingUsingBfcp,omitempty"`
		RequireOffPremiseLocation         *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 requireOffPremiseLocation,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.RingSettingIdleBlfAudibleAlert = (*XStatus)(&overlay.T.RingSettingIdleBlfAudibleAlert)
	overlay.RingSettingBusyBlfAudibleAlert = (*XStatus)(&overlay.T.RingSettingBusyBlfAudibleAlert)
	overlay.SingleButtonBarge = (*XBarge)(&overlay.T.SingleButtonBarge)
	overlay.JoinAcrossLines = (*XStatus)(&overlay.T.JoinAcrossLines)
	overlay.BuiltInBridgeStatus = (*XStatus)(&overlay.T.BuiltInBridgeStatus)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.RequireDtmfReception = (*Boolean)(&overlay.T.RequireDtmfReception)
	overlay.Rfc2833Disabled = (*Boolean)(&overlay.T.Rfc2833Disabled)
	overlay.CertificateOperation = (*XCertificateOperation)(&overlay.T.CertificateOperation)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	overlay.DeviceMobilityMode = (*XStatus)(&overlay.T.DeviceMobilityMode)
	overlay.RemoteDevice = (*Boolean)(&overlay.T.RemoteDevice)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	overlay.IsActive = (*Boolean)(&overlay.T.IsActive)
	overlay.PhoneSuite = (*XPhonePersonalization)(&overlay.T.PhoneSuite)
	overlay.PhoneServiceDisplay = (*XPhoneServiceDisplay)(&overlay.T.PhoneServiceDisplay)
	overlay.IsProtected = (*Boolean)(&overlay.T.IsProtected)
	overlay.MtpPreferedCodec = (*XSIPCodec)(&overlay.T.MtpPreferedCodec)
	overlay.OutboundCallRollover = (*XOutboundCallRollover)(&overlay.T.OutboundCallRollover)
	overlay.HotlineDevice = (*Boolean)(&overlay.T.HotlineDevice)
	overlay.AlwaysUsePrimeLine = (*XStatus)(&overlay.T.AlwaysUsePrimeLine)
	overlay.AlwaysUsePrimeLineForVoiceMessage = (*XStatus)(&overlay.T.AlwaysUsePrimeLineForVoiceMessage)
	overlay.DeviceTrustMode = (*XDeviceTrustMode)(&overlay.T.DeviceTrustMode)
	overlay.EarlyOfferSupportForVoiceCall = (*Boolean)(&overlay.T.EarlyOfferSupportForVoiceCall)
	overlay.AllowPresentationSharingUsingBfcp = (*Boolean)(&overlay.T.AllowPresentationSharingUsingBfcp)
	overlay.RequireOffPremiseLocation = (*Boolean)(&overlay.T.RequireOffPremiseLocation)
	return d.DecodeElement(&overlay, &start)
}

type XPhoneButtonTemplate struct {
	Name                  string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	BasePhoneTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 basePhoneTemplateName"`
	Buttons               Buttons `xml:"http://www.cisco.com/AXL/API/9.0 buttons,omitempty"`
}

type XPhoneCategory string

type XPhoneLine struct {
	Index                        XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 index"`
	Label                        string          `xml:"http://www.cisco.com/AXL/API/9.0 label,omitempty"`
	AsciiLabel                   string          `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Display                      string          `xml:"http://www.cisco.com/AXL/API/9.0 display,omitempty"`
	Dirn                         XDirn           `xml:"http://www.cisco.com/AXL/API/9.0 dirn"`
	RingSetting                  XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSetting,omitempty"`
	ConsecutiveRingSetting       XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 consecutiveRingSetting,omitempty"`
	RingSettingIdlePickupAlert   XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingIdlePickupAlert,omitempty"`
	RingSettingActivePickupAlert XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSettingActivePickupAlert,omitempty"`
	DisplayAscii                 string          `xml:"http://www.cisco.com/AXL/API/9.0 displayAscii,omitempty"`
	E164Mask                     string          `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	MwlPolicy                    XMWLPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 mwlPolicy,omitempty"`
	MaxNumCalls                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
	BusyTrigger                  XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
	CallInfoDisplay              Anon791         `xml:"http://www.cisco.com/AXL/API/9.0 callInfoDisplay,omitempty"`
	RecordingProfileName         XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 recordingProfileName,omitempty"`
	MonitoringCssName            XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 monitoringCssName,omitempty"`
	RecordingFlag                XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
	AudibleMwi                   XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
	SpeedDial                    string          `xml:"http://www.cisco.com/AXL/API/9.0 speedDial,omitempty"`
	PartitionUsage               XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	AssociatedEndusers           Anon792         `xml:"http://www.cisco.com/AXL/API/9.0 associatedEndusers,omitempty"`
	MissedCallLogging            Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 missedCallLogging,omitempty"`
	Ctiid                        int             `xml:"ctiid,attr,omitempty"`
}

func (t *XPhoneLine) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XPhoneLine
	var overlay struct {
		*T
		RingSetting            *XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 ringSetting,omitempty"`
		ConsecutiveRingSetting *XRingSetting    `xml:"http://www.cisco.com/AXL/API/9.0 consecutiveRingSetting,omitempty"`
		MwlPolicy              *XMWLPolicy      `xml:"http://www.cisco.com/AXL/API/9.0 mwlPolicy,omitempty"`
		MaxNumCalls            *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 maxNumCalls,omitempty"`
		BusyTrigger            *XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 busyTrigger,omitempty"`
		RecordingFlag          *XRecordingFlag  `xml:"http://www.cisco.com/AXL/API/9.0 recordingFlag,omitempty"`
		AudibleMwi             *XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 audibleMwi,omitempty"`
		PartitionUsage         *XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
		MissedCallLogging      *Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 missedCallLogging,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RingSetting = (*XRingSetting)(&overlay.T.RingSetting)
	overlay.ConsecutiveRingSetting = (*XRingSetting)(&overlay.T.ConsecutiveRingSetting)
	overlay.MwlPolicy = (*XMWLPolicy)(&overlay.T.MwlPolicy)
	overlay.MaxNumCalls = (*XInteger)(&overlay.T.MaxNumCalls)
	overlay.BusyTrigger = (*XInteger)(&overlay.T.BusyTrigger)
	overlay.RecordingFlag = (*XRecordingFlag)(&overlay.T.RecordingFlag)
	overlay.AudibleMwi = (*XStatus)(&overlay.T.AudibleMwi)
	overlay.PartitionUsage = (*XPartitionUsage)(&overlay.T.PartitionUsage)
	overlay.MissedCallLogging = (*Boolean)(&overlay.T.MissedCallLogging)
	return d.DecodeElement(&overlay, &start)
}

type XPhoneNtp struct {
	IpAddress   string     `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Description string     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mode        XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
}

func (t *XPhoneNtp) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XPhoneNtp
	var overlay struct {
		*T
		Mode *XZzntpmode `xml:"http://www.cisco.com/AXL/API/9.0 mode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Mode = (*XZzntpmode)(&overlay.T.Mode)
	return d.DecodeElement(&overlay, &start)
}

type XPhoneNumber string

type XPhonePersonalization string

type XPhoneSecurityProfile struct {
	PhoneType                  XModel              `xml:"http://www.cisco.com/AXL/API/9.0 phoneType,omitempty"`
	Protocol                   XDeviceProtocol     `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	Name                       string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DeviceSecurityMode         XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 deviceSecurityMode,omitempty"`
	AuthenticationMode         XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
	KeySize                    XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
	TftpEncryptedConfig        Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
	NonceValidityTime          XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
	TransportType              XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
	SipPhonePort               XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
	EnableDigestAuthentication Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
	ExcludeDigestCredentials   Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
}

func (t *XPhoneSecurityProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XPhoneSecurityProfile
	var overlay struct {
		*T
		AuthenticationMode         *XAuthenticationMode `xml:"http://www.cisco.com/AXL/API/9.0 authenticationMode,omitempty"`
		KeySize                    *XKeySize            `xml:"http://www.cisco.com/AXL/API/9.0 keySize,omitempty"`
		TftpEncryptedConfig        *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 tftpEncryptedConfig,omitempty"`
		NonceValidityTime          *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 nonceValidityTime,omitempty"`
		TransportType              *XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 transportType,omitempty"`
		SipPhonePort               *XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 sipPhonePort,omitempty"`
		EnableDigestAuthentication *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 enableDigestAuthentication,omitempty"`
		ExcludeDigestCredentials   *Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 excludeDigestCredentials,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AuthenticationMode = (*XAuthenticationMode)(&overlay.T.AuthenticationMode)
	overlay.KeySize = (*XKeySize)(&overlay.T.KeySize)
	overlay.TftpEncryptedConfig = (*Boolean)(&overlay.T.TftpEncryptedConfig)
	overlay.NonceValidityTime = (*XInteger)(&overlay.T.NonceValidityTime)
	overlay.TransportType = (*XTransport)(&overlay.T.TransportType)
	overlay.SipPhonePort = (*XInteger)(&overlay.T.SipPhonePort)
	overlay.EnableDigestAuthentication = (*Boolean)(&overlay.T.EnableDigestAuthentication)
	overlay.ExcludeDigestCredentials = (*Boolean)(&overlay.T.ExcludeDigestCredentials)
	return d.DecodeElement(&overlay, &start)
}

type XPhoneService string

type XPhoneServiceCategory string

type XPhoneServiceDisplay string

type XPhoneTemplateUsage string

type XPhysicalLocation struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
}

type XPickupGroupMember struct {
	Priority             XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority"`
	PickupGroupName      XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 pickupGroupName"`
	PickupDnAndPartition Anon801  `xml:"http://www.cisco.com/AXL/API/9.0 pickupDnAndPartition"`
}

type XPickupNotification string

type XPilotStation string

type XPipeSize string

type XPlaceHolderTag string

type XPlatformCertificate string

type XPluginUsage string

type XPolicyRelationship struct {
	GeoLocationPolicyAName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyAName,omitempty"`
	GeoLocationDeviceA     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceA"`
	GeoLocationPolicyBName XFkType                 `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationPolicyBName,omitempty"`
	GeoLocationDeviceB     XGeoLocationDevice      `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationDeviceB"`
	LogicalPartitionPolicy XLogicalPartitionPolicy `xml:"http://www.cisco.com/AXL/API/9.0 logicalPartitionPolicy"`
}

type XPreemption string

type XPresenceGroup struct {
	Name           string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description    string         `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	PresenceGroups PresenceGroups `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroups,omitempty"`
}

type XPresenceGroupMember struct {
	PresenceGroupName      XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName"`
	SubscriptionPermission XMatrixValue `xml:"http://www.cisco.com/AXL/API/9.0 subscriptionPermission"`
}

type XPresentationBit string

type XPriOfNumber string

type XPriProtocol string

type XProcessNode struct {
	Name        string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Mac         XMacAddress `xml:"http://www.cisco.com/AXL/API/9.0 mac,omitempty"`
	Ipv6Name    string      `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Name,omitempty"`
	LbmHubGroup XFkType     `xml:"http://www.cisco.com/AXL/API/9.0 lbmHubGroup,omitempty"`
}

type XProcessNodeService struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	TraceLevel      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
	UserCategories  XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
	Enable          Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
	NumFiles        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
	MaxFileSize     XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
}

func (t *XProcessNodeService) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XProcessNodeService
	var overlay struct {
		*T
		TraceLevel     *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 traceLevel,omitempty"`
		UserCategories *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 userCategories,omitempty"`
		Enable         *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enable,omitempty"`
		NumFiles       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 numFiles,omitempty"`
		MaxFileSize    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 maxFileSize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.TraceLevel = (*XInteger)(&overlay.T.TraceLevel)
	overlay.UserCategories = (*XInteger)(&overlay.T.UserCategories)
	overlay.Enable = (*Boolean)(&overlay.T.Enable)
	overlay.NumFiles = (*XInteger)(&overlay.T.NumFiles)
	overlay.MaxFileSize = (*XInteger)(&overlay.T.MaxFileSize)
	return d.DecodeElement(&overlay, &start)
}

type XProduct string

type XProductCategory string

type XProductConfig string

type XProtocolSide string

type XProvider string

type XQSIG string

type XQSIGVariant string

type XRSVPOverSIP string

type XRTMTReportingService string

type XRangeSet string

type XRecordingFlag string

type XRecordingProfile struct {
	Name                string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	RecordingCssName    XFkType `xml:"http://www.cisco.com/AXL/API/9.0 recordingCssName,omitempty"`
	RecorderDestination string  `xml:"http://www.cisco.com/AXL/API/9.0 recorderDestination"`
}

type XRegion struct {
	Name           string         `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	RelatedRegions RelatedRegions `xml:"http://www.cisco.com/AXL/API/9.0 relatedRegions,omitempty"`
	DefaultCodec   XBandwidth     `xml:"http://www.cisco.com/AXL/API/9.0 defaultCodec,omitempty"`
}

type XRegionMatrix struct {
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth,omitempty"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	RegionAName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionAName"`
	RegionBName     XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionBName"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
}

func (t *XRegionMatrix) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRegionMatrix
	var overlay struct {
		*T
		VideoBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.VideoBandwidth = (*XInteger)(&overlay.T.VideoBandwidth)
	return d.DecodeElement(&overlay, &start)
}

type XRegionRelationship struct {
	RegionName      XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 regionName"`
	Bandwidth       XBandwidth    `xml:"http://www.cisco.com/AXL/API/9.0 bandwidth"`
	VideoBandwidth  XInteger      `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	LossyNetwork    XLossyNetwork `xml:"http://www.cisco.com/AXL/API/9.0 lossyNetwork,omitempty"`
	CodecPreference XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 codecPreference,omitempty"`
}

func (t *XRegionRelationship) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRegionRelationship
	var overlay struct {
		*T
		VideoBandwidth *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 videoBandwidth,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.VideoBandwidth = (*XInteger)(&overlay.T.VideoBandwidth)
	return d.DecodeElement(&overlay, &start)
}

type XReleaseCauseValue string

type XRemoteCluster struct {
	ClusterId          string               `xml:"http://www.cisco.com/AXL/API/9.0 clusterId"`
	Description        string               `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	FullyQualifiedName string               `xml:"http://www.cisco.com/AXL/API/9.0 fullyQualifiedName"`
	Emcc               XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 emcc,omitempty"`
	PstnAccess         XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	RsvpAgent          XRemoteClusterMember `xml:"http://www.cisco.com/AXL/API/9.0 rsvpAgent,omitempty"`
}

type XRemoteClusterMember struct {
	Enabled Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
}

func (t *XRemoteClusterMember) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRemoteClusterMember
	var overlay struct {
		*T
		Enabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 enabled,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Enabled = (*Boolean)(&overlay.T.Enabled)
	return d.DecodeElement(&overlay, &start)
}

type XRemoteDestination struct {
	Name                         string           `xml:"http://www.cisco.com/AXL/API/9.0 name,omitempty"`
	Destination                  string           `xml:"http://www.cisco.com/AXL/API/9.0 destination"`
	AnswerTooSoonTimer           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
	AnswerTooLateTimer           XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
	DelayBeforeRingingCell       XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
	RemoteDestinationProfileName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationProfileName,omitempty"`
	DualModeDeviceName           XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 dualModeDeviceName,omitempty"`
	IsMobilePhone                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
	EnableMobileConnect          Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
	LineAssociations             LineAssociations `xml:"http://www.cisco.com/AXL/API/9.0 lineAssociations,omitempty"`
	TimeZone                     XTimeZone        `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	TodAccessName                XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 todAccessName,omitempty"`
	MobileSmartClientName        XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientName,omitempty"`
	MobilityProfileName          XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 mobilityProfileName,omitempty"`
}

func (t *XRemoteDestination) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRemoteDestination
	var overlay struct {
		*T
		AnswerTooSoonTimer     *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooSoonTimer,omitempty"`
		AnswerTooLateTimer     *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 answerTooLateTimer,omitempty"`
		DelayBeforeRingingCell *XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 delayBeforeRingingCell,omitempty"`
		IsMobilePhone          *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 isMobilePhone,omitempty"`
		EnableMobileConnect    *Boolean   `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileConnect,omitempty"`
		TimeZone               *XTimeZone `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.AnswerTooSoonTimer = (*XInteger)(&overlay.T.AnswerTooSoonTimer)
	overlay.AnswerTooLateTimer = (*XInteger)(&overlay.T.AnswerTooLateTimer)
	overlay.DelayBeforeRingingCell = (*XInteger)(&overlay.T.DelayBeforeRingingCell)
	overlay.IsMobilePhone = (*Boolean)(&overlay.T.IsMobilePhone)
	overlay.EnableMobileConnect = (*Boolean)(&overlay.T.EnableMobileConnect)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	return d.DecodeElement(&overlay, &start)
}

type XRemoteDestinationProfile struct {
	Name                          string            `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                   string            `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                       XProduct          `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                         XClass            `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                      XDeviceProtocol   `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                  XProtocolSide     `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName        XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	NetworkHoldMohAudioSourceId   XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId      XMOHAudioSourceId `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	Lines                         Anon356           `xml:"http://www.cisco.com/AXL/API/9.0 lines,omitempty"`
	CallInfoPrivacyStatus         XStatus           `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
	UserId                        string            `xml:"http://www.cisco.com/AXL/API/9.0 userId,omitempty"`
	IgnorePresentationIndicators  Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
	RerouteCallingSearchSpaceName XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	CgpnTransformationCssName     XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	UserLocale                    XUserLocale       `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	PrimaryPhoneName              XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 primaryPhoneName,omitempty"`
	DndOption                     XDNDOption        `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	DndStatus                     Boolean           `xml:"http://www.cisco.com/AXL/API/9.0 dndStatus,omitempty"`
	MobileSmartClientProfileName  XFkType           `xml:"http://www.cisco.com/AXL/API/9.0 mobileSmartClientProfileName,omitempty"`
	Ctiid                         int               `xml:"ctiid,attr,omitempty"`
}

func (t *XRemoteDestinationProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRemoteDestinationProfile
	var overlay struct {
		*T
		ProtocolSide                  *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		CallInfoPrivacyStatus         *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 callInfoPrivacyStatus,omitempty"`
		IgnorePresentationIndicators  *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 ignorePresentationIndicators,omitempty"`
		UseDevicePoolCgpnTransformCss *Boolean       `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		DndOption                     *XDNDOption    `xml:"http://www.cisco.com/AXL/API/9.0 dndOption,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.CallInfoPrivacyStatus = (*XStatus)(&overlay.T.CallInfoPrivacyStatus)
	overlay.IgnorePresentationIndicators = (*Boolean)(&overlay.T.IgnorePresentationIndicators)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.DndOption = (*XDNDOption)(&overlay.T.DndOption)
	return d.DecodeElement(&overlay, &start)
}

type XReset string

type XResetHandShake string

type XResource string

type XResourceAction string

type XResourceOpMode string

type XResourcePriorityNamespace struct {
	Namespace   string  `xml:"http://www.cisco.com/AXL/API/9.0 namespace"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
}

type XResourcePriorityNamespaceList struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Members     Anon101 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

type XResourcePriorityNamespaceListMember struct {
	ResourcePriorityNamespaceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName"`
	Index                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type XRevertPriority string

type XRingSetting string

type XRingTone string

type XRisClass string

type XRisStatus string

type XRouteFilter struct {
	Name         string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DialPlanName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName"`
	Members      Anon144 `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

type XRouteFilterMember struct {
	DialPlanTagName XFkType   `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanTagName"`
	Digits          int       `xml:"http://www.cisco.com/AXL/API/9.0 digits,omitempty"`
	Operator        XOperator `xml:"http://www.cisco.com/AXL/API/9.0 operator"`
	Priority        XInteger  `xml:"http://www.cisco.com/AXL/API/9.0 priority"`
}

type XRouteGroup struct {
	Name                  string               `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DistributionAlgorithm XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	Members               Anon71               `xml:"http://www.cisco.com/AXL/API/9.0 members"`
}

func (t *XRouteGroup) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRouteGroup
	var overlay struct {
		*T
		DistributionAlgorithm *XDistributeAlgorithm `xml:"http://www.cisco.com/AXL/API/9.0 distributionAlgorithm,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DistributionAlgorithm = (*XDistributeAlgorithm)(&overlay.T.DistributionAlgorithm)
	return d.DecodeElement(&overlay, &start)
}

type XRouteGroupMember struct {
	DeviceSelectionOrder XInteger `xml:"http://www.cisco.com/AXL/API/9.0 deviceSelectionOrder"`
	DeviceName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 deviceName"`
	Port                 XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port"`
}

type XRouteList struct {
	Name                 string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description          string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CallManagerGroupName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	RouteListEnabled     Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
	Members              Anon202 `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	RunOnEveryNode       Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
}

func (t *XRouteList) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRouteList
	var overlay struct {
		*T
		RouteListEnabled *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 routeListEnabled,omitempty"`
		RunOnEveryNode   *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.RouteListEnabled = (*Boolean)(&overlay.T.RouteListEnabled)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	return d.DecodeElement(&overlay, &start)
}

type XRouteListMember struct {
	RouteGroupName                      XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 routeGroupName,omitempty"`
	SelectionOrder                      XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 selectionOrder"`
	CalledPartyTransformationMask       string         `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask      string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	DigitDiscardInstructionName         XFkType        `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	CallingPartyPrefixDigits            string         `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	PrefixDigitsOut                     string         `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	UseFullyQualifiedCallingPartyNumber XStatus        `xml:"http://www.cisco.com/AXL/API/9.0 useFullyQualifiedCallingPartyNumber,omitempty"`
	CallingPartyNumberingPlan           XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType              XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan            XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType               XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
}

func (t *XRouteListMember) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRouteListMember
	var overlay struct {
		*T
		UseFullyQualifiedCallingPartyNumber *XStatus        `xml:"http://www.cisco.com/AXL/API/9.0 useFullyQualifiedCallingPartyNumber,omitempty"`
		CallingPartyNumberingPlan           *XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType              *XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan            *XNumberingPlan `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType               *XPriOfNumber   `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseFullyQualifiedCallingPartyNumber = (*XStatus)(&overlay.T.UseFullyQualifiedCallingPartyNumber)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	return d.DecodeElement(&overlay, &start)
}

type XRoutePartition struct {
	Name                         string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                  string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	TimeScheduleIdName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleIdName,omitempty"`
	UseOriginatingDeviceTimeZone Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
	TimeZone                     XTimeZone       `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
	PartitionUsage               XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
}

func (t *XRoutePartition) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRoutePartition
	var overlay struct {
		*T
		UseOriginatingDeviceTimeZone *Boolean         `xml:"http://www.cisco.com/AXL/API/9.0 useOriginatingDeviceTimeZone,omitempty"`
		TimeZone                     *XTimeZone       `xml:"http://www.cisco.com/AXL/API/9.0 timeZone,omitempty"`
		PartitionUsage               *XPartitionUsage `xml:"http://www.cisco.com/AXL/API/9.0 partitionUsage,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseOriginatingDeviceTimeZone = (*Boolean)(&overlay.T.UseOriginatingDeviceTimeZone)
	overlay.TimeZone = (*XTimeZone)(&overlay.T.TimeZone)
	overlay.PartitionUsage = (*XPartitionUsage)(&overlay.T.PartitionUsage)
	return d.DecodeElement(&overlay, &start)
}

type XRoutePattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	NetworkLocation                XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SupportOverlapSending          Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 supportOverlapSending,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	AllowDeviceOverride            Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	Destination                    Destination        `xml:"http://www.cisco.com/AXL/API/9.0 destination"`
	AuthorizationCodeRequired      Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 authorizationCodeRequired,omitempty"`
	AuthorizationLevelRequired     XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
	ClientCodeRequired             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 clientCodeRequired,omitempty"`
	IsdnNsfInfoElement             IsdnNsfInfoElement `xml:"http://www.cisco.com/AXL/API/9.0 isdnNsfInfoElement,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	EnableDccEnforcement           Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableDccEnforcement,omitempty"`
	BlockedCallPercentage          string             `xml:"http://www.cisco.com/AXL/API/9.0 blockedCallPercentage,omitempty"`
}

func (t *XRoutePattern) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XRoutePattern
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		NetworkLocation              *XNetworkLocation   `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
		AllowDeviceOverride          *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 allowDeviceOverride,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		AuthorizationLevelRequired   *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 authorizationLevelRequired,omitempty"`
		RouteClass                   *XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	overlay.AllowDeviceOverride = (*Boolean)(&overlay.T.AllowDeviceOverride)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.AuthorizationLevelRequired = (*XInteger)(&overlay.T.AuthorizationLevelRequired)
	overlay.RouteClass = (*XPatternRouteClass)(&overlay.T.RouteClass)
	return d.DecodeElement(&overlay, &start)
}

type XRoutePlan struct {
	DnOrPattern string        `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPattern"`
	Partition   XFkType       `xml:"http://www.cisco.com/AXL/API/9.0 partition,omitempty"`
	Type        XPatternUsage `xml:"http://www.cisco.com/AXL/API/9.0 type"`
	RouteDetail string        `xml:"http://www.cisco.com/AXL/API/9.0 routeDetail"`
}

type XSAFService string

type XSCHCiscoTACDestination string

type XSIPBandwidthModifier string

type XSIPCodec string

type XSIPIdentityBlend string

type XSIPNormalizationScript struct {
	Name                               string                  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                        string                  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Content                            string                  `xml:"http://www.cisco.com/AXL/API/9.0 content"`
	ScriptExecutionErrorRecoveryAction XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
	SystemResourceErrorRecoveryAction  XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
	MaxMemoryThreshold                 string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
	MaxLuaInstructionsThreshold        string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	IsStandard                         Boolean                 `xml:"http://www.cisco.com/AXL/API/9.0 isStandard"`
}

func (t *XSIPNormalizationScript) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSIPNormalizationScript
	var overlay struct {
		*T
		ScriptExecutionErrorRecoveryAction *XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 scriptExecutionErrorRecoveryAction,omitempty"`
		SystemResourceErrorRecoveryAction  *XSIPScriptErrorHandling `xml:"http://www.cisco.com/AXL/API/9.0 systemResourceErrorRecoveryAction,omitempty"`
		MaxMemoryThreshold                 *string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxMemoryThreshold,omitempty"`
		MaxLuaInstructionsThreshold        *string                  `xml:"http://www.cisco.com/AXL/API/9.0 maxLuaInstructionsThreshold,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ScriptExecutionErrorRecoveryAction = (*XSIPScriptErrorHandling)(&overlay.T.ScriptExecutionErrorRecoveryAction)
	overlay.SystemResourceErrorRecoveryAction = (*XSIPScriptErrorHandling)(&overlay.T.SystemResourceErrorRecoveryAction)
	overlay.MaxMemoryThreshold = (*string)(&overlay.T.MaxMemoryThreshold)
	overlay.MaxLuaInstructionsThreshold = (*string)(&overlay.T.MaxLuaInstructionsThreshold)
	return d.DecodeElement(&overlay, &start)
}

type XSIPRel1XXOptions string

type XSIPReroute string

type XSIPScriptErrorHandling string

type XSIPTrunkCallLegSecurity string

type XSPA8800Port string

type XSRSTOption string

type XSafCcdPurgeBlockLearnedRoutes struct {
	LearnedPattern       string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPattern,omitempty"`
	LearnedPatternPrefix string `xml:"http://www.cisco.com/AXL/API/9.0 learnedPatternPrefix,omitempty"`
	CallControlIdentity  string `xml:"http://www.cisco.com/AXL/API/9.0 callControlIdentity,omitempty"`
	IpAddress            string `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress,omitempty"`
}

type XSafForwarder struct {
	Name                       string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	ClientLabel                string          `xml:"http://www.cisco.com/AXL/API/9.0 clientLabel"`
	SafSecurityProfile         XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 safSecurityProfile"`
	IpAddress                  string          `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	Port                       XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SafReconnectInterval       XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
	SafNotificationsWindowSize XInteger        `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	AssociatedCucms            AssociatedCucms `xml:"http://www.cisco.com/AXL/API/9.0 associatedCucms,omitempty"`
}

func (t *XSafForwarder) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSafForwarder
	var overlay struct {
		*T
		Port                       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		SafReconnectInterval       *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safReconnectInterval,omitempty"`
		SafNotificationsWindowSize *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 safNotificationsWindowSize,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.SafReconnectInterval = (*XInteger)(&overlay.T.SafReconnectInterval)
	overlay.SafNotificationsWindowSize = (*XInteger)(&overlay.T.SafNotificationsWindowSize)
	return d.DecodeElement(&overlay, &start)
}

type XSafForwarderMember struct {
	CallManagerName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 callManagerName"`
}

type XSafSecurityProfile struct {
	Name        string `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Userid      string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Password    string `xml:"http://www.cisco.com/AXL/API/9.0 password"`
}

type XScheduleUnit string

type XSecurityPolicy string

type XServerSecurityMode string

type XService string

type XServiceCategory string

type XServiceGrouping string

type XServiceParameter struct {
	ProcessNodeName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 processNodeName"`
	Name            string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Service         XService `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	Value           string   `xml:"http://www.cisco.com/AXL/API/9.0 value,omitempty"`
	ValueType       XParam   `xml:"http://www.cisco.com/AXL/API/9.0 valueType"`
}

type XServiceProfile struct {
	Name                string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description         string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	ServiceProfileInfos ServiceProfileInfos `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileInfos,omitempty"`
}

type XServiceProfileList struct {
	ProfileName                   string                        `xml:"http://www.cisco.com/AXL/API/9.0 profileName"`
	Primary                       string                        `xml:"http://www.cisco.com/AXL/API/9.0 primary,omitempty"`
	Secondary                     string                        `xml:"http://www.cisco.com/AXL/API/9.0 secondary,omitempty"`
	Tertiary                      string                        `xml:"http://www.cisco.com/AXL/API/9.0 tertiary,omitempty"`
	ServerCertificateVerification XCertificateVerificationLevel `xml:"http://www.cisco.com/AXL/API/9.0 serverCertificateVerification,omitempty"`
	ServiceProfileXml             XVendorConfig                 `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfileXml,omitempty"`
}

type XServiceRestriction string

type XSilenceSuppressionThreshold string

type XSipAssertedType string

type XSipDialRules struct {
	DialPattern XDialPattern `xml:"http://www.cisco.com/AXL/API/9.0 dialPattern,omitempty"`
	Name        string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Patterns    Patterns     `xml:"http://www.cisco.com/AXL/API/9.0 patterns,omitempty"`
	Plars       Plars        `xml:"http://www.cisco.com/AXL/API/9.0 plars,omitempty"`
}

func (t *XSipDialRules) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipDialRules
	var overlay struct {
		*T
		DialPattern *XDialPattern `xml:"http://www.cisco.com/AXL/API/9.0 dialPattern,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DialPattern = (*XDialPattern)(&overlay.T.DialPattern)
	return d.DecodeElement(&overlay, &start)
}

type XSipPrivacy string

type XSipProfile struct {
	Name                                      string                     `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                               string                     `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	DefaultTelephonyEventPayloadType          XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
	RedirectByApplication                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
	Ringing180                                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
	TimerInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
	TimerRegisterDelta                        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
	TimerRegister                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
	TimerT1                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
	TimerT2                                   XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
	RetryInvite                               XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
	RetryNotInvite                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
	StartMediaPort                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
	StopMediaPort                             XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
	CallpickupUri                             string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
	CallpickupListUri                         string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
	CallpickupGroupUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
	MeetmeServiceUrl                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
	UserInfo                                  XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
	DtmfDbLevel                               XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
	CallHoldRingback                          XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
	AnonymousCallBlock                        XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
	CallerIdBlock                             XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
	DndControl                                XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
	TelnetLevel                               XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
	TimerKeepAlive                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
	TimerSubscribe                            XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
	TimerSubscribeDelta                       XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
	MaxRedirects                              XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
	TimerOffHookToFirstDigit                  XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
	CallForwardUri                            string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
	AbbreviatedDialUri                        string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
	ConfJointEnable                           Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
	Rfc2543Hold                               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
	SemiAttendedTransfer                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
	EnableVad                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
	StutterMsgWaiting                         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
	CallStats                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
	T38Invite                                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
	RerouteIncomingRequest                    XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
	ResourcePriorityNamespaceListName         XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceListName,omitempty"`
	EnableAnatForEarlyOfferCalls              Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
	RsvpOverSip                               XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
	FallbackToLocalRsvp                       Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
	SipRe11XxEnabled                          XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
	GClear                                    XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
	EarlyOfferSupportForVoiceCall             Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
	SendRecvSDPInMidCallInvite                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
	EnableOutboundOptionsPing                 Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
	OptionsPingIntervalWhenStatusOK           XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
	OptionsPingIntervalWhenStatusNotOK        XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
	DeliverConferenceBridgeIdentifier         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 deliverConferenceBridgeIdentifier,omitempty"`
	SipOptionsRetryCount                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
	SipOptionsRetryTimer                      XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
	SipBandwidthModifier                      XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
	EnableUriOutdialSupport                   string                     `xml:"http://www.cisco.com/AXL/API/9.0 enableUriOutdialSupport,omitempty"`
	UserAgentServerHeaderInfo                 XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
	AllowPresentationSharingUsingBfcp         Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowPresentationSharingUsingBfcp,omitempty"`
	ScriptParameters                          string                     `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	IsScriptTraceEnabled                      Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
	SipNormalizationScript                    XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScript,omitempty"`
	AllowiXApplicationMedia                   Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 allowiXApplicationMedia,omitempty"`
	DialStringInterpretation                  XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
	AcceptAudioCodecPreferences               XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
	MlppUserAuthorization                     Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
	IsAssuredSipServiceEnabled                Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
	ResourcePriorityNamespace                 XFkType                    `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespace,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	CallerIdDn                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerName                                string                     `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallingLineIdentification                 XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
	RejectAnonymousIncomingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousIncomingCall,omitempty"`
	RejectAnonymousOutgoingCall               Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rejectAnonymousOutgoingCall,omitempty"`
	VideoCallTrafficClass                     XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
}

func (t *XSipProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipProfile
	var overlay struct {
		*T
		DefaultTelephonyEventPayloadType   *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 defaultTelephonyEventPayloadType,omitempty"`
		RedirectByApplication              *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 redirectByApplication,omitempty"`
		Ringing180                         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 ringing180,omitempty"`
		TimerInvite                        *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerInvite,omitempty"`
		TimerRegisterDelta                 *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegisterDelta,omitempty"`
		TimerRegister                      *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerRegister,omitempty"`
		TimerT1                            *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT1,omitempty"`
		TimerT2                            *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerT2,omitempty"`
		RetryInvite                        *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryInvite,omitempty"`
		RetryNotInvite                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 retryNotInvite,omitempty"`
		StartMediaPort                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 startMediaPort,omitempty"`
		StopMediaPort                      *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 stopMediaPort,omitempty"`
		CallpickupUri                      *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupUri,omitempty"`
		CallpickupListUri                  *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupListUri,omitempty"`
		CallpickupGroupUri                 *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callpickupGroupUri,omitempty"`
		MeetmeServiceUrl                   *string                     `xml:"http://www.cisco.com/AXL/API/9.0 meetmeServiceUrl,omitempty"`
		UserInfo                           *XZzuserInfo                `xml:"http://www.cisco.com/AXL/API/9.0 userInfo,omitempty"`
		DtmfDbLevel                        *XZzdtmfDbLevel             `xml:"http://www.cisco.com/AXL/API/9.0 dtmfDbLevel,omitempty"`
		CallHoldRingback                   *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callHoldRingback,omitempty"`
		AnonymousCallBlock                 *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 anonymousCallBlock,omitempty"`
		CallerIdBlock                      *XZzpreff                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdBlock,omitempty"`
		DndControl                         *XZzdndcontrol              `xml:"http://www.cisco.com/AXL/API/9.0 dndControl,omitempty"`
		TelnetLevel                        *XTelnetLevel               `xml:"http://www.cisco.com/AXL/API/9.0 telnetLevel,omitempty"`
		TimerKeepAlive                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerKeepAlive,omitempty"`
		TimerSubscribe                     *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribe,omitempty"`
		TimerSubscribeDelta                *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerSubscribeDelta,omitempty"`
		MaxRedirects                       *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 maxRedirects,omitempty"`
		TimerOffHookToFirstDigit           *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 timerOffHookToFirstDigit,omitempty"`
		CallForwardUri                     *string                     `xml:"http://www.cisco.com/AXL/API/9.0 callForwardUri,omitempty"`
		AbbreviatedDialUri                 *string                     `xml:"http://www.cisco.com/AXL/API/9.0 abbreviatedDialUri,omitempty"`
		ConfJointEnable                    *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 confJointEnable,omitempty"`
		Rfc2543Hold                        *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 rfc2543Hold,omitempty"`
		SemiAttendedTransfer               *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 semiAttendedTransfer,omitempty"`
		EnableVad                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableVad,omitempty"`
		StutterMsgWaiting                  *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 stutterMsgWaiting,omitempty"`
		CallStats                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 callStats,omitempty"`
		T38Invite                          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 t38Invite,omitempty"`
		RerouteIncomingRequest             *XSIPReroute                `xml:"http://www.cisco.com/AXL/API/9.0 rerouteIncomingRequest,omitempty"`
		EnableAnatForEarlyOfferCalls       *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableAnatForEarlyOfferCalls,omitempty"`
		RsvpOverSip                        *XRSVPOverSIP               `xml:"http://www.cisco.com/AXL/API/9.0 rsvpOverSip,omitempty"`
		FallbackToLocalRsvp                *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 fallbackToLocalRsvp,omitempty"`
		SipRe11XxEnabled                   *XSIPRel1XXOptions          `xml:"http://www.cisco.com/AXL/API/9.0 sipRe11XxEnabled,omitempty"`
		GClear                             *XGClear                    `xml:"http://www.cisco.com/AXL/API/9.0 gClear,omitempty"`
		EarlyOfferSupportForVoiceCall      *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 earlyOfferSupportForVoiceCall,omitempty"`
		SendRecvSDPInMidCallInvite         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 sendRecvSDPInMidCallInvite,omitempty"`
		EnableOutboundOptionsPing          *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 enableOutboundOptionsPing,omitempty"`
		OptionsPingIntervalWhenStatusOK    *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusOK,omitempty"`
		OptionsPingIntervalWhenStatusNotOK *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 optionsPingIntervalWhenStatusNotOK,omitempty"`
		SipOptionsRetryCount               *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryCount,omitempty"`
		SipOptionsRetryTimer               *XInteger                   `xml:"http://www.cisco.com/AXL/API/9.0 sipOptionsRetryTimer,omitempty"`
		SipBandwidthModifier               *XSIPBandwidthModifier      `xml:"http://www.cisco.com/AXL/API/9.0 sipBandwidthModifier,omitempty"`
		UserAgentServerHeaderInfo          *XUserAgentServerHeaderInfo `xml:"http://www.cisco.com/AXL/API/9.0 userAgentServerHeaderInfo,omitempty"`
		IsScriptTraceEnabled               *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isScriptTraceEnabled,omitempty"`
		DialStringInterpretation           *XURIDisambiguationPolicy   `xml:"http://www.cisco.com/AXL/API/9.0 dialStringInterpretation,omitempty"`
		AcceptAudioCodecPreferences        *XStatus                    `xml:"http://www.cisco.com/AXL/API/9.0 acceptAudioCodecPreferences,omitempty"`
		MlppUserAuthorization              *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 mlppUserAuthorization,omitempty"`
		IsAssuredSipServiceEnabled         *Boolean                    `xml:"http://www.cisco.com/AXL/API/9.0 isAssuredSipServiceEnabled,omitempty"`
		CallingLineIdentification          *XCallingLineIdentification `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdentification,omitempty"`
		VideoCallTrafficClass              *XVideoCallTrafficClass     `xml:"http://www.cisco.com/AXL/API/9.0 videoCallTrafficClass,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DefaultTelephonyEventPayloadType = (*XInteger)(&overlay.T.DefaultTelephonyEventPayloadType)
	overlay.RedirectByApplication = (*Boolean)(&overlay.T.RedirectByApplication)
	overlay.Ringing180 = (*Boolean)(&overlay.T.Ringing180)
	overlay.TimerInvite = (*XInteger)(&overlay.T.TimerInvite)
	overlay.TimerRegisterDelta = (*XInteger)(&overlay.T.TimerRegisterDelta)
	overlay.TimerRegister = (*XInteger)(&overlay.T.TimerRegister)
	overlay.TimerT1 = (*XInteger)(&overlay.T.TimerT1)
	overlay.TimerT2 = (*XInteger)(&overlay.T.TimerT2)
	overlay.RetryInvite = (*XInteger)(&overlay.T.RetryInvite)
	overlay.RetryNotInvite = (*XInteger)(&overlay.T.RetryNotInvite)
	overlay.StartMediaPort = (*XInteger)(&overlay.T.StartMediaPort)
	overlay.StopMediaPort = (*XInteger)(&overlay.T.StopMediaPort)
	overlay.CallpickupUri = (*string)(&overlay.T.CallpickupUri)
	overlay.CallpickupListUri = (*string)(&overlay.T.CallpickupListUri)
	overlay.CallpickupGroupUri = (*string)(&overlay.T.CallpickupGroupUri)
	overlay.MeetmeServiceUrl = (*string)(&overlay.T.MeetmeServiceUrl)
	overlay.UserInfo = (*XZzuserInfo)(&overlay.T.UserInfo)
	overlay.DtmfDbLevel = (*XZzdtmfDbLevel)(&overlay.T.DtmfDbLevel)
	overlay.CallHoldRingback = (*XZzpreff)(&overlay.T.CallHoldRingback)
	overlay.AnonymousCallBlock = (*XZzpreff)(&overlay.T.AnonymousCallBlock)
	overlay.CallerIdBlock = (*XZzpreff)(&overlay.T.CallerIdBlock)
	overlay.DndControl = (*XZzdndcontrol)(&overlay.T.DndControl)
	overlay.TelnetLevel = (*XTelnetLevel)(&overlay.T.TelnetLevel)
	overlay.TimerKeepAlive = (*XInteger)(&overlay.T.TimerKeepAlive)
	overlay.TimerSubscribe = (*XInteger)(&overlay.T.TimerSubscribe)
	overlay.TimerSubscribeDelta = (*XInteger)(&overlay.T.TimerSubscribeDelta)
	overlay.MaxRedirects = (*XInteger)(&overlay.T.MaxRedirects)
	overlay.TimerOffHookToFirstDigit = (*XInteger)(&overlay.T.TimerOffHookToFirstDigit)
	overlay.CallForwardUri = (*string)(&overlay.T.CallForwardUri)
	overlay.AbbreviatedDialUri = (*string)(&overlay.T.AbbreviatedDialUri)
	overlay.ConfJointEnable = (*Boolean)(&overlay.T.ConfJointEnable)
	overlay.Rfc2543Hold = (*Boolean)(&overlay.T.Rfc2543Hold)
	overlay.SemiAttendedTransfer = (*Boolean)(&overlay.T.SemiAttendedTransfer)
	overlay.EnableVad = (*Boolean)(&overlay.T.EnableVad)
	overlay.StutterMsgWaiting = (*Boolean)(&overlay.T.StutterMsgWaiting)
	overlay.CallStats = (*Boolean)(&overlay.T.CallStats)
	overlay.T38Invite = (*Boolean)(&overlay.T.T38Invite)
	overlay.RerouteIncomingRequest = (*XSIPReroute)(&overlay.T.RerouteIncomingRequest)
	overlay.EnableAnatForEarlyOfferCalls = (*Boolean)(&overlay.T.EnableAnatForEarlyOfferCalls)
	overlay.RsvpOverSip = (*XRSVPOverSIP)(&overlay.T.RsvpOverSip)
	overlay.FallbackToLocalRsvp = (*Boolean)(&overlay.T.FallbackToLocalRsvp)
	overlay.SipRe11XxEnabled = (*XSIPRel1XXOptions)(&overlay.T.SipRe11XxEnabled)
	overlay.GClear = (*XGClear)(&overlay.T.GClear)
	overlay.EarlyOfferSupportForVoiceCall = (*Boolean)(&overlay.T.EarlyOfferSupportForVoiceCall)
	overlay.SendRecvSDPInMidCallInvite = (*Boolean)(&overlay.T.SendRecvSDPInMidCallInvite)
	overlay.EnableOutboundOptionsPing = (*Boolean)(&overlay.T.EnableOutboundOptionsPing)
	overlay.OptionsPingIntervalWhenStatusOK = (*XInteger)(&overlay.T.OptionsPingIntervalWhenStatusOK)
	overlay.OptionsPingIntervalWhenStatusNotOK = (*XInteger)(&overlay.T.OptionsPingIntervalWhenStatusNotOK)
	overlay.SipOptionsRetryCount = (*XInteger)(&overlay.T.SipOptionsRetryCount)
	overlay.SipOptionsRetryTimer = (*XInteger)(&overlay.T.SipOptionsRetryTimer)
	overlay.SipBandwidthModifier = (*XSIPBandwidthModifier)(&overlay.T.SipBandwidthModifier)
	overlay.UserAgentServerHeaderInfo = (*XUserAgentServerHeaderInfo)(&overlay.T.UserAgentServerHeaderInfo)
	overlay.IsScriptTraceEnabled = (*Boolean)(&overlay.T.IsScriptTraceEnabled)
	overlay.DialStringInterpretation = (*XURIDisambiguationPolicy)(&overlay.T.DialStringInterpretation)
	overlay.AcceptAudioCodecPreferences = (*XStatus)(&overlay.T.AcceptAudioCodecPreferences)
	overlay.MlppUserAuthorization = (*Boolean)(&overlay.T.MlppUserAuthorization)
	overlay.IsAssuredSipServiceEnabled = (*Boolean)(&overlay.T.IsAssuredSipServiceEnabled)
	overlay.CallingLineIdentification = (*XCallingLineIdentification)(&overlay.T.CallingLineIdentification)
	overlay.VideoCallTrafficClass = (*XVideoCallTrafficClass)(&overlay.T.VideoCallTrafficClass)
	return d.DecodeElement(&overlay, &start)
}

type XSipRealm struct {
	Realm             string `xml:"http://www.cisco.com/AXL/API/9.0 realm"`
	Userid            string `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	DigestCredentials string `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials"`
}

type XSipRoutePattern struct {
	Pattern                        string           `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                    string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage    `xml:"http://www.cisco.com/AXL/API/9.0 usage"`
	RoutePartitionName             XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CallingPartyTransformationMask string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string           `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	CallingLinePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	SipTrunkName                   XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkName"`
	DnOrPatternIpv6                string           `xml:"http://www.cisco.com/AXL/API/9.0 dnOrPatternIpv6,omitempty"`
	RouteOnUserPart                Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 routeOnUserPart,omitempty"`
	UseCallerCss                   Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 useCallerCss,omitempty"`
	DomainRoutingCssName           XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 domainRoutingCssName,omitempty"`
}

func (t *XSipRoutePattern) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipRoutePattern
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus          `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	return d.DecodeElement(&overlay, &start)
}

type XSipTrunk struct {
	Name                                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                               string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                                   XProduct                 `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                                     XClass                   `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                                  XDeviceProtocol          `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                              XProtocolSide            `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName                    XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	NetworkLocation                           XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
	LocationName                              XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	MediaResourceListName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 mediaResourceListName,omitempty"`
	NetworkHoldMohAudioSourceId               XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 networkHoldMohAudioSourceId,omitempty"`
	UserHoldMohAudioSourceId                  XMOHAudioSourceId        `xml:"http://www.cisco.com/AXL/API/9.0 userHoldMohAudioSourceId,omitempty"`
	AutomatedAlternateRoutingCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	AarNeighborhoodName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	PacketCaptureMode                         XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
	PacketCaptureDuration                     XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
	LoadInformation                           XLoadInformation         `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	TraceFlag                                 Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 traceFlag,omitempty"`
	MlppDomainId                              string                   `xml:"http://www.cisco.com/AXL/API/9.0 mlppDomainId,omitempty"`
	MlppIndicationStatus                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
	Preemption                                XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	RetryVideoCallAsAudio                     Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
	SecurityProfileName                       XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	SipProfileName                            XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipProfileName,omitempty"`
	CgpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
	GeoLocationName                           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	GeoLocationFilterName                     XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationFilterName,omitempty"`
	SendGeoLocation                           Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 sendGeoLocation,omitempty"`
	CdpnTransformationCssName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cdpnTransformationCssName,omitempty"`
	UseDevicePoolCdpnTransformCss             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
	UnattendedPort                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	TransmitUtf8                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
	SubscribeCallingSearchSpaceName           XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	RerouteCallingSearchSpaceName             XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 rerouteCallingSearchSpaceName,omitempty"`
	ReferCallingSearchSpaceName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 referCallingSearchSpaceName,omitempty"`
	MtpRequired                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 mtpRequired,omitempty"`
	PresenceGroupName                         XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName"`
	UnknownPrefix                             string                   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	DestinationAddress                        string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddress,omitempty"`
	DestAddrIsSrv                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 destAddrIsSrv,omitempty"`
	Destinationport                           XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 destinationport,omitempty"`
	TkSipCodec                                XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
	SigDigits                                 Anon467                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
	ConnectedNamePresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
	ConnectedPartyIdPresentation              XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
	CallingPartySelection                     XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
	Callingname                               XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
	CallingLineIdPresentation                 XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
	PrefixDn                                  string                   `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	CallerName                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerName,omitempty"`
	CallerIdDn                                string                   `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	AcceptInboundRdnis                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptInboundRdnis,omitempty"`
	AcceptOutboundRdnis                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutboundRdnis,omitempty"`
	SrtpAllowed                               Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
	SrtpFallbackAllowed                       Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
	IsPaiEnabled                              Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
	SipPrivacy                                XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
	IsRpidEnabled                             Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
	SipAssertedType                           XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
	DestinationAddressIpv6                    string                   `xml:"http://www.cisco.com/AXL/API/9.0 destinationAddressIpv6,omitempty"`
	DtmfSignalingMethod                       XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
	RouteClassSignalling                      XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
	SipTrunkType                              XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
	PstnAccess                                Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
	ImeE164TransformationName                 XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 imeE164TransformationName,omitempty"`
	UseImePublicIpPort                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
	UseDevicePoolCntdPnTransformationCss      Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
	CntdPnTransformationCssName               XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cntdPnTransformationCssName,omitempty"`
	UseDevicePoolCgpnTransformCssUnkn         Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
	SipNormalizationScriptName                XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 sipNormalizationScriptName,omitempty"`
	RunOnEveryNode                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
	Destinations                              Anon468                  `xml:"http://www.cisco.com/AXL/API/9.0 destinations,omitempty"`
	UnknownStripDigits                        int                      `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	CgpnTransformationUnknownCssName          XFkType                  `xml:"http://www.cisco.com/AXL/API/9.0 cgpnTransformationUnknownCssName,omitempty"`
	TunneledProtocol                          XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
	Asn1RoseOidEncoding                       XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
	QsigVariant                               XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
	PathReplacementSupport                    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
	EnableQsigUtf8                            Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
	ScriptParameters                          string                   `xml:"http://www.cisco.com/AXL/API/9.0 scriptParameters,omitempty"`
	ScriptTraceEnabled                        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
	TrunkTrafficSecure                        XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
	CallingAndCalledPartyInfoFormat           XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	UseCallerIdCallerNameinUriOutgoingRequest Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useCallerIdCallerNameinUriOutgoingRequest,omitempty"`
	RequestUriDomainName                      string                   `xml:"http://www.cisco.com/AXL/API/9.0 requestUriDomainName,omitempty"`
	Ctiid                                     int                      `xml:"ctiid,attr,omitempty"`
}

func (t *XSipTrunk) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipTrunk
	var overlay struct {
		*T
		ProtocolSide                         *XProtocolSide            `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		NetworkLocation                      *XNetworkLocation         `xml:"http://www.cisco.com/AXL/API/9.0 networkLocation,omitempty"`
		PacketCaptureMode                    *XPacketCaptureMode       `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureMode,omitempty"`
		PacketCaptureDuration                *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 packetCaptureDuration,omitempty"`
		MlppIndicationStatus                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 mlppIndicationStatus,omitempty"`
		Preemption                           *XPreemption              `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
		RetryVideoCallAsAudio                *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 retryVideoCallAsAudio,omitempty"`
		UseDevicePoolCgpnTransformCss        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCss,omitempty"`
		UseDevicePoolCdpnTransformCss        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCdpnTransformCss,omitempty"`
		UnattendedPort                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
		TransmitUtf8                         *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 transmitUtf8,omitempty"`
		TkSipCodec                           *XSIPCodec                `xml:"http://www.cisco.com/AXL/API/9.0 tkSipCodec,omitempty"`
		SigDigits                            *Anon467                  `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits,omitempty"`
		ConnectedNamePresentation            *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentation,omitempty"`
		ConnectedPartyIdPresentation         *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 connectedPartyIdPresentation,omitempty"`
		CallingPartySelection                *XCallingPartySelection   `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection,omitempty"`
		Callingname                          *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingname,omitempty"`
		CallingLineIdPresentation            *XPresentationBit         `xml:"http://www.cisco.com/AXL/API/9.0 callingLineIdPresentation,omitempty"`
		SrtpAllowed                          *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpAllowed,omitempty"`
		SrtpFallbackAllowed                  *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 srtpFallbackAllowed,omitempty"`
		IsPaiEnabled                         *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isPaiEnabled,omitempty"`
		SipPrivacy                           *XSipPrivacy              `xml:"http://www.cisco.com/AXL/API/9.0 sipPrivacy,omitempty"`
		IsRpidEnabled                        *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 isRpidEnabled,omitempty"`
		SipAssertedType                      *XSipAssertedType         `xml:"http://www.cisco.com/AXL/API/9.0 sipAssertedType,omitempty"`
		DtmfSignalingMethod                  *XDTMFSignaling           `xml:"http://www.cisco.com/AXL/API/9.0 dtmfSignalingMethod,omitempty"`
		RouteClassSignalling                 *XStatus                  `xml:"http://www.cisco.com/AXL/API/9.0 routeClassSignalling,omitempty"`
		SipTrunkType                         *XTrunkService            `xml:"http://www.cisco.com/AXL/API/9.0 sipTrunkType,omitempty"`
		PstnAccess                           *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pstnAccess,omitempty"`
		UseImePublicIpPort                   *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useImePublicIpPort,omitempty"`
		UseDevicePoolCntdPnTransformationCss *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCntdPnTransformationCss,omitempty"`
		UseDevicePoolCgpnTransformCssUnkn    *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 useDevicePoolCgpnTransformCssUnkn,omitempty"`
		RunOnEveryNode                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 runOnEveryNode,omitempty"`
		TunneledProtocol                     *XTunneledProtocol        `xml:"http://www.cisco.com/AXL/API/9.0 tunneledProtocol,omitempty"`
		Asn1RoseOidEncoding                  *XASN1RoseOidEncoding     `xml:"http://www.cisco.com/AXL/API/9.0 asn1RoseOidEncoding,omitempty"`
		QsigVariant                          *XQSIGVariant             `xml:"http://www.cisco.com/AXL/API/9.0 qsigVariant,omitempty"`
		PathReplacementSupport               *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pathReplacementSupport,omitempty"`
		EnableQsigUtf8                       *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableQsigUtf8,omitempty"`
		ScriptTraceEnabled                   *Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 scriptTraceEnabled,omitempty"`
		TrunkTrafficSecure                   *XSIPTrunkCallLegSecurity `xml:"http://www.cisco.com/AXL/API/9.0 trunkTrafficSecure,omitempty"`
		CallingAndCalledPartyInfoFormat      *XSIPIdentityBlend        `xml:"http://www.cisco.com/AXL/API/9.0 callingAndCalledPartyInfoFormat,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.NetworkLocation = (*XNetworkLocation)(&overlay.T.NetworkLocation)
	overlay.PacketCaptureMode = (*XPacketCaptureMode)(&overlay.T.PacketCaptureMode)
	overlay.PacketCaptureDuration = (*XInteger)(&overlay.T.PacketCaptureDuration)
	overlay.MlppIndicationStatus = (*XStatus)(&overlay.T.MlppIndicationStatus)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	overlay.RetryVideoCallAsAudio = (*Boolean)(&overlay.T.RetryVideoCallAsAudio)
	overlay.UseDevicePoolCgpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCss)
	overlay.UseDevicePoolCdpnTransformCss = (*Boolean)(&overlay.T.UseDevicePoolCdpnTransformCss)
	overlay.UnattendedPort = (*Boolean)(&overlay.T.UnattendedPort)
	overlay.TransmitUtf8 = (*Boolean)(&overlay.T.TransmitUtf8)
	overlay.TkSipCodec = (*XSIPCodec)(&overlay.T.TkSipCodec)
	overlay.SigDigits = (*Anon467)(&overlay.T.SigDigits)
	overlay.ConnectedNamePresentation = (*XPresentationBit)(&overlay.T.ConnectedNamePresentation)
	overlay.ConnectedPartyIdPresentation = (*XPresentationBit)(&overlay.T.ConnectedPartyIdPresentation)
	overlay.CallingPartySelection = (*XCallingPartySelection)(&overlay.T.CallingPartySelection)
	overlay.Callingname = (*XPresentationBit)(&overlay.T.Callingname)
	overlay.CallingLineIdPresentation = (*XPresentationBit)(&overlay.T.CallingLineIdPresentation)
	overlay.SrtpAllowed = (*Boolean)(&overlay.T.SrtpAllowed)
	overlay.SrtpFallbackAllowed = (*Boolean)(&overlay.T.SrtpFallbackAllowed)
	overlay.IsPaiEnabled = (*Boolean)(&overlay.T.IsPaiEnabled)
	overlay.SipPrivacy = (*XSipPrivacy)(&overlay.T.SipPrivacy)
	overlay.IsRpidEnabled = (*Boolean)(&overlay.T.IsRpidEnabled)
	overlay.SipAssertedType = (*XSipAssertedType)(&overlay.T.SipAssertedType)
	overlay.DtmfSignalingMethod = (*XDTMFSignaling)(&overlay.T.DtmfSignalingMethod)
	overlay.RouteClassSignalling = (*XStatus)(&overlay.T.RouteClassSignalling)
	overlay.SipTrunkType = (*XTrunkService)(&overlay.T.SipTrunkType)
	overlay.PstnAccess = (*Boolean)(&overlay.T.PstnAccess)
	overlay.UseImePublicIpPort = (*Boolean)(&overlay.T.UseImePublicIpPort)
	overlay.UseDevicePoolCntdPnTransformationCss = (*Boolean)(&overlay.T.UseDevicePoolCntdPnTransformationCss)
	overlay.UseDevicePoolCgpnTransformCssUnkn = (*Boolean)(&overlay.T.UseDevicePoolCgpnTransformCssUnkn)
	overlay.RunOnEveryNode = (*Boolean)(&overlay.T.RunOnEveryNode)
	overlay.TunneledProtocol = (*XTunneledProtocol)(&overlay.T.TunneledProtocol)
	overlay.Asn1RoseOidEncoding = (*XASN1RoseOidEncoding)(&overlay.T.Asn1RoseOidEncoding)
	overlay.QsigVariant = (*XQSIGVariant)(&overlay.T.QsigVariant)
	overlay.PathReplacementSupport = (*Boolean)(&overlay.T.PathReplacementSupport)
	overlay.EnableQsigUtf8 = (*Boolean)(&overlay.T.EnableQsigUtf8)
	overlay.ScriptTraceEnabled = (*Boolean)(&overlay.T.ScriptTraceEnabled)
	overlay.TrunkTrafficSecure = (*XSIPTrunkCallLegSecurity)(&overlay.T.TrunkTrafficSecure)
	overlay.CallingAndCalledPartyInfoFormat = (*XSIPIdentityBlend)(&overlay.T.CallingAndCalledPartyInfoFormat)
	return d.DecodeElement(&overlay, &start)
}

type XSipTrunkDestination struct {
	AddressIpv4 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv4,omitempty"`
	AddressIpv6 string   `xml:"http://www.cisco.com/AXL/API/9.0 addressIpv6,omitempty"`
	Port        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	SortOrder   XInteger `xml:"http://www.cisco.com/AXL/API/9.0 sortOrder"`
}

func (t *XSipTrunkDestination) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipTrunkDestination
	var overlay struct {
		*T
		Port *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	return d.DecodeElement(&overlay, &start)
}

type XSipTrunkSecurityProfile struct {
	Name                             string              `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                      string              `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	SecurityMode                     XDeviceSecurityMode `xml:"http://www.cisco.com/AXL/API/9.0 securityMode,omitempty"`
	IncomingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
	OutgoingTransport                XTransport          `xml:"http://www.cisco.com/AXL/API/9.0 outgoingTransport,omitempty"`
	DigestAuthentication             Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
	NoncePolicyTime                  XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
	X509SubjectName                  string              `xml:"http://www.cisco.com/AXL/API/9.0 x509SubjectName,omitempty"`
	IncomingPort                     XInteger            `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
	ApplLevelAuthentication          Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
	AcceptPresenceSubscription       Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
	AcceptOutOfDialogRefer           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
	AcceptUnsolicitedNotification    Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
	AllowReplaceHeader               Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
	TransmitSecurityStatus           Boolean             `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
	SipV150OutboundSdpOfferFiltering XV150SDPFilter      `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
}

func (t *XSipTrunkSecurityProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSipTrunkSecurityProfile
	var overlay struct {
		*T
		IncomingTransport                *XTransport     `xml:"http://www.cisco.com/AXL/API/9.0 incomingTransport,omitempty"`
		DigestAuthentication             *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 digestAuthentication,omitempty"`
		NoncePolicyTime                  *XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 noncePolicyTime,omitempty"`
		IncomingPort                     *XInteger       `xml:"http://www.cisco.com/AXL/API/9.0 incomingPort,omitempty"`
		ApplLevelAuthentication          *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 applLevelAuthentication,omitempty"`
		AcceptPresenceSubscription       *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptPresenceSubscription,omitempty"`
		AcceptOutOfDialogRefer           *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptOutOfDialogRefer,omitempty"`
		AcceptUnsolicitedNotification    *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 acceptUnsolicitedNotification,omitempty"`
		AllowReplaceHeader               *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 allowReplaceHeader,omitempty"`
		TransmitSecurityStatus           *Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 transmitSecurityStatus,omitempty"`
		SipV150OutboundSdpOfferFiltering *XV150SDPFilter `xml:"http://www.cisco.com/AXL/API/9.0 sipV150OutboundSdpOfferFiltering,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IncomingTransport = (*XTransport)(&overlay.T.IncomingTransport)
	overlay.DigestAuthentication = (*Boolean)(&overlay.T.DigestAuthentication)
	overlay.NoncePolicyTime = (*XInteger)(&overlay.T.NoncePolicyTime)
	overlay.IncomingPort = (*XInteger)(&overlay.T.IncomingPort)
	overlay.ApplLevelAuthentication = (*Boolean)(&overlay.T.ApplLevelAuthentication)
	overlay.AcceptPresenceSubscription = (*Boolean)(&overlay.T.AcceptPresenceSubscription)
	overlay.AcceptOutOfDialogRefer = (*Boolean)(&overlay.T.AcceptOutOfDialogRefer)
	overlay.AcceptUnsolicitedNotification = (*Boolean)(&overlay.T.AcceptUnsolicitedNotification)
	overlay.AllowReplaceHeader = (*Boolean)(&overlay.T.AllowReplaceHeader)
	overlay.TransmitSecurityStatus = (*Boolean)(&overlay.T.TransmitSecurityStatus)
	overlay.SipV150OutboundSdpOfferFiltering = (*XV150SDPFilter)(&overlay.T.SipV150OutboundSdpOfferFiltering)
	return d.DecodeElement(&overlay, &start)
}

type XSite string

type XSocialNetwork string

type XSoftKeyMember struct {
	PositionId  int    `xml:"http://www.cisco.com/AXL/API/9.0 positionId,omitempty"`
	SoftKeyName string `xml:"http://www.cisco.com/AXL/API/9.0 softKeyName,omitempty"`
}

type XSoftKeyTemplate struct {
	Name                    string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description             string  `xml:"http://www.cisco.com/AXL/API/9.0 description"`
	BaseSoftkeyTemplateName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 baseSoftkeyTemplateName"`
	IsDefault               Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
}

type XSoftkey string

type XSpeeddial struct {
	Dirn       string   `xml:"http://www.cisco.com/AXL/API/9.0 dirn"`
	Label      string   `xml:"http://www.cisco.com/AXL/API/9.0 label"`
	AsciiLabel string   `xml:"http://www.cisco.com/AXL/API/9.0 asciiLabel,omitempty"`
	Index      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 index"`
}

type XSrst struct {
	Name       string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Port       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	IpAddress  string   `xml:"http://www.cisco.com/AXL/API/9.0 ipAddress"`
	SipNetwork string   `xml:"http://www.cisco.com/AXL/API/9.0 SipNetwork,omitempty"`
	SipPort    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	IsSecure   Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isSecure,omitempty"`
}

func (t *XSrst) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSrst
	var overlay struct {
		*T
		Port    *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
		SipPort *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 SipPort,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Port = (*XInteger)(&overlay.T.Port)
	overlay.SipPort = (*XInteger)(&overlay.T.SipPort)
	return d.DecodeElement(&overlay, &start)
}

type XStartDialProtocol string

type XStatus string

type XSubClass string

type XSubPatternUsage string

type XSubscribedService struct {
	TelecasterServiceName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 telecasterServiceName"`
	Name                  string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Url                   string   `xml:"http://www.cisco.com/AXL/API/9.0 url,omitempty"`
	UrlButtonIndex        XInteger `xml:"http://www.cisco.com/AXL/API/9.0 urlButtonIndex,omitempty"`
	UrlLabel              string   `xml:"http://www.cisco.com/AXL/API/9.0 urlLabel,omitempty"`
	UrlLabelAscii         string   `xml:"http://www.cisco.com/AXL/API/9.0 urlLabelAscii,omitempty"`
	ServiceNameAscii      string   `xml:"http://www.cisco.com/AXL/API/9.0 serviceNameAscii,omitempty"`
}

func (t *XSubscribedService) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSubscribedService
	var overlay struct {
		*T
		UrlButtonIndex *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 urlButtonIndex,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UrlButtonIndex = (*XInteger)(&overlay.T.UrlButtonIndex)
	return d.DecodeElement(&overlay, &start)
}

type XSupportsFeature string

type XSyslogConfig struct {
	AlarmLevelEvent   XAlarmSeverity `xml:"http://www.cisco.com/AXL/API/9.0 AlarmLevelEvent"`
	RemoteServerName1 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName1"`
	RemoteServerName2 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName2"`
	RemoteServerName3 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName3"`
	RemoteServerName4 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName4"`
	RemoteServerName5 string         `xml:"http://www.cisco.com/AXL/API/9.0 RemoteServerName5"`
	Monitor           string         `xml:"http://www.cisco.com/AXL/API/9.0 monitor"`
	Enable            Boolean        `xml:"http://www.cisco.com/AXL/API/9.0 Enable"`
}

type XSyslogConfiguration struct {
	ServerName    string           `xml:"http://www.cisco.com/AXL/API/9.0 serverName"`
	ServiceGroup  XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	Service       string           `xml:"http://www.cisco.com/AXL/API/9.0 service"`
	AlarmConfigs  XSyslogConfig    `xml:"http://www.cisco.com/AXL/API/9.0 alarmConfigs"`
	EndPointAlarm Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 EndPointAlarm,omitempty"`
}

func (t *XSyslogConfiguration) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XSyslogConfiguration
	var overlay struct {
		*T
		ServiceGroup *XServiceGrouping `xml:"http://www.cisco.com/AXL/API/9.0 serviceGroup,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ServiceGroup = (*XServiceGrouping)(&overlay.T.ServiceGroup)
	return d.DecodeElement(&overlay, &start)
}

type XSyslogMessage string

type XSystemFeature string

type XT1Port struct {
	PortNumber                  XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 portNumber"`
	AttendantDn                 string                       `xml:"http://www.cisco.com/AXL/API/9.0 attendantDn,omitempty"`
	UnattendedPort              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 unattendedPort,omitempty"`
	CallerIdDn                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDn,omitempty"`
	CallerIdEnable              Boolean                      `xml:"http://www.cisco.com/AXL/API/9.0 callerIdEnable"`
	CallingPartySelection       XCallingPartySelection       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartySelection"`
	DigitSending                XDigitSending                `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
	ExpectedDigits              XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 expectedDigits"`
	SigDigits                   Anon799                      `xml:"http://www.cisco.com/AXL/API/9.0 sigDigits"`
	PrefixDn                    string                       `xml:"http://www.cisco.com/AXL/API/9.0 prefixDn,omitempty"`
	PresentationBit             XPresentationBit             `xml:"http://www.cisco.com/AXL/API/9.0 presentationBit"`
	SilenceSuppressionThreshold XSilenceSuppressionThreshold `xml:"http://www.cisco.com/AXL/API/9.0 silenceSuppressionThreshold"`
	StartDialProtocol           XStartDialProtocol           `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
	Trunk                       XTrunk                       `xml:"http://www.cisco.com/AXL/API/9.0 trunk"`
	TrunkDirection              XTrunkDirection              `xml:"http://www.cisco.com/AXL/API/9.0 trunkDirection"`
	TrunkLevel                  XTrunkLevel                  `xml:"http://www.cisco.com/AXL/API/9.0 trunkLevel"`
	TrunkPadRx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadRx"`
	TrunkPadTx                  XTrunkPad                    `xml:"http://www.cisco.com/AXL/API/9.0 trunkPadTx"`
	VendorConfig                XVendorConfig                `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	CallerId                    XCallerID                    `xml:"http://www.cisco.com/AXL/API/9.0 callerId,omitempty"`
	EndpointId                  string                       `xml:"http://www.cisco.com/AXL/API/9.0 endpointId,omitempty"`
	Timer1                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer1,omitempty"`
	Timer2                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer2,omitempty"`
	Timer3                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer3,omitempty"`
	Timer4                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer4,omitempty"`
	Timer5                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer5,omitempty"`
	Timer6                      XInteger                     `xml:"http://www.cisco.com/AXL/API/9.0 timer6,omitempty"`
}

func (t *XT1Port) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XT1Port
	var overlay struct {
		*T
		DigitSending      *XDigitSending      `xml:"http://www.cisco.com/AXL/API/9.0 digitSending,omitempty"`
		StartDialProtocol *XStartDialProtocol `xml:"http://www.cisco.com/AXL/API/9.0 startDialProtocol,omitempty"`
		CallerId          *XCallerID          `xml:"http://www.cisco.com/AXL/API/9.0 callerId,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.DigitSending = (*XDigitSending)(&overlay.T.DigitSending)
	overlay.StartDialProtocol = (*XStartDialProtocol)(&overlay.T.StartDialProtocol)
	overlay.CallerId = (*XCallerID)(&overlay.T.CallerId)
	return d.DecodeElement(&overlay, &start)
}

type XTODAccessMember struct {
	TimeScheduleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleName,omitempty"`
	AccessListName   XFkType `xml:"http://www.cisco.com/AXL/API/9.0 accessListName,omitempty"`
}

type XTaskStatus string

type XTelnetLevel string

type XTerminal string

type XTimeOfDay string

type XTimePeriod struct {
	Name           string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	StartTime      XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
	EndTime        XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
	StartDay       XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
	EndDay         XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
	MonthOfYear    XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
	DayOfMonth     XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
	Description    string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished    Boolean      `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TodOwnerIdName XFkType      `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
	DayOfMonthEnd  XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
	MonthOfYearEnd XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
}

func (t *XTimePeriod) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XTimePeriod
	var overlay struct {
		*T
		StartTime      *XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 startTime,omitempty"`
		EndTime        *XTimeOfDay   `xml:"http://www.cisco.com/AXL/API/9.0 endTime,omitempty"`
		StartDay       *XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 startDay,omitempty"`
		EndDay         *XDayOfWeek   `xml:"http://www.cisco.com/AXL/API/9.0 endDay,omitempty"`
		MonthOfYear    *XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYear,omitempty"`
		DayOfMonth     *XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonth,omitempty"`
		DayOfMonthEnd  *XInteger     `xml:"http://www.cisco.com/AXL/API/9.0 dayOfMonthEnd,omitempty"`
		MonthOfYearEnd *XMonthOfYear `xml:"http://www.cisco.com/AXL/API/9.0 monthOfYearEnd,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.StartTime = (*XTimeOfDay)(&overlay.T.StartTime)
	overlay.EndTime = (*XTimeOfDay)(&overlay.T.EndTime)
	overlay.StartDay = (*XDayOfWeek)(&overlay.T.StartDay)
	overlay.EndDay = (*XDayOfWeek)(&overlay.T.EndDay)
	overlay.MonthOfYear = (*XMonthOfYear)(&overlay.T.MonthOfYear)
	overlay.DayOfMonth = (*XInteger)(&overlay.T.DayOfMonth)
	overlay.DayOfMonthEnd = (*XInteger)(&overlay.T.DayOfMonthEnd)
	overlay.MonthOfYearEnd = (*XMonthOfYear)(&overlay.T.MonthOfYearEnd)
	return d.DecodeElement(&overlay, &start)
}

type XTimeSchedule struct {
	Name                 string                `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Members              Members               `xml:"http://www.cisco.com/AXL/API/9.0 members"`
	Description          string                `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsPublished          Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
	TimeScheduleCategory XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	TodOwnerIdName       XFkType               `xml:"http://www.cisco.com/AXL/API/9.0 todOwnerIdName,omitempty"`
}

func (t *XTimeSchedule) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XTimeSchedule
	var overlay struct {
		*T
		IsPublished          *Boolean               `xml:"http://www.cisco.com/AXL/API/9.0 isPublished,omitempty"`
		TimeScheduleCategory *XTimeScheduleCategory `xml:"http://www.cisco.com/AXL/API/9.0 timeScheduleCategory,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsPublished = (*Boolean)(&overlay.T.IsPublished)
	overlay.TimeScheduleCategory = (*XTimeScheduleCategory)(&overlay.T.TimeScheduleCategory)
	return d.DecodeElement(&overlay, &start)
}

type XTimeScheduleCategory string

type XTimeScheduleTimePeriod struct {
	TimePeriodName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 timePeriodName"`
}

type XTimeZone string

type XTodAccess struct {
	Name        string  `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	OwnerIdName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 ownerIdName"`
	Members     Anon12  `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
}

type XTraceLevelGrouping string

type XTraceLevelGroups string

type XTransPattern struct {
	Pattern                        string             `xml:"http://www.cisco.com/AXL/API/9.0 pattern"`
	Description                    string             `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Usage                          XPatternUsage      `xml:"http://www.cisco.com/AXL/API/9.0 usage"`
	RoutePartitionName             XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	BlockEnable                    Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 blockEnable,omitempty"`
	CalledPartyTransformationMask  string             `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyTransformationMask,omitempty"`
	CallingPartyTransformationMask string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyTransformationMask,omitempty"`
	UseCallingPartyPhoneMask       XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
	CallingPartyPrefixDigits       string             `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyPrefixDigits,omitempty"`
	DialPlanName                   XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 dialPlanName,omitempty"`
	DigitDiscardInstructionName    XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 digitDiscardInstructionName,omitempty"`
	PatternUrgency                 Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 patternUrgency,omitempty"`
	PrefixDigitsOut                string             `xml:"http://www.cisco.com/AXL/API/9.0 prefixDigitsOut,omitempty"`
	RouteFilterName                XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 routeFilterName,omitempty"`
	CallingLinePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
	CallingNamePresentationBit     XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
	ConnectedLinePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
	ConnectedNamePresentationBit   XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
	PatternPrecedence              XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	ProvideOutsideDialtone         Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
	CallingPartyNumberingPlan      XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
	CallingPartyNumberType         XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
	CalledPartyNumberingPlan       XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
	CalledPartyNumberType          XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
	CallingSearchSpaceName         XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	ResourcePriorityNamespaceName  XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 resourcePriorityNamespaceName,omitempty"`
	RouteNextHopByCgpn             Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
	RouteClass                     XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
	CallInterceptProfileName       XFkType            `xml:"http://www.cisco.com/AXL/API/9.0 callInterceptProfileName,omitempty"`
	ReleaseClause                  XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
}

func (t *XTransPattern) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XTransPattern
	var overlay struct {
		*T
		UseCallingPartyPhoneMask     *XStatus            `xml:"http://www.cisco.com/AXL/API/9.0 useCallingPartyPhoneMask,omitempty"`
		CallingLinePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingLinePresentationBit,omitempty"`
		CallingNamePresentationBit   *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 callingNamePresentationBit,omitempty"`
		ConnectedLinePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedLinePresentationBit,omitempty"`
		ConnectedNamePresentationBit *XPresentationBit   `xml:"http://www.cisco.com/AXL/API/9.0 connectedNamePresentationBit,omitempty"`
		PatternPrecedence            *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		ProvideOutsideDialtone       *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 provideOutsideDialtone,omitempty"`
		CallingPartyNumberingPlan    *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberingPlan,omitempty"`
		CallingPartyNumberType       *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 callingPartyNumberType,omitempty"`
		CalledPartyNumberingPlan     *XNumberingPlan     `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberingPlan,omitempty"`
		CalledPartyNumberType        *XPriOfNumber       `xml:"http://www.cisco.com/AXL/API/9.0 calledPartyNumberType,omitempty"`
		RouteNextHopByCgpn           *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 routeNextHopByCgpn,omitempty"`
		RouteClass                   *XPatternRouteClass `xml:"http://www.cisco.com/AXL/API/9.0 routeClass,omitempty"`
		ReleaseClause                *XReleaseCauseValue `xml:"http://www.cisco.com/AXL/API/9.0 releaseClause,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.UseCallingPartyPhoneMask = (*XStatus)(&overlay.T.UseCallingPartyPhoneMask)
	overlay.CallingLinePresentationBit = (*XPresentationBit)(&overlay.T.CallingLinePresentationBit)
	overlay.CallingNamePresentationBit = (*XPresentationBit)(&overlay.T.CallingNamePresentationBit)
	overlay.ConnectedLinePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedLinePresentationBit)
	overlay.ConnectedNamePresentationBit = (*XPresentationBit)(&overlay.T.ConnectedNamePresentationBit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.ProvideOutsideDialtone = (*Boolean)(&overlay.T.ProvideOutsideDialtone)
	overlay.CallingPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CallingPartyNumberingPlan)
	overlay.CallingPartyNumberType = (*XPriOfNumber)(&overlay.T.CallingPartyNumberType)
	overlay.CalledPartyNumberingPlan = (*XNumberingPlan)(&overlay.T.CalledPartyNumberingPlan)
	overlay.CalledPartyNumberType = (*XPriOfNumber)(&overlay.T.CalledPartyNumberType)
	overlay.RouteNextHopByCgpn = (*Boolean)(&overlay.T.RouteNextHopByCgpn)
	overlay.RouteClass = (*XPatternRouteClass)(&overlay.T.RouteClass)
	overlay.ReleaseClause = (*XReleaseCauseValue)(&overlay.T.ReleaseClause)
	return d.DecodeElement(&overlay, &start)
}

type XTranscoder struct {
	Name                   string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description            string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                XProduct         `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	SubUnit                XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
	DevicePoolName         XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName XFkType          `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LoadInformation        XLoadInformation `xml:"http://www.cisco.com/AXL/API/9.0 loadInformation,omitempty"`
	VendorConfig           XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	IsTrustedRelayPoint    Boolean          `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	MaximumCapacity        XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 maximumCapacity,omitempty"`
}

func (t *XTranscoder) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XTranscoder
	var overlay struct {
		*T
		SubUnit             *XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subUnit,omitempty"`
		IsTrustedRelayPoint *Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.SubUnit = (*XInteger)(&overlay.T.SubUnit)
	overlay.IsTrustedRelayPoint = (*Boolean)(&overlay.T.IsTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type XTransformationProfile struct {
	Name                     string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description              string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	NationalStripDigits      XInteger `xml:"http://www.cisco.com/AXL/API/9.0 nationalStripDigits,omitempty"`
	InternationalStripDigits XInteger `xml:"http://www.cisco.com/AXL/API/9.0 internationalStripDigits,omitempty"`
	UnknownStripDigits       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 unknownStripDigits,omitempty"`
	SubscriberStripDigits    XInteger `xml:"http://www.cisco.com/AXL/API/9.0 subscriberStripDigits,omitempty"`
	NationalPrefix           string   `xml:"http://www.cisco.com/AXL/API/9.0 nationalPrefix,omitempty"`
	InternationalPrefix      string   `xml:"http://www.cisco.com/AXL/API/9.0 internationalPrefix,omitempty"`
	UnknownPrefix            string   `xml:"http://www.cisco.com/AXL/API/9.0 unknownPrefix,omitempty"`
	SubscriberPrefix         string   `xml:"http://www.cisco.com/AXL/API/9.0 subscriberPrefix,omitempty"`
	NationalCssName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 nationalCssName,omitempty"`
	InternationalCssName     XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 internationalCssName,omitempty"`
	UnknownCssName           XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 unknownCssName,omitempty"`
	SubscriberCssName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 subscriberCssName,omitempty"`
}

type XTransport string

type XTrunk string

type XTrunkDirection string

type XTrunkLevel string

type XTrunkPad string

type XTrunkSelectionOrder string

type XTrunkService string

type XTrustRole string

type XTunneledProtocol string

type XTvsCertificate struct {
	SubjectName  string  `xml:"http://www.cisco.com/AXL/API/9.0 subjectName,omitempty"`
	IssuerName   string  `xml:"http://www.cisco.com/AXL/API/9.0 issuerName"`
	SerialNumber string  `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber"`
	TimeToLive   int     `xml:"http://www.cisco.com/AXL/API/9.0 timeToLive,omitempty"`
	Ipv4Address  string  `xml:"http://www.cisco.com/AXL/API/9.0 ipv4Address,omitempty"`
	Ipv6Address  string  `xml:"http://www.cisco.com/AXL/API/9.0 ipv6Address,omitempty"`
	Roles        Roles   `xml:"http://www.cisco.com/AXL/API/9.0 roles,omitempty"`
	Services     Anon574 `xml:"http://www.cisco.com/AXL/API/9.0 services,omitempty"`
}

type XTvsCertificateService struct {
	ServiceName XCertificateService `xml:"http://www.cisco.com/AXL/API/9.0 serviceName,omitempty"`
}

type XUCDirRecordSource string

type XUCProduct string

type XUCProductAppServerMap string

type XUCProductConnectProtocolMap string

type XUCService string

type XURIDisambiguationPolicy string

// Must match the pattern \{........-....-....-....-............\}
type XUUID string

type XUcService struct {
	ServiceType  XUCService       `xml:"http://www.cisco.com/AXL/API/9.0 serviceType"`
	ProductType  XUCProduct       `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name         string           `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description  string           `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Hostnameorip string           `xml:"http://www.cisco.com/AXL/API/9.0 hostnameorip"`
	Port         XInteger         `xml:"http://www.cisco.com/AXL/API/9.0 port,omitempty"`
	Protocol     XConnectProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	UcServiceXml XVendorConfig    `xml:"http://www.cisco.com/AXL/API/9.0 ucServiceXml,omitempty"`
}

type XUnitsToGateway struct {
	DomainName  string  `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	GatewayUuid XUUID   `xml:"http://www.cisco.com/AXL/API/9.0 gatewayUuid"`
	Units       Anon504 `xml:"http://www.cisco.com/AXL/API/9.0 units"`
}

type XUsageProfileFeature string

type XUseEntity string

type XUser struct {
	FirstName                             string                                `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	MiddleName                            string                                `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	LastName                              string                                `xml:"http://www.cisco.com/AXL/API/9.0 lastName"`
	Userid                                string                                `xml:"http://www.cisco.com/AXL/API/9.0 userid"`
	Password                              string                                `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                                   string                                `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	TelephoneNumber                       string                                `xml:"http://www.cisco.com/AXL/API/9.0 telephoneNumber,omitempty"`
	Mailid                                string                                `xml:"http://www.cisco.com/AXL/API/9.0 mailid,omitempty"`
	Department                            string                                `xml:"http://www.cisco.com/AXL/API/9.0 department,omitempty"`
	Manager                               string                                `xml:"http://www.cisco.com/AXL/API/9.0 manager,omitempty"`
	UserLocale                            XUserLocale                           `xml:"http://www.cisco.com/AXL/API/9.0 userLocale,omitempty"`
	AssociatedDevices                     AssociatedDevices                     `xml:"http://www.cisco.com/AXL/API/9.0 associatedDevices,omitempty"`
	PrimaryExtension                      PrimaryExtension                      `xml:"http://www.cisco.com/AXL/API/9.0 primaryExtension,omitempty"`
	AssociatedPc                          string                                `xml:"http://www.cisco.com/AXL/API/9.0 associatedPc,omitempty"`
	AssociatedGroups                      AssociatedGroups                      `xml:"http://www.cisco.com/AXL/API/9.0 associatedGroups,omitempty"`
	EnableCti                             Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
	DigestCredentials                     string                                `xml:"http://www.cisco.com/AXL/API/9.0 digestCredentials,omitempty"`
	PhoneProfiles                         PhoneProfiles                         `xml:"http://www.cisco.com/AXL/API/9.0 phoneProfiles,omitempty"`
	DefaultProfile                        XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 defaultProfile,omitempty"`
	PresenceGroupName                     XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 presenceGroupName"`
	SubscribeCallingSearchSpaceName       XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 subscribeCallingSearchSpaceName,omitempty"`
	EnableMobility                        Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
	EnableMobileVoiceAccess               Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
	MaxDeskPickupWaitTime                 XInteger                              `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
	RemoteDestinationLimit                XInteger                              `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
	PasswordCredentials                   PasswordCredentials                   `xml:"http://www.cisco.com/AXL/API/9.0 passwordCredentials,omitempty"`
	PinCredentials                        PinCredentials                        `xml:"http://www.cisco.com/AXL/API/9.0 pinCredentials,omitempty"`
	PrimaryDevice                         XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 primaryDevice,omitempty"`
	EnableEmcc                            Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 enableEmcc,omitempty"`
	CtiControlledDeviceProfiles           CtiControlledDeviceProfiles           `xml:"http://www.cisco.com/AXL/API/9.0 ctiControlledDeviceProfiles,omitempty"`
	PatternPrecedence                     XPatternPrecedence                    `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
	NumericUserId                         string                                `xml:"http://www.cisco.com/AXL/API/9.0 numericUserId,omitempty"`
	MlppPassword                          string                                `xml:"http://www.cisco.com/AXL/API/9.0 mlppPassword,omitempty"`
	CustomUserFields                      CustomUserFields                      `xml:"http://www.cisco.com/AXL/API/9.0 customUserFields,omitempty"`
	HomeCluster                           Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	ImAndPresenceEnable                   Boolean                               `xml:"http://www.cisco.com/AXL/API/9.0 imAndPresenceEnable,omitempty"`
	ServiceProfile                        XFkType                               `xml:"http://www.cisco.com/AXL/API/9.0 serviceProfile,omitempty"`
	LineAppearanceAssociationForPresences LineAppearanceAssociationForPresences `xml:"http://www.cisco.com/AXL/API/9.0 lineAppearanceAssociationForPresences,omitempty"`
	DirectoryUri                          string                                `xml:"http://www.cisco.com/AXL/API/9.0 directoryUri,omitempty"`
}

func (t *XUser) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XUser
	var overlay struct {
		*T
		EnableCti               *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableCti,omitempty"`
		EnableMobility          *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobility,omitempty"`
		EnableMobileVoiceAccess *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 enableMobileVoiceAccess,omitempty"`
		MaxDeskPickupWaitTime   *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 maxDeskPickupWaitTime,omitempty"`
		RemoteDestinationLimit  *XInteger           `xml:"http://www.cisco.com/AXL/API/9.0 remoteDestinationLimit,omitempty"`
		PatternPrecedence       *XPatternPrecedence `xml:"http://www.cisco.com/AXL/API/9.0 patternPrecedence,omitempty"`
		HomeCluster             *Boolean            `xml:"http://www.cisco.com/AXL/API/9.0 homeCluster,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.EnableCti = (*Boolean)(&overlay.T.EnableCti)
	overlay.EnableMobility = (*Boolean)(&overlay.T.EnableMobility)
	overlay.EnableMobileVoiceAccess = (*Boolean)(&overlay.T.EnableMobileVoiceAccess)
	overlay.MaxDeskPickupWaitTime = (*XInteger)(&overlay.T.MaxDeskPickupWaitTime)
	overlay.RemoteDestinationLimit = (*XInteger)(&overlay.T.RemoteDestinationLimit)
	overlay.PatternPrecedence = (*XPatternPrecedence)(&overlay.T.PatternPrecedence)
	overlay.HomeCluster = (*Boolean)(&overlay.T.HomeCluster)
	return d.DecodeElement(&overlay, &start)
}

type XUserAgentServerHeaderInfo string

type XUserAssociation string

type XUserCustomUserField struct {
}

type XUserGroup struct {
	Name      string    `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Members   Anon158   `xml:"http://www.cisco.com/AXL/API/9.0 members,omitempty"`
	UserRoles UserRoles `xml:"http://www.cisco.com/AXL/API/9.0 userRoles,omitempty"`
}

type XUserGroupMember struct {
	UserId string `xml:"http://www.cisco.com/AXL/API/9.0 userId"`
}

type XUserGroupRoles struct {
	RoleName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 roleName"`
}

type XUserLocale string

type XUserNotificationMessage string

type XUserNotificationSection string

type XUserPhoneAssociation struct {
	UserId                      string   `xml:"http://www.cisco.com/AXL/API/9.0 userId"`
	Password                    string   `xml:"http://www.cisco.com/AXL/API/9.0 password,omitempty"`
	Pin                         XInteger `xml:"http://www.cisco.com/AXL/API/9.0 pin,omitempty"`
	LastName                    string   `xml:"http://www.cisco.com/AXL/API/9.0 lastName"`
	MiddleName                  string   `xml:"http://www.cisco.com/AXL/API/9.0 middleName,omitempty"`
	FirstName                   string   `xml:"http://www.cisco.com/AXL/API/9.0 firstName,omitempty"`
	ProductType                 XModel   `xml:"http://www.cisco.com/AXL/API/9.0 productType,omitempty"`
	Name                        string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	DnCssName                   XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 dnCssName,omitempty"`
	PhoneCssName                XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 phoneCssName,omitempty"`
	E164Mask                    string   `xml:"http://www.cisco.com/AXL/API/9.0 e164Mask,omitempty"`
	Extension                   string   `xml:"http://www.cisco.com/AXL/API/9.0 extension"`
	RoutePartitionName          XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 routePartitionName,omitempty"`
	VoiceMailProfileName        XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailProfileName,omitempty"`
	EnableExtensionMobility     Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 enableExtensionMobility,omitempty"`
	DirectoryURI                string   `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryURI,omitempty"`
	DirectoryNumberURIPartition XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 DirectoryNumberURIPartition,omitempty"`
}

type XUserProfile string

type XV150SDPFilter string

type XVMAvoidancePolicy string

type XVPNClientAuthentication string

type XVendorConfig []string

func (a XVendorConfig) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	var output struct {
		ArrayType string   `xml:"http://schemas.xmlsoap.org/wsdl/ arrayType,attr"`
		Items     []string `xml:" item"`
	}
	output.Items = []string(a)
	start.Attr = append(start.Attr, xml.Attr{Name: xml.Name{"", "xmlns:ns1"}, Value: "http://www.w3.org/2001/XMLSchema"})
	output.ArrayType = "ns1:anyType[]"
	return e.EncodeElement(&output, start)
}
func (a *XVendorConfig) UnmarshalXML(d *xml.Decoder, start xml.StartElement) (err error) {
	var tok xml.Token
	for tok, err = d.Token(); err == nil; tok, err = d.Token() {
		if tok, ok := tok.(xml.StartElement); ok {
			var item string
			if err = d.DecodeElement(&item, &tok); err == nil {
				*a = append(*a, item)
			}
		}
		if _, ok := tok.(xml.EndElement); ok {
			break
		}
	}
	return err
}

type XVg224 struct {
	DomainName           string          `xml:"http://www.cisco.com/AXL/API/9.0 domainName"`
	Description          string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product              XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
	Protocol             XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	CallManagerGroupName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callManagerGroupName,omitempty"`
	Units                Anon428         `xml:"http://www.cisco.com/AXL/API/9.0 units,omitempty"`
	VendorConfig         XVendorConfig   `xml:"http://www.cisco.com/AXL/API/9.0 vendorConfig,omitempty"`
	VersionStamp         string          `xml:"http://www.cisco.com/AXL/API/9.0 versionStamp,omitempty"`
}

func (t *XVg224) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XVg224
	var overlay struct {
		*T
		Product  *XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product,omitempty"`
		Protocol *XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Product = (*XProduct)(&overlay.T.Product)
	overlay.Protocol = (*XDeviceProtocol)(&overlay.T.Protocol)
	return d.DecodeElement(&overlay, &start)
}

type XVideoCallTrafficClass string

type XViprFilterElement string

type XVmPilot struct {
	Dirn    string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	CssName XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	Uuid    XUUID   `xml:"uuid,attr,omitempty"`
}

type XVoiceMailPilot struct {
	Dirn        string  `xml:"http://www.cisco.com/AXL/API/9.0 dirn,omitempty"`
	Description string  `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	CssName     XFkType `xml:"http://www.cisco.com/AXL/API/9.0 cssName,omitempty"`
	IsDefault   Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault"`
}

type XVoiceMailPort struct {
	Name                             string          `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description                      string          `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Product                          XProduct        `xml:"http://www.cisco.com/AXL/API/9.0 product"`
	Class                            XClass          `xml:"http://www.cisco.com/AXL/API/9.0 class"`
	Protocol                         XDeviceProtocol `xml:"http://www.cisco.com/AXL/API/9.0 protocol"`
	ProtocolSide                     XProtocolSide   `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
	CallingSearchSpaceName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 callingSearchSpaceName,omitempty"`
	DevicePoolName                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 devicePoolName,omitempty"`
	CommonDeviceConfigName           XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 commonDeviceConfigName,omitempty"`
	LocationName                     XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 locationName"`
	Preemption                       XPreemption     `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
	UseTrustedRelayPoint             XStatus         `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	SecurityProfileName              XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 securityProfileName,omitempty"`
	GeoLocationName                  XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 geoLocationName,omitempty"`
	AutomatedAlternateRoutingCssName XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 automatedAlternateRoutingCssName,omitempty"`
	DnPattern                        string          `xml:"http://www.cisco.com/AXL/API/9.0 dnPattern"`
	RoutePartition                   XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 routePartition,omitempty"`
	DnCallingSearchSpace             XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 dnCallingSearchSpace,omitempty"`
	AarNeighborhoodName              XFkType         `xml:"http://www.cisco.com/AXL/API/9.0 aarNeighborhoodName,omitempty"`
	CallerIdDisplay                  string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplay,omitempty"`
	CallerIdDisplayAscii             string          `xml:"http://www.cisco.com/AXL/API/9.0 callerIdDisplayAscii,omitempty"`
	ExternalMask                     string          `xml:"http://www.cisco.com/AXL/API/9.0 externalMask,omitempty"`
	Ctiid                            int             `xml:"ctiid,attr,omitempty"`
}

func (t *XVoiceMailPort) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XVoiceMailPort
	var overlay struct {
		*T
		ProtocolSide         *XProtocolSide `xml:"http://www.cisco.com/AXL/API/9.0 protocolSide,omitempty"`
		Preemption           *XPreemption   `xml:"http://www.cisco.com/AXL/API/9.0 preemption,omitempty"`
		UseTrustedRelayPoint *XStatus       `xml:"http://www.cisco.com/AXL/API/9.0 useTrustedRelayPoint,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.ProtocolSide = (*XProtocolSide)(&overlay.T.ProtocolSide)
	overlay.Preemption = (*XPreemption)(&overlay.T.Preemption)
	overlay.UseTrustedRelayPoint = (*XStatus)(&overlay.T.UseTrustedRelayPoint)
	return d.DecodeElement(&overlay, &start)
}

type XVoiceMailProfile struct {
	Name             string   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description      string   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	IsDefault        Boolean  `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	VoiceMailboxMask string   `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailboxMask,omitempty"`
	VoiceMailPilot   XVmPilot `xml:"http://www.cisco.com/AXL/API/9.0 voiceMailPilot"`
}

func (t *XVoiceMailProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XVoiceMailProfile
	var overlay struct {
		*T
		IsDefault *Boolean `xml:"http://www.cisco.com/AXL/API/9.0 isDefault,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.IsDefault = (*Boolean)(&overlay.T.IsDefault)
	return d.DecodeElement(&overlay, &start)
}

type XVpnGateway struct {
	Name         string       `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description  string       `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	Url          string       `xml:"http://www.cisco.com/AXL/API/9.0 url"`
	Certificates Certificates `xml:"http://www.cisco.com/AXL/API/9.0 certificates"`
}

type XVpnGatewayMember struct {
	IssuerName   string `xml:"http://www.cisco.com/AXL/API/9.0 issuerName"`
	SerialNumber string `xml:"http://www.cisco.com/AXL/API/9.0 serialNumber"`
}

type XVpnGroup struct {
	Name        string      `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description string      `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	VpnGateways VpnGateways `xml:"http://www.cisco.com/AXL/API/9.0 vpnGateways,omitempty"`
}

type XVpnGroupMember struct {
	VpnGatewayName XFkType  `xml:"http://www.cisco.com/AXL/API/9.0 vpnGatewayName"`
	Priority       XInteger `xml:"http://www.cisco.com/AXL/API/9.0 priority"`
}

type XVpnProfile struct {
	Name                 string                   `xml:"http://www.cisco.com/AXL/API/9.0 name"`
	Description          string                   `xml:"http://www.cisco.com/AXL/API/9.0 description,omitempty"`
	AutoNetworkDetection Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 autoNetworkDetection,omitempty"`
	Mtu                  XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
	FailToConnect        XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
	ClientAuthentication XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	PwdPersistant        Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 pwdPersistant,omitempty"`
	EnableHostIdCheck    Boolean                  `xml:"http://www.cisco.com/AXL/API/9.0 enableHostIdCheck,omitempty"`
}

func (t *XVpnProfile) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error {
	type T XVpnProfile
	var overlay struct {
		*T
		Mtu                  *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 mtu,omitempty"`
		FailToConnect        *XInteger                 `xml:"http://www.cisco.com/AXL/API/9.0 failToConnect,omitempty"`
		ClientAuthentication *XVPNClientAuthentication `xml:"http://www.cisco.com/AXL/API/9.0 clientAuthentication,omitempty"`
	}
	overlay.T = (*T)(t)
	overlay.Mtu = (*XInteger)(&overlay.T.Mtu)
	overlay.FailToConnect = (*XInteger)(&overlay.T.FailToConnect)
	overlay.ClientAuthentication = (*XVPNClientAuthentication)(&overlay.T.ClientAuthentication)
	return d.DecodeElement(&overlay, &start)
}

type XWebPage string

type XWebPageDisplay string

type XWebPageSection string

type XWinCharSet string

type XYellowAlarm string

type XZeroSuppression string

type XZzconfBridge string

type XZzdndcontrol string

type XZzdtmfDbLevel string

type XZzkpml string

type XZznetworkMediaType string

type XZzntpmode string

type XZzpreff string

type XZzuserInfo string

type AddSipProfile struct { 
	XMLName xml.Name `xml:"ns:addSipProfile"` 
	AddSipProfileReq
}

type AddSipProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addSipProfileResponse"` 
	StandardResponse
}

type UpdateSipProfile struct { 
	XMLName xml.Name `xml:"ns:updateSipProfile"` 
	UpdateSipProfileReq
}

type UpdateSipProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipProfileResponse"` 
	StandardResponse
}

type GetSipProfile struct { 
	XMLName xml.Name `xml:"ns:getSipProfile"` 
	GetSipProfileReq
}

type GetSipProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getSipProfileResponse"` 
	GetSipProfileRes
}

type RemoveSipProfile struct { 
	XMLName xml.Name `xml:"ns:removeSipProfile"` 
	NameAndGUIDRequest
}

type RemoveSipProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipProfileResponse"` 
	StandardResponse
}

type ListSipProfile struct { 
	XMLName xml.Name `xml:"ns:listSipProfile"` 
	ListSipProfileReq
}

type ListSipProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listSipProfileResponse"` 
	ListSipProfileRes
}

type AddSipTrunkSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:addSipTrunkSecurityProfile"` 
	AddSipTrunkSecurityProfileReq
}

type AddSipTrunkSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addSipTrunkSecurityProfileResponse"` 
	StandardResponse
}

type UpdateSipTrunkSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:updateSipTrunkSecurityProfile"` 
	UpdateSipTrunkSecurityProfileReq
}

type UpdateSipTrunkSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipTrunkSecurityProfileResponse"` 
	StandardResponse
}

type GetSipTrunkSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:getSipTrunkSecurityProfile"` 
	GetSipTrunkSecurityProfileReq
}

type GetSipTrunkSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getSipTrunkSecurityProfileResponse"` 
	GetSipTrunkSecurityProfileRes
}

type RemoveSipTrunkSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:removeSipTrunkSecurityProfile"` 
	NameAndGUIDRequest
}

type RemoveSipTrunkSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipTrunkSecurityProfileResponse"` 
	StandardResponse
}

type ListSipTrunkSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:listSipTrunkSecurityProfile"` 
	ListSipTrunkSecurityProfileReq
}

type ListSipTrunkSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listSipTrunkSecurityProfileResponse"` 
	ListSipTrunkSecurityProfileRes
}

type AddTimePeriod struct { 
	XMLName xml.Name `xml:"ns:addTimePeriod"` 
	AddTimePeriodReq
}

type AddTimePeriodResponse struct { 
	XMLName xml.Name `xml:"ns:addTimePeriodResponse"` 
	StandardResponse
}

type UpdateTimePeriod struct { 
	XMLName xml.Name `xml:"ns:updateTimePeriod"` 
	UpdateTimePeriodReq
}

type UpdateTimePeriodResponse struct { 
	XMLName xml.Name `xml:"ns:updateTimePeriodResponse"` 
	StandardResponse
}

type GetTimePeriod struct { 
	XMLName xml.Name `xml:"ns:getTimePeriod"` 
	GetTimePeriodReq
}

type GetTimePeriodResponse struct { 
	XMLName xml.Name `xml:"ns:getTimePeriodResponse"` 
	GetTimePeriodRes
}

type RemoveTimePeriod struct { 
	XMLName xml.Name `xml:"ns:removeTimePeriod"` 
	NameAndGUIDRequest
}

type RemoveTimePeriodResponse struct { 
	XMLName xml.Name `xml:"ns:removeTimePeriodResponse"` 
	StandardResponse
}

type ListTimePeriod struct { 
	XMLName xml.Name `xml:"ns:listTimePeriod"` 
	ListTimePeriodReq
}

type ListTimePeriodResponse struct { 
	XMLName xml.Name `xml:"ns:listTimePeriodResponse"` 
	ListTimePeriodRes
}

type AddTimeSchedule struct { 
	XMLName xml.Name `xml:"ns:addTimeSchedule"` 
	AddTimeScheduleReq
}

type AddTimeScheduleResponse struct { 
	XMLName xml.Name `xml:"ns:addTimeScheduleResponse"` 
	StandardResponse
}

type UpdateTimeSchedule struct { 
	XMLName xml.Name `xml:"ns:updateTimeSchedule"` 
	UpdateTimeScheduleReq
}

type UpdateTimeScheduleResponse struct { 
	XMLName xml.Name `xml:"ns:updateTimeScheduleResponse"` 
	StandardResponse
}

type GetTimeSchedule struct { 
	XMLName xml.Name `xml:"ns:getTimeSchedule"` 
	GetTimeScheduleReq
}

type GetTimeScheduleResponse struct { 
	XMLName xml.Name `xml:"ns:getTimeScheduleResponse"` 
	GetTimeScheduleRes
}

type RemoveTimeSchedule struct { 
	XMLName xml.Name `xml:"ns:removeTimeSchedule"` 
	NameAndGUIDRequest
}

type RemoveTimeScheduleResponse struct { 
	XMLName xml.Name `xml:"ns:removeTimeScheduleResponse"` 
	StandardResponse
}

type ListTimeSchedule struct { 
	XMLName xml.Name `xml:"ns:listTimeSchedule"` 
	ListTimeScheduleReq
}

type ListTimeScheduleResponse struct { 
	XMLName xml.Name `xml:"ns:listTimeScheduleResponse"` 
	ListTimeScheduleRes
}

type AddTodAccess struct { 
	XMLName xml.Name `xml:"ns:addTodAccess"` 
	AddTodAccessReq
}

type AddTodAccessResponse struct { 
	XMLName xml.Name `xml:"ns:addTodAccessResponse"` 
	StandardResponse
}

type UpdateTodAccess struct { 
	XMLName xml.Name `xml:"ns:updateTodAccess"` 
	UpdateTodAccessReq
}

type UpdateTodAccessResponse struct { 
	XMLName xml.Name `xml:"ns:updateTodAccessResponse"` 
	StandardResponse
}

type GetTodAccess struct { 
	XMLName xml.Name `xml:"ns:getTodAccess"` 
	GetTodAccessReq
}

type GetTodAccessResponse struct { 
	XMLName xml.Name `xml:"ns:getTodAccessResponse"` 
	GetTodAccessRes
}

type RemoveTodAccess struct { 
	XMLName xml.Name `xml:"ns:removeTodAccess"` 
	NameAndGUIDRequest
}

type RemoveTodAccessResponse struct { 
	XMLName xml.Name `xml:"ns:removeTodAccessResponse"` 
	StandardResponse
}

type ListTodAccess struct { 
	XMLName xml.Name `xml:"ns:listTodAccess"` 
	ListTodAccessReq
}

type ListTodAccessResponse struct { 
	XMLName xml.Name `xml:"ns:listTodAccessResponse"` 
	ListTodAccessRes
}

type AddVoiceMailPilot struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailPilot"` 
	AddVoiceMailPilotReq
}

type AddVoiceMailPilotResponse struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailPilotResponse"` 
	StandardResponse
}

type UpdateVoiceMailPilot struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailPilot"` 
	UpdateVoiceMailPilotReq
}

type UpdateVoiceMailPilotResponse struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailPilotResponse"` 
	StandardResponse
}

type GetVoiceMailPilot struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailPilot"` 
	GetVoiceMailPilotReq
}

type GetVoiceMailPilotResponse struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailPilotResponse"` 
	GetVoiceMailPilotRes
}

type RemoveVoiceMailPilot struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailPilot"` 
	RemoveVoiceMailPilotReq
}

type RemoveVoiceMailPilotResponse struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailPilotResponse"` 
	StandardResponse
}

type ListVoiceMailPilot struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailPilot"` 
	ListVoiceMailPilotReq
}

type ListVoiceMailPilotResponse struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailPilotResponse"` 
	ListVoiceMailPilotRes
}

type AddProcessNode struct { 
	XMLName xml.Name `xml:"ns:addProcessNode"` 
	AddProcessNodeReq
}

type AddProcessNodeResponse struct { 
	XMLName xml.Name `xml:"ns:addProcessNodeResponse"` 
	StandardResponse
}

type UpdateProcessNode struct { 
	XMLName xml.Name `xml:"ns:updateProcessNode"` 
	UpdateProcessNodeReq
}

type UpdateProcessNodeResponse struct { 
	XMLName xml.Name `xml:"ns:updateProcessNodeResponse"` 
	StandardResponse
}

type GetProcessNode struct { 
	XMLName xml.Name `xml:"ns:getProcessNode"` 
	GetProcessNodeReq
}

type GetProcessNodeResponse struct { 
	XMLName xml.Name `xml:"ns:getProcessNodeResponse"` 
	GetProcessNodeRes
}

type RemoveProcessNode struct { 
	XMLName xml.Name `xml:"ns:removeProcessNode"` 
	NameAndGUIDRequest
}

type RemoveProcessNodeResponse struct { 
	XMLName xml.Name `xml:"ns:removeProcessNodeResponse"` 
	StandardResponse
}

type ListProcessNode struct { 
	XMLName xml.Name `xml:"ns:listProcessNode"` 
	ListProcessNodeReq
}

type ListProcessNodeResponse struct { 
	XMLName xml.Name `xml:"ns:listProcessNodeResponse"` 
	ListProcessNodeRes
}

type AddCallerFilterList struct { 
	XMLName xml.Name `xml:"ns:addCallerFilterList"` 
	AddCallerFilterListReq
}

type AddCallerFilterListResponse struct { 
	XMLName xml.Name `xml:"ns:addCallerFilterListResponse"` 
	StandardResponse
}

type UpdateCallerFilterList struct { 
	XMLName xml.Name `xml:"ns:updateCallerFilterList"` 
	UpdateCallerFilterListReq
}

type UpdateCallerFilterListResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallerFilterListResponse"` 
	StandardResponse
}

type GetCallerFilterList struct { 
	XMLName xml.Name `xml:"ns:getCallerFilterList"` 
	GetCallerFilterListReq
}

type GetCallerFilterListResponse struct { 
	XMLName xml.Name `xml:"ns:getCallerFilterListResponse"` 
	GetCallerFilterListRes
}

type RemoveCallerFilterList struct { 
	XMLName xml.Name `xml:"ns:removeCallerFilterList"` 
	NameAndGUIDRequest
}

type RemoveCallerFilterListResponse struct { 
	XMLName xml.Name `xml:"ns:removeCallerFilterListResponse"` 
	StandardResponse
}

type ListCallerFilterList struct { 
	XMLName xml.Name `xml:"ns:listCallerFilterList"` 
	ListCallerFilterListReq
}

type ListCallerFilterListResponse struct { 
	XMLName xml.Name `xml:"ns:listCallerFilterListResponse"` 
	ListCallerFilterListRes
}

type AddRoutePartition struct { 
	XMLName xml.Name `xml:"ns:addRoutePartition"` 
	AddRoutePartitionReq
}

type AddRoutePartitionResponse struct { 
	XMLName xml.Name `xml:"ns:addRoutePartitionResponse"` 
	StandardResponse
}

type UpdateRoutePartition struct { 
	XMLName xml.Name `xml:"ns:updateRoutePartition"` 
	UpdateRoutePartitionReq
}

type UpdateRoutePartitionResponse struct { 
	XMLName xml.Name `xml:"ns:updateRoutePartitionResponse"` 
	StandardResponse
}

type GetRoutePartition struct { 
	XMLName xml.Name `xml:"ns:getRoutePartition"` 
	GetRoutePartitionReq
}

type GetRoutePartitionResponse struct { 
	XMLName xml.Name `xml:"ns:getRoutePartitionResponse"` 
	GetRoutePartitionRes
}

type RemoveRoutePartition struct { 
	XMLName xml.Name `xml:"ns:removeRoutePartition"` 
	NameAndGUIDRequest
}

type RemoveRoutePartitionResponse struct { 
	XMLName xml.Name `xml:"ns:removeRoutePartitionResponse"` 
	StandardResponse
}

type ListRoutePartition struct { 
	XMLName xml.Name `xml:"ns:listRoutePartition"` 
	ListRoutePartitionReq
}

type ListRoutePartitionResponse struct { 
	XMLName xml.Name `xml:"ns:listRoutePartitionResponse"` 
	ListRoutePartitionRes
}

type AddCss struct { 
	XMLName xml.Name `xml:"ns:addCss"` 
	AddCssReq
}

type AddCssResponse struct { 
	XMLName xml.Name `xml:"ns:addCssResponse"` 
	StandardResponse
}

type UpdateCss struct { 
	XMLName xml.Name `xml:"ns:updateCss"` 
	UpdateCssReq
}

type UpdateCssResponse struct { 
	XMLName xml.Name `xml:"ns:updateCssResponse"` 
	StandardResponse
}

type GetCss struct { 
	XMLName xml.Name `xml:"ns:getCss"` 
	GetCssReq
}

type GetCssResponse struct { 
	XMLName xml.Name `xml:"ns:getCssResponse"` 
	GetCssRes
}

type RemoveCss struct { 
	XMLName xml.Name `xml:"ns:removeCss"` 
	NameAndGUIDRequest
}

type RemoveCssResponse struct { 
	XMLName xml.Name `xml:"ns:removeCssResponse"` 
	StandardResponse
}

type ListCss struct { 
	XMLName xml.Name `xml:"ns:listCss"` 
	ListCssReq
}

type ListCssResponse struct { 
	XMLName xml.Name `xml:"ns:listCssResponse"` 
	ListCssRes
}

type UpdateCallManager struct { 
	XMLName xml.Name `xml:"ns:updateCallManager"` 
	UpdateCallManagerReq
}

type UpdateCallManagerResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallManagerResponse"` 
	StandardResponse
}

type GetCallManager struct { 
	XMLName xml.Name `xml:"ns:getCallManager"` 
	GetCallManagerReq
}

type GetCallManagerResponse struct { 
	XMLName xml.Name `xml:"ns:getCallManagerResponse"` 
	GetCallManagerRes
}

type ListCallManager struct { 
	XMLName xml.Name `xml:"ns:listCallManager"` 
	ListCallManagerReq
}

type ListCallManagerResponse struct { 
	XMLName xml.Name `xml:"ns:listCallManagerResponse"` 
	ListCallManagerRes
}

type AddMediaResourceGroup struct { 
	XMLName xml.Name `xml:"ns:addMediaResourceGroup"` 
	AddMediaResourceGroupReq
}

type AddMediaResourceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addMediaResourceGroupResponse"` 
	StandardResponse
}

type UpdateMediaResourceGroup struct { 
	XMLName xml.Name `xml:"ns:updateMediaResourceGroup"` 
	UpdateMediaResourceGroupReq
}

type UpdateMediaResourceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateMediaResourceGroupResponse"` 
	StandardResponse
}

type GetMediaResourceGroup struct { 
	XMLName xml.Name `xml:"ns:getMediaResourceGroup"` 
	GetMediaResourceGroupReq
}

type GetMediaResourceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getMediaResourceGroupResponse"` 
	GetMediaResourceGroupRes
}

type RemoveMediaResourceGroup struct { 
	XMLName xml.Name `xml:"ns:removeMediaResourceGroup"` 
	NameAndGUIDRequest
}

type RemoveMediaResourceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeMediaResourceGroupResponse"` 
	StandardResponse
}

type ListMediaResourceGroup struct { 
	XMLName xml.Name `xml:"ns:listMediaResourceGroup"` 
	ListMediaResourceGroupReq
}

type ListMediaResourceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listMediaResourceGroupResponse"` 
	ListMediaResourceGroupRes
}

type AddMediaResourceList struct { 
	XMLName xml.Name `xml:"ns:addMediaResourceList"` 
	AddMediaResourceListReq
}

type AddMediaResourceListResponse struct { 
	XMLName xml.Name `xml:"ns:addMediaResourceListResponse"` 
	StandardResponse
}

type UpdateMediaResourceList struct { 
	XMLName xml.Name `xml:"ns:updateMediaResourceList"` 
	UpdateMediaResourceListReq
}

type UpdateMediaResourceListResponse struct { 
	XMLName xml.Name `xml:"ns:updateMediaResourceListResponse"` 
	StandardResponse
}

type GetMediaResourceList struct { 
	XMLName xml.Name `xml:"ns:getMediaResourceList"` 
	GetMediaResourceListReq
}

type GetMediaResourceListResponse struct { 
	XMLName xml.Name `xml:"ns:getMediaResourceListResponse"` 
	GetMediaResourceListRes
}

type RemoveMediaResourceList struct { 
	XMLName xml.Name `xml:"ns:removeMediaResourceList"` 
	NameAndGUIDRequest
}

type RemoveMediaResourceListResponse struct { 
	XMLName xml.Name `xml:"ns:removeMediaResourceListResponse"` 
	StandardResponse
}

type ListMediaResourceList struct { 
	XMLName xml.Name `xml:"ns:listMediaResourceList"` 
	ListMediaResourceListReq
}

type ListMediaResourceListResponse struct { 
	XMLName xml.Name `xml:"ns:listMediaResourceListResponse"` 
	ListMediaResourceListRes
}

type AddRegion struct { 
	XMLName xml.Name `xml:"ns:addRegion"` 
	AddRegionReq
}

type AddRegionResponse struct { 
	XMLName xml.Name `xml:"ns:addRegionResponse"` 
	StandardResponse
}

type UpdateRegion struct { 
	XMLName xml.Name `xml:"ns:updateRegion"` 
	UpdateRegionReq
}

type UpdateRegionResponse struct { 
	XMLName xml.Name `xml:"ns:updateRegionResponse"` 
	StandardResponse
}

type GetRegion struct { 
	XMLName xml.Name `xml:"ns:getRegion"` 
	GetRegionReq
}

type GetRegionResponse struct { 
	XMLName xml.Name `xml:"ns:getRegionResponse"` 
	GetRegionRes
}

type RemoveRegion struct { 
	XMLName xml.Name `xml:"ns:removeRegion"` 
	NameAndGUIDRequest
}

type RemoveRegionResponse struct { 
	XMLName xml.Name `xml:"ns:removeRegionResponse"` 
	StandardResponse
}

type ListRegion struct { 
	XMLName xml.Name `xml:"ns:listRegion"` 
	ListRegionReq
}

type ListRegionResponse struct { 
	XMLName xml.Name `xml:"ns:listRegionResponse"` 
	ListRegionRes
}

type AddAarGroup struct { 
	XMLName xml.Name `xml:"ns:addAarGroup"` 
	AddAarGroupReq
}

type AddAarGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addAarGroupResponse"` 
	StandardResponse
}

type UpdateAarGroup struct { 
	XMLName xml.Name `xml:"ns:updateAarGroup"` 
	UpdateAarGroupReq
}

type UpdateAarGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateAarGroupResponse"` 
	StandardResponse
}

type GetAarGroup struct { 
	XMLName xml.Name `xml:"ns:getAarGroup"` 
	GetAarGroupReq
}

type GetAarGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getAarGroupResponse"` 
	GetAarGroupRes
}

type RemoveAarGroup struct { 
	XMLName xml.Name `xml:"ns:removeAarGroup"` 
	NameAndGUIDRequest
}

type RemoveAarGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeAarGroupResponse"` 
	StandardResponse
}

type ListAarGroup struct { 
	XMLName xml.Name `xml:"ns:listAarGroup"` 
	ListAarGroupReq
}

type ListAarGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listAarGroupResponse"` 
	ListAarGroupRes
}

type AddPhysicalLocation struct { 
	XMLName xml.Name `xml:"ns:addPhysicalLocation"` 
	AddPhysicalLocationReq
}

type AddPhysicalLocationResponse struct { 
	XMLName xml.Name `xml:"ns:addPhysicalLocationResponse"` 
	StandardResponse
}

type UpdatePhysicalLocation struct { 
	XMLName xml.Name `xml:"ns:updatePhysicalLocation"` 
	UpdatePhysicalLocationReq
}

type UpdatePhysicalLocationResponse struct { 
	XMLName xml.Name `xml:"ns:updatePhysicalLocationResponse"` 
	StandardResponse
}

type GetPhysicalLocation struct { 
	XMLName xml.Name `xml:"ns:getPhysicalLocation"` 
	GetPhysicalLocationReq
}

type GetPhysicalLocationResponse struct { 
	XMLName xml.Name `xml:"ns:getPhysicalLocationResponse"` 
	GetPhysicalLocationRes
}

type RemovePhysicalLocation struct { 
	XMLName xml.Name `xml:"ns:removePhysicalLocation"` 
	NameAndGUIDRequest
}

type RemovePhysicalLocationResponse struct { 
	XMLName xml.Name `xml:"ns:removePhysicalLocationResponse"` 
	StandardResponse
}

type ListPhysicalLocation struct { 
	XMLName xml.Name `xml:"ns:listPhysicalLocation"` 
	ListPhysicalLocationReq
}

type ListPhysicalLocationResponse struct { 
	XMLName xml.Name `xml:"ns:listPhysicalLocationResponse"` 
	ListPhysicalLocationRes
}

type AddRouteGroup struct { 
	XMLName xml.Name `xml:"ns:addRouteGroup"` 
	AddRouteGroupReq
}

type AddRouteGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addRouteGroupResponse"` 
	StandardResponse
}

type UpdateRouteGroup struct { 
	XMLName xml.Name `xml:"ns:updateRouteGroup"` 
	UpdateRouteGroupReq
}

type UpdateRouteGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateRouteGroupResponse"` 
	StandardResponse
}

type GetRouteGroup struct { 
	XMLName xml.Name `xml:"ns:getRouteGroup"` 
	GetRouteGroupReq
}

type GetRouteGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getRouteGroupResponse"` 
	GetRouteGroupRes
}

type RemoveRouteGroup struct { 
	XMLName xml.Name `xml:"ns:removeRouteGroup"` 
	NameAndGUIDRequest
}

type RemoveRouteGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeRouteGroupResponse"` 
	StandardResponse
}

type ListRouteGroup struct { 
	XMLName xml.Name `xml:"ns:listRouteGroup"` 
	ListRouteGroupReq
}

type ListRouteGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listRouteGroupResponse"` 
	ListRouteGroupRes
}

type AddDevicePool struct { 
	XMLName xml.Name `xml:"ns:addDevicePool"` 
	AddDevicePoolReq
}

type AddDevicePoolResponse struct { 
	XMLName xml.Name `xml:"ns:addDevicePoolResponse"` 
	StandardResponse
}

type UpdateDevicePool struct { 
	XMLName xml.Name `xml:"ns:updateDevicePool"` 
	UpdateDevicePoolReq
}

type UpdateDevicePoolResponse struct { 
	XMLName xml.Name `xml:"ns:updateDevicePoolResponse"` 
	StandardResponse
}

type GetDevicePool struct { 
	XMLName xml.Name `xml:"ns:getDevicePool"` 
	GetDevicePoolReq
}

type GetDevicePoolResponse struct { 
	XMLName xml.Name `xml:"ns:getDevicePoolResponse"` 
	GetDevicePoolRes
}

type RemoveDevicePool struct { 
	XMLName xml.Name `xml:"ns:removeDevicePool"` 
	NameAndGUIDRequest
}

type RemoveDevicePoolResponse struct { 
	XMLName xml.Name `xml:"ns:removeDevicePoolResponse"` 
	StandardResponse
}

type ListDevicePool struct { 
	XMLName xml.Name `xml:"ns:listDevicePool"` 
	ListDevicePoolReq
}

type ListDevicePoolResponse struct { 
	XMLName xml.Name `xml:"ns:listDevicePoolResponse"` 
	ListDevicePoolRes
}

type AddDeviceMobilityGroup struct { 
	XMLName xml.Name `xml:"ns:addDeviceMobilityGroup"` 
	AddDeviceMobilityGroupReq
}

type AddDeviceMobilityGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addDeviceMobilityGroupResponse"` 
	StandardResponse
}

type UpdateDeviceMobilityGroup struct { 
	XMLName xml.Name `xml:"ns:updateDeviceMobilityGroup"` 
	UpdateDeviceMobilityGroupReq
}

type UpdateDeviceMobilityGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateDeviceMobilityGroupResponse"` 
	StandardResponse
}

type GetDeviceMobilityGroup struct { 
	XMLName xml.Name `xml:"ns:getDeviceMobilityGroup"` 
	GetDeviceMobilityGroupReq
}

type GetDeviceMobilityGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getDeviceMobilityGroupResponse"` 
	GetDeviceMobilityGroupRes
}

type RemoveDeviceMobilityGroup struct { 
	XMLName xml.Name `xml:"ns:removeDeviceMobilityGroup"` 
	NameAndGUIDRequest
}

type RemoveDeviceMobilityGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeDeviceMobilityGroupResponse"` 
	StandardResponse
}

type ListDeviceMobilityGroup struct { 
	XMLName xml.Name `xml:"ns:listDeviceMobilityGroup"` 
	ListDeviceMobilityGroupReq
}

type ListDeviceMobilityGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listDeviceMobilityGroupResponse"` 
	ListDeviceMobilityGroupRes
}

type AddLocation struct { 
	XMLName xml.Name `xml:"ns:addLocation"` 
	AddLocationReq
}

type AddLocationResponse struct { 
	XMLName xml.Name `xml:"ns:addLocationResponse"` 
	StandardResponse
}

type UpdateLocation struct { 
	XMLName xml.Name `xml:"ns:updateLocation"` 
	UpdateLocationReq
}

type UpdateLocationResponse struct { 
	XMLName xml.Name `xml:"ns:updateLocationResponse"` 
	StandardResponse
}

type GetLocation struct { 
	XMLName xml.Name `xml:"ns:getLocation"` 
	GetLocationReq
}

type GetLocationResponse struct { 
	XMLName xml.Name `xml:"ns:getLocationResponse"` 
	GetLocationRes
}

type RemoveLocation struct { 
	XMLName xml.Name `xml:"ns:removeLocation"` 
	NameAndGUIDRequest
}

type RemoveLocationResponse struct { 
	XMLName xml.Name `xml:"ns:removeLocationResponse"` 
	StandardResponse
}

type ListLocation struct { 
	XMLName xml.Name `xml:"ns:listLocation"` 
	ListLocationReq
}

type ListLocationResponse struct { 
	XMLName xml.Name `xml:"ns:listLocationResponse"` 
	ListLocationRes
}

type AddSoftKeyTemplate struct { 
	XMLName xml.Name `xml:"ns:addSoftKeyTemplate"` 
	AddSoftKeyTemplateReq
}

type AddSoftKeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:addSoftKeyTemplateResponse"` 
	StandardResponse
}

type UpdateSoftKeyTemplate struct { 
	XMLName xml.Name `xml:"ns:updateSoftKeyTemplate"` 
	UpdateSoftKeyTemplateReq
}

type UpdateSoftKeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:updateSoftKeyTemplateResponse"` 
	StandardResponse
}

type GetSoftKeyTemplate struct { 
	XMLName xml.Name `xml:"ns:getSoftKeyTemplate"` 
	GetSoftKeyTemplateReq
}

type GetSoftKeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:getSoftKeyTemplateResponse"` 
	GetSoftKeyTemplateRes
}

type RemoveSoftKeyTemplate struct { 
	XMLName xml.Name `xml:"ns:removeSoftKeyTemplate"` 
	NameAndGUIDRequest
}

type RemoveSoftKeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:removeSoftKeyTemplateResponse"` 
	StandardResponse
}

type ListSoftKeyTemplate struct { 
	XMLName xml.Name `xml:"ns:listSoftKeyTemplate"` 
	ListSoftKeyTemplateReq
}

type ListSoftKeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:listSoftKeyTemplateResponse"` 
	ListSoftKeyTemplateRes
}

type AddTranscoder struct { 
	XMLName xml.Name `xml:"ns:addTranscoder"` 
	AddTranscoderReq
}

type AddTranscoderResponse struct { 
	XMLName xml.Name `xml:"ns:addTranscoderResponse"` 
	StandardResponse
}

type UpdateTranscoder struct { 
	XMLName xml.Name `xml:"ns:updateTranscoder"` 
	UpdateTranscoderReq
}

type UpdateTranscoderResponse struct { 
	XMLName xml.Name `xml:"ns:updateTranscoderResponse"` 
	StandardResponse
}

type GetTranscoder struct { 
	XMLName xml.Name `xml:"ns:getTranscoder"` 
	GetTranscoderReq
}

type GetTranscoderResponse struct { 
	XMLName xml.Name `xml:"ns:getTranscoderResponse"` 
	GetTranscoderRes
}

type RemoveTranscoder struct { 
	XMLName xml.Name `xml:"ns:removeTranscoder"` 
	NameAndGUIDRequest
}

type RemoveTranscoderResponse struct { 
	XMLName xml.Name `xml:"ns:removeTranscoderResponse"` 
	StandardResponse
}

type ListTranscoder struct { 
	XMLName xml.Name `xml:"ns:listTranscoder"` 
	ListTranscoderReq
}

type ListTranscoderResponse struct { 
	XMLName xml.Name `xml:"ns:listTranscoderResponse"` 
	ListTranscoderRes
}

type AddCommonDeviceConfig struct { 
	XMLName xml.Name `xml:"ns:addCommonDeviceConfig"` 
	AddCommonDeviceConfigReq
}

type AddCommonDeviceConfigResponse struct { 
	XMLName xml.Name `xml:"ns:addCommonDeviceConfigResponse"` 
	StandardResponse
}

type UpdateCommonDeviceConfig struct { 
	XMLName xml.Name `xml:"ns:updateCommonDeviceConfig"` 
	UpdateCommonDeviceConfigReq
}

type UpdateCommonDeviceConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateCommonDeviceConfigResponse"` 
	StandardResponse
}

type GetCommonDeviceConfig struct { 
	XMLName xml.Name `xml:"ns:getCommonDeviceConfig"` 
	GetCommonDeviceConfigReq
}

type GetCommonDeviceConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getCommonDeviceConfigResponse"` 
	GetCommonDeviceConfigRes
}

type RemoveCommonDeviceConfig struct { 
	XMLName xml.Name `xml:"ns:removeCommonDeviceConfig"` 
	NameAndGUIDRequest
}

type RemoveCommonDeviceConfigResponse struct { 
	XMLName xml.Name `xml:"ns:removeCommonDeviceConfigResponse"` 
	StandardResponse
}

type ListCommonDeviceConfig struct { 
	XMLName xml.Name `xml:"ns:listCommonDeviceConfig"` 
	ListCommonDeviceConfigReq
}

type ListCommonDeviceConfigResponse struct { 
	XMLName xml.Name `xml:"ns:listCommonDeviceConfigResponse"` 
	ListCommonDeviceConfigRes
}

type AddResourcePriorityNamespace struct { 
	XMLName xml.Name `xml:"ns:addResourcePriorityNamespace"` 
	AddResourcePriorityNamespaceReq
}

type AddResourcePriorityNamespaceResponse struct { 
	XMLName xml.Name `xml:"ns:addResourcePriorityNamespaceResponse"` 
	StandardResponse
}

type UpdateResourcePriorityNamespace struct { 
	XMLName xml.Name `xml:"ns:updateResourcePriorityNamespace"` 
	UpdateResourcePriorityNamespaceReq
}

type UpdateResourcePriorityNamespaceResponse struct { 
	XMLName xml.Name `xml:"ns:updateResourcePriorityNamespaceResponse"` 
	StandardResponse
}

type GetResourcePriorityNamespace struct { 
	XMLName xml.Name `xml:"ns:getResourcePriorityNamespace"` 
	GetResourcePriorityNamespaceReq
}

type GetResourcePriorityNamespaceResponse struct { 
	XMLName xml.Name `xml:"ns:getResourcePriorityNamespaceResponse"` 
	GetResourcePriorityNamespaceRes
}

type RemoveResourcePriorityNamespace struct { 
	XMLName xml.Name `xml:"ns:removeResourcePriorityNamespace"` 
	RemoveResourcePriorityNamespaceReq
}

type RemoveResourcePriorityNamespaceResponse struct { 
	XMLName xml.Name `xml:"ns:removeResourcePriorityNamespaceResponse"` 
	StandardResponse
}

type ListResourcePriorityNamespace struct { 
	XMLName xml.Name `xml:"ns:listResourcePriorityNamespace"` 
	ListResourcePriorityNamespaceReq
}

type ListResourcePriorityNamespaceResponse struct { 
	XMLName xml.Name `xml:"ns:listResourcePriorityNamespaceResponse"` 
	ListResourcePriorityNamespaceRes
}

type AddResourcePriorityNamespaceList struct { 
	XMLName xml.Name `xml:"ns:addResourcePriorityNamespaceList"` 
	AddResourcePriorityNamespaceListReq
}

type AddResourcePriorityNamespaceListResponse struct { 
	XMLName xml.Name `xml:"ns:addResourcePriorityNamespaceListResponse"` 
	StandardResponse
}

type UpdateResourcePriorityNamespaceList struct { 
	XMLName xml.Name `xml:"ns:updateResourcePriorityNamespaceList"` 
	UpdateResourcePriorityNamespaceListReq
}

type UpdateResourcePriorityNamespaceListResponse struct { 
	XMLName xml.Name `xml:"ns:updateResourcePriorityNamespaceListResponse"` 
	StandardResponse
}

type GetResourcePriorityNamespaceList struct { 
	XMLName xml.Name `xml:"ns:getResourcePriorityNamespaceList"` 
	GetResourcePriorityNamespaceListReq
}

type GetResourcePriorityNamespaceListResponse struct { 
	XMLName xml.Name `xml:"ns:getResourcePriorityNamespaceListResponse"` 
	GetResourcePriorityNamespaceListRes
}

type RemoveResourcePriorityNamespaceList struct { 
	XMLName xml.Name `xml:"ns:removeResourcePriorityNamespaceList"` 
	NameAndGUIDRequest
}

type RemoveResourcePriorityNamespaceListResponse struct { 
	XMLName xml.Name `xml:"ns:removeResourcePriorityNamespaceListResponse"` 
	StandardResponse
}

type ListResourcePriorityNamespaceList struct { 
	XMLName xml.Name `xml:"ns:listResourcePriorityNamespaceList"` 
	ListResourcePriorityNamespaceListReq
}

type ListResourcePriorityNamespaceListResponse struct { 
	XMLName xml.Name `xml:"ns:listResourcePriorityNamespaceListResponse"` 
	ListResourcePriorityNamespaceListRes
}

type AddDeviceMobility struct { 
	XMLName xml.Name `xml:"ns:addDeviceMobility"` 
	AddDeviceMobilityReq
}

type AddDeviceMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:addDeviceMobilityResponse"` 
	StandardResponse
}

type UpdateDeviceMobility struct { 
	XMLName xml.Name `xml:"ns:updateDeviceMobility"` 
	UpdateDeviceMobilityReq
}

type UpdateDeviceMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:updateDeviceMobilityResponse"` 
	StandardResponse
}

type GetDeviceMobility struct { 
	XMLName xml.Name `xml:"ns:getDeviceMobility"` 
	GetDeviceMobilityReq
}

type GetDeviceMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:getDeviceMobilityResponse"` 
	GetDeviceMobilityRes
}

type RemoveDeviceMobility struct { 
	XMLName xml.Name `xml:"ns:removeDeviceMobility"` 
	NameAndGUIDRequest
}

type RemoveDeviceMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:removeDeviceMobilityResponse"` 
	StandardResponse
}

type ListDeviceMobility struct { 
	XMLName xml.Name `xml:"ns:listDeviceMobility"` 
	ListDeviceMobilityReq
}

type ListDeviceMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:listDeviceMobilityResponse"` 
	ListDeviceMobilityRes
}

type AddCmcInfo struct { 
	XMLName xml.Name `xml:"ns:addCmcInfo"` 
	AddCmcInfoReq
}

type AddCmcInfoResponse struct { 
	XMLName xml.Name `xml:"ns:addCmcInfoResponse"` 
	StandardResponse
}

type UpdateCmcInfo struct { 
	XMLName xml.Name `xml:"ns:updateCmcInfo"` 
	UpdateCmcInfoReq
}

type UpdateCmcInfoResponse struct { 
	XMLName xml.Name `xml:"ns:updateCmcInfoResponse"` 
	StandardResponse
}

type GetCmcInfo struct { 
	XMLName xml.Name `xml:"ns:getCmcInfo"` 
	GetCmcInfoReq
}

type GetCmcInfoResponse struct { 
	XMLName xml.Name `xml:"ns:getCmcInfoResponse"` 
	GetCmcInfoRes
}

type RemoveCmcInfo struct { 
	XMLName xml.Name `xml:"ns:removeCmcInfo"` 
	RemoveCmcInfoReq
}

type RemoveCmcInfoResponse struct { 
	XMLName xml.Name `xml:"ns:removeCmcInfoResponse"` 
	StandardResponse
}

type ListCmcInfo struct { 
	XMLName xml.Name `xml:"ns:listCmcInfo"` 
	ListCmcInfoReq
}

type ListCmcInfoResponse struct { 
	XMLName xml.Name `xml:"ns:listCmcInfoResponse"` 
	ListCmcInfoRes
}

type AddCredentialPolicy struct { 
	XMLName xml.Name `xml:"ns:addCredentialPolicy"` 
	AddCredentialPolicyReq
}

type AddCredentialPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:addCredentialPolicyResponse"` 
	StandardResponse
}

type UpdateCredentialPolicy struct { 
	XMLName xml.Name `xml:"ns:updateCredentialPolicy"` 
	UpdateCredentialPolicyReq
}

type UpdateCredentialPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:updateCredentialPolicyResponse"` 
	StandardResponse
}

type GetCredentialPolicy struct { 
	XMLName xml.Name `xml:"ns:getCredentialPolicy"` 
	GetCredentialPolicyReq
}

type GetCredentialPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:getCredentialPolicyResponse"` 
	GetCredentialPolicyRes
}

type RemoveCredentialPolicy struct { 
	XMLName xml.Name `xml:"ns:removeCredentialPolicy"` 
	NameAndGUIDRequest
}

type RemoveCredentialPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:removeCredentialPolicyResponse"` 
	StandardResponse
}

type ListCredentialPolicy struct { 
	XMLName xml.Name `xml:"ns:listCredentialPolicy"` 
	ListCredentialPolicyReq
}

type ListCredentialPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:listCredentialPolicyResponse"` 
	ListCredentialPolicyRes
}

type AddFacInfo struct { 
	XMLName xml.Name `xml:"ns:addFacInfo"` 
	AddFacInfoReq
}

type AddFacInfoResponse struct { 
	XMLName xml.Name `xml:"ns:addFacInfoResponse"` 
	StandardResponse
}

type UpdateFacInfo struct { 
	XMLName xml.Name `xml:"ns:updateFacInfo"` 
	UpdateFacInfoReq
}

type UpdateFacInfoResponse struct { 
	XMLName xml.Name `xml:"ns:updateFacInfoResponse"` 
	StandardResponse
}

type GetFacInfo struct { 
	XMLName xml.Name `xml:"ns:getFacInfo"` 
	GetFacInfoReq
}

type GetFacInfoResponse struct { 
	XMLName xml.Name `xml:"ns:getFacInfoResponse"` 
	GetFacInfoRes
}

type RemoveFacInfo struct { 
	XMLName xml.Name `xml:"ns:removeFacInfo"` 
	NameAndGUIDRequest
}

type RemoveFacInfoResponse struct { 
	XMLName xml.Name `xml:"ns:removeFacInfoResponse"` 
	StandardResponse
}

type ListFacInfo struct { 
	XMLName xml.Name `xml:"ns:listFacInfo"` 
	ListFacInfoReq
}

type ListFacInfoResponse struct { 
	XMLName xml.Name `xml:"ns:listFacInfoResponse"` 
	ListFacInfoRes
}

type AddHuntList struct { 
	XMLName xml.Name `xml:"ns:addHuntList"` 
	AddHuntListReq
}

type AddHuntListResponse struct { 
	XMLName xml.Name `xml:"ns:addHuntListResponse"` 
	StandardResponse
}

type UpdateHuntList struct { 
	XMLName xml.Name `xml:"ns:updateHuntList"` 
	UpdateHuntListReq
}

type UpdateHuntListResponse struct { 
	XMLName xml.Name `xml:"ns:updateHuntListResponse"` 
	StandardResponse
}

type GetHuntList struct { 
	XMLName xml.Name `xml:"ns:getHuntList"` 
	GetHuntListReq
}

type GetHuntListResponse struct { 
	XMLName xml.Name `xml:"ns:getHuntListResponse"` 
	GetHuntListRes
}

type RemoveHuntList struct { 
	XMLName xml.Name `xml:"ns:removeHuntList"` 
	NameAndGUIDRequest
}

type RemoveHuntListResponse struct { 
	XMLName xml.Name `xml:"ns:removeHuntListResponse"` 
	StandardResponse
}

type ListHuntList struct { 
	XMLName xml.Name `xml:"ns:listHuntList"` 
	ListHuntListReq
}

type ListHuntListResponse struct { 
	XMLName xml.Name `xml:"ns:listHuntListResponse"` 
	ListHuntListRes
}

type AddIvrUserLocale struct { 
	XMLName xml.Name `xml:"ns:addIvrUserLocale"` 
	AddIvrUserLocaleReq
}

type AddIvrUserLocaleResponse struct { 
	XMLName xml.Name `xml:"ns:addIvrUserLocaleResponse"` 
	StandardResponse
}

type UpdateIvrUserLocale struct { 
	XMLName xml.Name `xml:"ns:updateIvrUserLocale"` 
	UpdateIvrUserLocaleReq
}

type UpdateIvrUserLocaleResponse struct { 
	XMLName xml.Name `xml:"ns:updateIvrUserLocaleResponse"` 
	StandardResponse
}

type GetIvrUserLocale struct { 
	XMLName xml.Name `xml:"ns:getIvrUserLocale"` 
	GetIvrUserLocaleReq
}

type GetIvrUserLocaleResponse struct { 
	XMLName xml.Name `xml:"ns:getIvrUserLocaleResponse"` 
	GetIvrUserLocaleRes
}

type RemoveIvrUserLocale struct { 
	XMLName xml.Name `xml:"ns:removeIvrUserLocale"` 
	RemoveIvrUserLocaleReq
}

type RemoveIvrUserLocaleResponse struct { 
	XMLName xml.Name `xml:"ns:removeIvrUserLocaleResponse"` 
	StandardResponse
}

type ListIvrUserLocale struct { 
	XMLName xml.Name `xml:"ns:listIvrUserLocale"` 
	ListIvrUserLocaleReq
}

type ListIvrUserLocaleResponse struct { 
	XMLName xml.Name `xml:"ns:listIvrUserLocaleResponse"` 
	ListIvrUserLocaleRes
}

type AddLineGroup struct { 
	XMLName xml.Name `xml:"ns:addLineGroup"` 
	AddLineGroupReq
}

type AddLineGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addLineGroupResponse"` 
	StandardResponse
}

type UpdateLineGroup struct { 
	XMLName xml.Name `xml:"ns:updateLineGroup"` 
	UpdateLineGroupReq
}

type UpdateLineGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateLineGroupResponse"` 
	StandardResponse
}

type GetLineGroup struct { 
	XMLName xml.Name `xml:"ns:getLineGroup"` 
	GetLineGroupReq
}

type GetLineGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getLineGroupResponse"` 
	GetLineGroupRes
}

type RemoveLineGroup struct { 
	XMLName xml.Name `xml:"ns:removeLineGroup"` 
	NameAndGUIDRequest
}

type RemoveLineGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeLineGroupResponse"` 
	StandardResponse
}

type ListLineGroup struct { 
	XMLName xml.Name `xml:"ns:listLineGroup"` 
	ListLineGroupReq
}

type ListLineGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listLineGroupResponse"` 
	ListLineGroupRes
}

type AddRecordingProfile struct { 
	XMLName xml.Name `xml:"ns:addRecordingProfile"` 
	AddRecordingProfileReq
}

type AddRecordingProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addRecordingProfileResponse"` 
	StandardResponse
}

type UpdateRecordingProfile struct { 
	XMLName xml.Name `xml:"ns:updateRecordingProfile"` 
	UpdateRecordingProfileReq
}

type UpdateRecordingProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateRecordingProfileResponse"` 
	StandardResponse
}

type GetRecordingProfile struct { 
	XMLName xml.Name `xml:"ns:getRecordingProfile"` 
	GetRecordingProfileReq
}

type GetRecordingProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getRecordingProfileResponse"` 
	GetRecordingProfileRes
}

type RemoveRecordingProfile struct { 
	XMLName xml.Name `xml:"ns:removeRecordingProfile"` 
	NameAndGUIDRequest
}

type RemoveRecordingProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeRecordingProfileResponse"` 
	StandardResponse
}

type ListRecordingProfile struct { 
	XMLName xml.Name `xml:"ns:listRecordingProfile"` 
	ListRecordingProfileReq
}

type ListRecordingProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listRecordingProfileResponse"` 
	ListRecordingProfileRes
}

type AddRouteFilter struct { 
	XMLName xml.Name `xml:"ns:addRouteFilter"` 
	AddRouteFilterReq
}

type AddRouteFilterResponse struct { 
	XMLName xml.Name `xml:"ns:addRouteFilterResponse"` 
	StandardResponse
}

type UpdateRouteFilter struct { 
	XMLName xml.Name `xml:"ns:updateRouteFilter"` 
	UpdateRouteFilterReq
}

type UpdateRouteFilterResponse struct { 
	XMLName xml.Name `xml:"ns:updateRouteFilterResponse"` 
	StandardResponse
}

type GetRouteFilter struct { 
	XMLName xml.Name `xml:"ns:getRouteFilter"` 
	GetRouteFilterReq
}

type GetRouteFilterResponse struct { 
	XMLName xml.Name `xml:"ns:getRouteFilterResponse"` 
	GetRouteFilterRes
}

type RemoveRouteFilter struct { 
	XMLName xml.Name `xml:"ns:removeRouteFilter"` 
	NameAndGUIDRequest
}

type RemoveRouteFilterResponse struct { 
	XMLName xml.Name `xml:"ns:removeRouteFilterResponse"` 
	StandardResponse
}

type ListRouteFilter struct { 
	XMLName xml.Name `xml:"ns:listRouteFilter"` 
	ListRouteFilterReq
}

type ListRouteFilterResponse struct { 
	XMLName xml.Name `xml:"ns:listRouteFilterResponse"` 
	ListRouteFilterRes
}

type AddCallManagerGroup struct { 
	XMLName xml.Name `xml:"ns:addCallManagerGroup"` 
	AddCallManagerGroupReq
}

type AddCallManagerGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addCallManagerGroupResponse"` 
	StandardResponse
}

type UpdateCallManagerGroup struct { 
	XMLName xml.Name `xml:"ns:updateCallManagerGroup"` 
	UpdateCallManagerGroupReq
}

type UpdateCallManagerGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallManagerGroupResponse"` 
	StandardResponse
}

type GetCallManagerGroup struct { 
	XMLName xml.Name `xml:"ns:getCallManagerGroup"` 
	GetCallManagerGroupReq
}

type GetCallManagerGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getCallManagerGroupResponse"` 
	GetCallManagerGroupRes
}

type RemoveCallManagerGroup struct { 
	XMLName xml.Name `xml:"ns:removeCallManagerGroup"` 
	NameAndGUIDRequest
}

type RemoveCallManagerGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeCallManagerGroupResponse"` 
	StandardResponse
}

type ListCallManagerGroup struct { 
	XMLName xml.Name `xml:"ns:listCallManagerGroup"` 
	ListCallManagerGroupReq
}

type ListCallManagerGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listCallManagerGroupResponse"` 
	ListCallManagerGroupRes
}

type AddUserGroup struct { 
	XMLName xml.Name `xml:"ns:addUserGroup"` 
	AddUserGroupReq
}

type AddUserGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addUserGroupResponse"` 
	StandardResponse
}

type UpdateUserGroup struct { 
	XMLName xml.Name `xml:"ns:updateUserGroup"` 
	UpdateUserGroupReq
}

type UpdateUserGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateUserGroupResponse"` 
	StandardResponse
}

type GetUserGroup struct { 
	XMLName xml.Name `xml:"ns:getUserGroup"` 
	GetUserGroupReq
}

type GetUserGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getUserGroupResponse"` 
	GetUserGroupRes
}

type RemoveUserGroup struct { 
	XMLName xml.Name `xml:"ns:removeUserGroup"` 
	NameAndGUIDRequest
}

type RemoveUserGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeUserGroupResponse"` 
	StandardResponse
}

type ListUserGroup struct { 
	XMLName xml.Name `xml:"ns:listUserGroup"` 
	ListUserGroupReq
}

type ListUserGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listUserGroupResponse"` 
	ListUserGroupRes
}

type GetDialPlan struct { 
	XMLName xml.Name `xml:"ns:getDialPlan"` 
	GetDialPlanReq
}

type GetDialPlanResponse struct { 
	XMLName xml.Name `xml:"ns:getDialPlanResponse"` 
	GetDialPlanRes
}

type ListDialPlan struct { 
	XMLName xml.Name `xml:"ns:listDialPlan"` 
	ListDialPlanReq
}

type ListDialPlanResponse struct { 
	XMLName xml.Name `xml:"ns:listDialPlanResponse"` 
	ListDialPlanRes
}

type GetDialPlanTag struct { 
	XMLName xml.Name `xml:"ns:getDialPlanTag"` 
	GetDialPlanTagReq
}

type GetDialPlanTagResponse struct { 
	XMLName xml.Name `xml:"ns:getDialPlanTagResponse"` 
	GetDialPlanTagRes
}

type ListDialPlanTag struct { 
	XMLName xml.Name `xml:"ns:listDialPlanTag"` 
	ListDialPlanTagReq
}

type ListDialPlanTagResponse struct { 
	XMLName xml.Name `xml:"ns:listDialPlanTagResponse"` 
	ListDialPlanTagRes
}

type GetDdi struct { 
	XMLName xml.Name `xml:"ns:getDdi"` 
	GetDdiReq
}

type GetDdiResponse struct { 
	XMLName xml.Name `xml:"ns:getDdiResponse"` 
	GetDdiRes
}

type ListDdi struct { 
	XMLName xml.Name `xml:"ns:listDdi"` 
	ListDdiReq
}

type ListDdiResponse struct { 
	XMLName xml.Name `xml:"ns:listDdiResponse"` 
	ListDdiRes
}

type GetMobileSmartClientProfile struct { 
	XMLName xml.Name `xml:"ns:getMobileSmartClientProfile"` 
	GetMobileSmartClientProfileReq
}

type GetMobileSmartClientProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getMobileSmartClientProfileResponse"` 
	GetMobileSmartClientProfileRes
}

type ListMobileSmartClientProfile struct { 
	XMLName xml.Name `xml:"ns:listMobileSmartClientProfile"` 
	ListMobileSmartClientProfileReq
}

type ListMobileSmartClientProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listMobileSmartClientProfileResponse"` 
	ListMobileSmartClientProfileRes
}

type UpdateProcessNodeService struct { 
	XMLName xml.Name `xml:"ns:updateProcessNodeService"` 
	UpdateProcessNodeServiceReq
}

type UpdateProcessNodeServiceResponse struct { 
	XMLName xml.Name `xml:"ns:updateProcessNodeServiceResponse"` 
	StandardResponse
}

type GetProcessNodeService struct { 
	XMLName xml.Name `xml:"ns:getProcessNodeService"` 
	GetProcessNodeServiceReq
}

type GetProcessNodeServiceResponse struct { 
	XMLName xml.Name `xml:"ns:getProcessNodeServiceResponse"` 
	GetProcessNodeServiceRes
}

type ListProcessNodeService struct { 
	XMLName xml.Name `xml:"ns:listProcessNodeService"` 
	ListProcessNodeServiceReq
}

type ListProcessNodeServiceResponse struct { 
	XMLName xml.Name `xml:"ns:listProcessNodeServiceResponse"` 
	ListProcessNodeServiceRes
}

type UpdateMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:updateMohAudioSource"` 
	UpdateMohAudioSourceReq
}

type UpdateMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:updateMohAudioSourceResponse"` 
	StandardResponse
}

type GetMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:getMohAudioSource"` 
	GetMohAudioSourceReq
}

type GetMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:getMohAudioSourceResponse"` 
	GetMohAudioSourceRes
}

type RemoveMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:removeMohAudioSource"` 
	RemoveMohAudioSourceReq
}

type RemoveMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:removeMohAudioSourceResponse"` 
	StandardResponse
}

type ListMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:listMohAudioSource"` 
	ListMohAudioSourceReq
}

type ListMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:listMohAudioSourceResponse"` 
	ListMohAudioSourceRes
}

type AddDhcpServer struct { 
	XMLName xml.Name `xml:"ns:addDhcpServer"` 
	AddDhcpServerReq
}

type AddDhcpServerResponse struct { 
	XMLName xml.Name `xml:"ns:addDhcpServerResponse"` 
	StandardResponse
}

type UpdateDhcpServer struct { 
	XMLName xml.Name `xml:"ns:updateDhcpServer"` 
	UpdateDhcpServerReq
}

type UpdateDhcpServerResponse struct { 
	XMLName xml.Name `xml:"ns:updateDhcpServerResponse"` 
	StandardResponse
}

type GetDhcpServer struct { 
	XMLName xml.Name `xml:"ns:getDhcpServer"` 
	GetDhcpServerReq
}

type GetDhcpServerResponse struct { 
	XMLName xml.Name `xml:"ns:getDhcpServerResponse"` 
	GetDhcpServerRes
}

type RemoveDhcpServer struct { 
	XMLName xml.Name `xml:"ns:removeDhcpServer"` 
	RemoveDhcpServerReq
}

type RemoveDhcpServerResponse struct { 
	XMLName xml.Name `xml:"ns:removeDhcpServerResponse"` 
	StandardResponse
}

type ListDhcpServer struct { 
	XMLName xml.Name `xml:"ns:listDhcpServer"` 
	ListDhcpServerReq
}

type ListDhcpServerResponse struct { 
	XMLName xml.Name `xml:"ns:listDhcpServerResponse"` 
	ListDhcpServerRes
}

type AddDhcpSubnet struct { 
	XMLName xml.Name `xml:"ns:addDhcpSubnet"` 
	AddDhcpSubnetReq
}

type AddDhcpSubnetResponse struct { 
	XMLName xml.Name `xml:"ns:addDhcpSubnetResponse"` 
	StandardResponse
}

type UpdateDhcpSubnet struct { 
	XMLName xml.Name `xml:"ns:updateDhcpSubnet"` 
	UpdateDhcpSubnetReq
}

type UpdateDhcpSubnetResponse struct { 
	XMLName xml.Name `xml:"ns:updateDhcpSubnetResponse"` 
	StandardResponse
}

type GetDhcpSubnet struct { 
	XMLName xml.Name `xml:"ns:getDhcpSubnet"` 
	GetDhcpSubnetReq
}

type GetDhcpSubnetResponse struct { 
	XMLName xml.Name `xml:"ns:getDhcpSubnetResponse"` 
	GetDhcpSubnetRes
}

type RemoveDhcpSubnet struct { 
	XMLName xml.Name `xml:"ns:removeDhcpSubnet"` 
	RemoveDhcpSubnetReq
}

type RemoveDhcpSubnetResponse struct { 
	XMLName xml.Name `xml:"ns:removeDhcpSubnetResponse"` 
	StandardResponse
}

type ListDhcpSubnet struct { 
	XMLName xml.Name `xml:"ns:listDhcpSubnet"` 
	ListDhcpSubnetReq
}

type ListDhcpSubnetResponse struct { 
	XMLName xml.Name `xml:"ns:listDhcpSubnetResponse"` 
	ListDhcpSubnetRes
}

type AddCallPark struct { 
	XMLName xml.Name `xml:"ns:addCallPark"` 
	AddCallParkReq
}

type AddCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:addCallParkResponse"` 
	StandardResponse
}

type UpdateCallPark struct { 
	XMLName xml.Name `xml:"ns:updateCallPark"` 
	UpdateCallParkReq
}

type UpdateCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallParkResponse"` 
	StandardResponse
}

type GetCallPark struct { 
	XMLName xml.Name `xml:"ns:getCallPark"` 
	GetCallParkReq
}

type GetCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:getCallParkResponse"` 
	GetCallParkRes
}

type RemoveCallPark struct { 
	XMLName xml.Name `xml:"ns:removeCallPark"` 
	RemoveCallParkReq
}

type RemoveCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:removeCallParkResponse"` 
	StandardResponse
}

type ListCallPark struct { 
	XMLName xml.Name `xml:"ns:listCallPark"` 
	ListCallParkReq
}

type ListCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:listCallParkResponse"` 
	ListCallParkRes
}

type AddDirectedCallPark struct { 
	XMLName xml.Name `xml:"ns:addDirectedCallPark"` 
	AddDirectedCallParkReq
}

type AddDirectedCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:addDirectedCallParkResponse"` 
	StandardResponse
}

type UpdateDirectedCallPark struct { 
	XMLName xml.Name `xml:"ns:updateDirectedCallPark"` 
	UpdateDirectedCallParkReq
}

type UpdateDirectedCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:updateDirectedCallParkResponse"` 
	StandardResponse
}

type GetDirectedCallPark struct { 
	XMLName xml.Name `xml:"ns:getDirectedCallPark"` 
	GetDirectedCallParkReq
}

type GetDirectedCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:getDirectedCallParkResponse"` 
	GetDirectedCallParkRes
}

type RemoveDirectedCallPark struct { 
	XMLName xml.Name `xml:"ns:removeDirectedCallPark"` 
	RemoveDirectedCallParkReq
}

type RemoveDirectedCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:removeDirectedCallParkResponse"` 
	StandardResponse
}

type ListDirectedCallPark struct { 
	XMLName xml.Name `xml:"ns:listDirectedCallPark"` 
	ListDirectedCallParkReq
}

type ListDirectedCallParkResponse struct { 
	XMLName xml.Name `xml:"ns:listDirectedCallParkResponse"` 
	ListDirectedCallParkRes
}

type AddMeetMe struct { 
	XMLName xml.Name `xml:"ns:addMeetMe"` 
	AddMeetMeReq
}

type AddMeetMeResponse struct { 
	XMLName xml.Name `xml:"ns:addMeetMeResponse"` 
	StandardResponse
}

type UpdateMeetMe struct { 
	XMLName xml.Name `xml:"ns:updateMeetMe"` 
	UpdateMeetMeReq
}

type UpdateMeetMeResponse struct { 
	XMLName xml.Name `xml:"ns:updateMeetMeResponse"` 
	StandardResponse
}

type GetMeetMe struct { 
	XMLName xml.Name `xml:"ns:getMeetMe"` 
	GetMeetMeReq
}

type GetMeetMeResponse struct { 
	XMLName xml.Name `xml:"ns:getMeetMeResponse"` 
	GetMeetMeRes
}

type RemoveMeetMe struct { 
	XMLName xml.Name `xml:"ns:removeMeetMe"` 
	RemoveMeetMeReq
}

type RemoveMeetMeResponse struct { 
	XMLName xml.Name `xml:"ns:removeMeetMeResponse"` 
	StandardResponse
}

type ListMeetMe struct { 
	XMLName xml.Name `xml:"ns:listMeetMe"` 
	ListMeetMeReq
}

type ListMeetMeResponse struct { 
	XMLName xml.Name `xml:"ns:listMeetMeResponse"` 
	ListMeetMeRes
}

type AddMobileVoiceAccess struct { 
	XMLName xml.Name `xml:"ns:addMobileVoiceAccess"` 
	AddMobileVoiceAccessReq
}

type AddMobileVoiceAccessResponse struct { 
	XMLName xml.Name `xml:"ns:addMobileVoiceAccessResponse"` 
	StandardResponse
}

type UpdateMobileVoiceAccess struct { 
	XMLName xml.Name `xml:"ns:updateMobileVoiceAccess"` 
	UpdateMobileVoiceAccessReq
}

type UpdateMobileVoiceAccessResponse struct { 
	XMLName xml.Name `xml:"ns:updateMobileVoiceAccessResponse"` 
	StandardResponse
}

type GetMobileVoiceAccess struct { 
	XMLName xml.Name `xml:"ns:getMobileVoiceAccess"` 
	GetMobileVoiceAccessReq
}

type GetMobileVoiceAccessResponse struct { 
	XMLName xml.Name `xml:"ns:getMobileVoiceAccessResponse"` 
	GetMobileVoiceAccessRes
}

type RemoveMobileVoiceAccess struct { 
	XMLName xml.Name `xml:"ns:removeMobileVoiceAccess"` 
	RemoveMobileVoiceAccessReq
}

type RemoveMobileVoiceAccessResponse struct { 
	XMLName xml.Name `xml:"ns:removeMobileVoiceAccessResponse"` 
	StandardResponse
}

type AddRouteList struct { 
	XMLName xml.Name `xml:"ns:addRouteList"` 
	AddRouteListReq
}

type AddRouteListResponse struct { 
	XMLName xml.Name `xml:"ns:addRouteListResponse"` 
	StandardResponse
}

type UpdateRouteList struct { 
	XMLName xml.Name `xml:"ns:updateRouteList"` 
	UpdateRouteListReq
}

type UpdateRouteListResponse struct { 
	XMLName xml.Name `xml:"ns:updateRouteListResponse"` 
	StandardResponse
}

type GetRouteList struct { 
	XMLName xml.Name `xml:"ns:getRouteList"` 
	GetRouteListReq
}

type GetRouteListResponse struct { 
	XMLName xml.Name `xml:"ns:getRouteListResponse"` 
	GetRouteListRes
}

type RemoveRouteList struct { 
	XMLName xml.Name `xml:"ns:removeRouteList"` 
	NameAndGUIDRequest
}

type RemoveRouteListResponse struct { 
	XMLName xml.Name `xml:"ns:removeRouteListResponse"` 
	StandardResponse
}

type ListRouteList struct { 
	XMLName xml.Name `xml:"ns:listRouteList"` 
	ListRouteListReq
}

type ListRouteListResponse struct { 
	XMLName xml.Name `xml:"ns:listRouteListResponse"` 
	ListRouteListRes
}

type AddUser struct { 
	XMLName xml.Name `xml:"ns:addUser"` 
	AddUserReq
}

type AddUserResponse struct { 
	XMLName xml.Name `xml:"ns:addUserResponse"` 
	StandardResponse
}

type UpdateUser struct { 
	XMLName xml.Name `xml:"ns:updateUser"` 
	UpdateUserReq
}

type UpdateUserResponse struct { 
	XMLName xml.Name `xml:"ns:updateUserResponse"` 
	StandardResponse
}

type GetUser struct { 
	XMLName xml.Name `xml:"ns:getUser"` 
	GetUserReq
}

type GetUserResponse struct { 
	XMLName xml.Name `xml:"ns:getUserResponse"` 
	GetUserRes
}

type RemoveUser struct { 
	XMLName xml.Name `xml:"ns:removeUser"` 
	RemoveUserReq
}

type RemoveUserResponse struct { 
	XMLName xml.Name `xml:"ns:removeUserResponse"` 
	StandardResponse
}

type ListUser struct { 
	XMLName xml.Name `xml:"ns:listUser"` 
	ListUserReq
}

type ListUserResponse struct { 
	XMLName xml.Name `xml:"ns:listUserResponse"` 
	ListUserRes
}

type UpdateLicenseCapabilities struct { 
	XMLName xml.Name `xml:"ns:updateLicenseCapabilities"` 
	UpdateLicenseCapabilitiesReq
}

type UpdateLicenseCapabilitiesResponse struct { 
	XMLName xml.Name `xml:"ns:updateLicenseCapabilitiesResponse"` 
	StandardResponse
}

type GetLicenseCapabilities struct { 
	XMLName xml.Name `xml:"ns:getLicenseCapabilities"` 
	GetLicenseCapabilitiesReq
}

type GetLicenseCapabilitiesResponse struct { 
	XMLName xml.Name `xml:"ns:getLicenseCapabilitiesResponse"` 
	GetLicenseCapabilitiesRes
}

type ListLicenseCapabilities struct { 
	XMLName xml.Name `xml:"ns:listLicenseCapabilities"` 
	ListLicenseCapabilitiesReq
}

type ListLicenseCapabilitiesResponse struct { 
	XMLName xml.Name `xml:"ns:listLicenseCapabilitiesResponse"` 
	ListLicenseCapabilitiesRes
}

type AddAppUser struct { 
	XMLName xml.Name `xml:"ns:addAppUser"` 
	AddAppUserReq
}

type AddAppUserResponse struct { 
	XMLName xml.Name `xml:"ns:addAppUserResponse"` 
	StandardResponse
}

type UpdateAppUser struct { 
	XMLName xml.Name `xml:"ns:updateAppUser"` 
	UpdateAppUserReq
}

type UpdateAppUserResponse struct { 
	XMLName xml.Name `xml:"ns:updateAppUserResponse"` 
	StandardResponse
}

type GetAppUser struct { 
	XMLName xml.Name `xml:"ns:getAppUser"` 
	GetAppUserReq
}

type GetAppUserResponse struct { 
	XMLName xml.Name `xml:"ns:getAppUserResponse"` 
	GetAppUserRes
}

type RemoveAppUser struct { 
	XMLName xml.Name `xml:"ns:removeAppUser"` 
	RemoveAppUserReq
}

type RemoveAppUserResponse struct { 
	XMLName xml.Name `xml:"ns:removeAppUserResponse"` 
	StandardResponse
}

type ListAppUser struct { 
	XMLName xml.Name `xml:"ns:listAppUser"` 
	ListAppUserReq
}

type ListAppUserResponse struct { 
	XMLName xml.Name `xml:"ns:listAppUserResponse"` 
	ListAppUserRes
}

type AddSipRealm struct { 
	XMLName xml.Name `xml:"ns:addSipRealm"` 
	AddSipRealmReq
}

type AddSipRealmResponse struct { 
	XMLName xml.Name `xml:"ns:addSipRealmResponse"` 
	StandardResponse
}

type UpdateSipRealm struct { 
	XMLName xml.Name `xml:"ns:updateSipRealm"` 
	UpdateSipRealmReq
}

type UpdateSipRealmResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipRealmResponse"` 
	StandardResponse
}

type GetSipRealm struct { 
	XMLName xml.Name `xml:"ns:getSipRealm"` 
	GetSipRealmReq
}

type GetSipRealmResponse struct { 
	XMLName xml.Name `xml:"ns:getSipRealmResponse"` 
	GetSipRealmRes
}

type RemoveSipRealm struct { 
	XMLName xml.Name `xml:"ns:removeSipRealm"` 
	RemoveSipRealmReq
}

type RemoveSipRealmResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipRealmResponse"` 
	StandardResponse
}

type ListSipRealm struct { 
	XMLName xml.Name `xml:"ns:listSipRealm"` 
	ListSipRealmReq
}

type ListSipRealmResponse struct { 
	XMLName xml.Name `xml:"ns:listSipRealmResponse"` 
	ListSipRealmRes
}

type AddPhoneNtp struct { 
	XMLName xml.Name `xml:"ns:addPhoneNtp"` 
	AddPhoneNtpReq
}

type AddPhoneNtpResponse struct { 
	XMLName xml.Name `xml:"ns:addPhoneNtpResponse"` 
	StandardResponse
}

type UpdatePhoneNtp struct { 
	XMLName xml.Name `xml:"ns:updatePhoneNtp"` 
	UpdatePhoneNtpReq
}

type UpdatePhoneNtpResponse struct { 
	XMLName xml.Name `xml:"ns:updatePhoneNtpResponse"` 
	StandardResponse
}

type GetPhoneNtp struct { 
	XMLName xml.Name `xml:"ns:getPhoneNtp"` 
	GetPhoneNtpReq
}

type GetPhoneNtpResponse struct { 
	XMLName xml.Name `xml:"ns:getPhoneNtpResponse"` 
	GetPhoneNtpRes
}

type RemovePhoneNtp struct { 
	XMLName xml.Name `xml:"ns:removePhoneNtp"` 
	RemovePhoneNtpReq
}

type RemovePhoneNtpResponse struct { 
	XMLName xml.Name `xml:"ns:removePhoneNtpResponse"` 
	StandardResponse
}

type ListPhoneNtp struct { 
	XMLName xml.Name `xml:"ns:listPhoneNtp"` 
	ListPhoneNtpReq
}

type ListPhoneNtpResponse struct { 
	XMLName xml.Name `xml:"ns:listPhoneNtpResponse"` 
	ListPhoneNtpRes
}

type AddDateTimeGroup struct { 
	XMLName xml.Name `xml:"ns:addDateTimeGroup"` 
	AddDateTimeGroupReq
}

type AddDateTimeGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addDateTimeGroupResponse"` 
	StandardResponse
}

type UpdateDateTimeGroup struct { 
	XMLName xml.Name `xml:"ns:updateDateTimeGroup"` 
	UpdateDateTimeGroupReq
}

type UpdateDateTimeGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateDateTimeGroupResponse"` 
	StandardResponse
}

type GetDateTimeGroup struct { 
	XMLName xml.Name `xml:"ns:getDateTimeGroup"` 
	GetDateTimeGroupReq
}

type GetDateTimeGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getDateTimeGroupResponse"` 
	GetDateTimeGroupRes
}

type RemoveDateTimeGroup struct { 
	XMLName xml.Name `xml:"ns:removeDateTimeGroup"` 
	NameAndGUIDRequest
}

type RemoveDateTimeGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeDateTimeGroupResponse"` 
	StandardResponse
}

type ListDateTimeGroup struct { 
	XMLName xml.Name `xml:"ns:listDateTimeGroup"` 
	ListDateTimeGroupReq
}

type ListDateTimeGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listDateTimeGroupResponse"` 
	ListDateTimeGroupRes
}

type AddPresenceGroup struct { 
	XMLName xml.Name `xml:"ns:addPresenceGroup"` 
	AddPresenceGroupReq
}

type AddPresenceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addPresenceGroupResponse"` 
	StandardResponse
}

type UpdatePresenceGroup struct { 
	XMLName xml.Name `xml:"ns:updatePresenceGroup"` 
	UpdatePresenceGroupReq
}

type UpdatePresenceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updatePresenceGroupResponse"` 
	StandardResponse
}

type GetPresenceGroup struct { 
	XMLName xml.Name `xml:"ns:getPresenceGroup"` 
	GetPresenceGroupReq
}

type GetPresenceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getPresenceGroupResponse"` 
	GetPresenceGroupRes
}

type RemovePresenceGroup struct { 
	XMLName xml.Name `xml:"ns:removePresenceGroup"` 
	NameAndGUIDRequest
}

type RemovePresenceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removePresenceGroupResponse"` 
	StandardResponse
}

type ListPresenceGroup struct { 
	XMLName xml.Name `xml:"ns:listPresenceGroup"` 
	ListPresenceGroupReq
}

type ListPresenceGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listPresenceGroupResponse"` 
	ListPresenceGroupRes
}

type AddGeoLocation struct { 
	XMLName xml.Name `xml:"ns:addGeoLocation"` 
	AddGeoLocationReq
}

type AddGeoLocationResponse struct { 
	XMLName xml.Name `xml:"ns:addGeoLocationResponse"` 
	StandardResponse
}

type UpdateGeoLocation struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocation"` 
	UpdateGeoLocationReq
}

type UpdateGeoLocationResponse struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocationResponse"` 
	StandardResponse
}

type GetGeoLocation struct { 
	XMLName xml.Name `xml:"ns:getGeoLocation"` 
	GetGeoLocationReq
}

type GetGeoLocationResponse struct { 
	XMLName xml.Name `xml:"ns:getGeoLocationResponse"` 
	GetGeoLocationRes
}

type RemoveGeoLocation struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocation"` 
	NameAndGUIDRequest
}

type RemoveGeoLocationResponse struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocationResponse"` 
	StandardResponse
}

type ListGeoLocation struct { 
	XMLName xml.Name `xml:"ns:listGeoLocation"` 
	ListGeoLocationReq
}

type ListGeoLocationResponse struct { 
	XMLName xml.Name `xml:"ns:listGeoLocationResponse"` 
	ListGeoLocationRes
}

type AddSrst struct { 
	XMLName xml.Name `xml:"ns:addSrst"` 
	AddSrstReq
}

type AddSrstResponse struct { 
	XMLName xml.Name `xml:"ns:addSrstResponse"` 
	StandardResponse
}

type UpdateSrst struct { 
	XMLName xml.Name `xml:"ns:updateSrst"` 
	UpdateSrstReq
}

type UpdateSrstResponse struct { 
	XMLName xml.Name `xml:"ns:updateSrstResponse"` 
	StandardResponse
}

type GetSrst struct { 
	XMLName xml.Name `xml:"ns:getSrst"` 
	GetSrstReq
}

type GetSrstResponse struct { 
	XMLName xml.Name `xml:"ns:getSrstResponse"` 
	GetSrstRes
}

type RemoveSrst struct { 
	XMLName xml.Name `xml:"ns:removeSrst"` 
	NameAndGUIDRequest
}

type RemoveSrstResponse struct { 
	XMLName xml.Name `xml:"ns:removeSrstResponse"` 
	StandardResponse
}

type ListSrst struct { 
	XMLName xml.Name `xml:"ns:listSrst"` 
	ListSrstReq
}

type ListSrstResponse struct { 
	XMLName xml.Name `xml:"ns:listSrstResponse"` 
	ListSrstRes
}

type AddMlppDomain struct { 
	XMLName xml.Name `xml:"ns:addMlppDomain"` 
	AddMlppDomainReq
}

type AddMlppDomainResponse struct { 
	XMLName xml.Name `xml:"ns:addMlppDomainResponse"` 
	StandardResponse
}

type UpdateMlppDomain struct { 
	XMLName xml.Name `xml:"ns:updateMlppDomain"` 
	UpdateMlppDomainReq
}

type UpdateMlppDomainResponse struct { 
	XMLName xml.Name `xml:"ns:updateMlppDomainResponse"` 
	StandardResponse
}

type GetMlppDomain struct { 
	XMLName xml.Name `xml:"ns:getMlppDomain"` 
	GetMlppDomainReq
}

type GetMlppDomainResponse struct { 
	XMLName xml.Name `xml:"ns:getMlppDomainResponse"` 
	GetMlppDomainRes
}

type RemoveMlppDomain struct { 
	XMLName xml.Name `xml:"ns:removeMlppDomain"` 
	RemoveMlppDomainReq
}

type RemoveMlppDomainResponse struct { 
	XMLName xml.Name `xml:"ns:removeMlppDomainResponse"` 
	StandardResponse
}

type ListMlppDomain struct { 
	XMLName xml.Name `xml:"ns:listMlppDomain"` 
	ListMlppDomainReq
}

type ListMlppDomainResponse struct { 
	XMLName xml.Name `xml:"ns:listMlppDomainResponse"` 
	ListMlppDomainRes
}

type AddCumaServerSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:addCumaServerSecurityProfile"` 
	AddCumaServerSecurityProfileReq
}

type AddCumaServerSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addCumaServerSecurityProfileResponse"` 
	StandardResponse
}

type UpdateCumaServerSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:updateCumaServerSecurityProfile"` 
	UpdateCumaServerSecurityProfileReq
}

type UpdateCumaServerSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateCumaServerSecurityProfileResponse"` 
	StandardResponse
}

type GetCumaServerSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:getCumaServerSecurityProfile"` 
	GetCumaServerSecurityProfileReq
}

type GetCumaServerSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getCumaServerSecurityProfileResponse"` 
	GetCumaServerSecurityProfileRes
}

type RemoveCumaServerSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:removeCumaServerSecurityProfile"` 
	NameAndGUIDRequest
}

type RemoveCumaServerSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeCumaServerSecurityProfileResponse"` 
	StandardResponse
}

type ListCumaServerSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:listCumaServerSecurityProfile"` 
	ListCumaServerSecurityProfileReq
}

type ListCumaServerSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listCumaServerSecurityProfileResponse"` 
	ListCumaServerSecurityProfileRes
}

type AddApplicationServer struct { 
	XMLName xml.Name `xml:"ns:addApplicationServer"` 
	AddApplicationServerReq
}

type AddApplicationServerResponse struct { 
	XMLName xml.Name `xml:"ns:addApplicationServerResponse"` 
	StandardResponse
}

type UpdateApplicationServer struct { 
	XMLName xml.Name `xml:"ns:updateApplicationServer"` 
	UpdateApplicationServerReq
}

type UpdateApplicationServerResponse struct { 
	XMLName xml.Name `xml:"ns:updateApplicationServerResponse"` 
	StandardResponse
}

type GetApplicationServer struct { 
	XMLName xml.Name `xml:"ns:getApplicationServer"` 
	GetApplicationServerReq
}

type GetApplicationServerResponse struct { 
	XMLName xml.Name `xml:"ns:getApplicationServerResponse"` 
	GetApplicationServerRes
}

type RemoveApplicationServer struct { 
	XMLName xml.Name `xml:"ns:removeApplicationServer"` 
	RemoveApplicationServerReq
}

type RemoveApplicationServerResponse struct { 
	XMLName xml.Name `xml:"ns:removeApplicationServerResponse"` 
	StandardResponse
}

type ListApplicationServer struct { 
	XMLName xml.Name `xml:"ns:listApplicationServer"` 
	ListApplicationServerReq
}

type ListApplicationServerResponse struct { 
	XMLName xml.Name `xml:"ns:listApplicationServerResponse"` 
	ListApplicationServerRes
}

type AddApplicationUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:addApplicationUserCapfProfile"` 
	AddApplicationUserCapfProfileReq
}

type AddApplicationUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addApplicationUserCapfProfileResponse"` 
	StandardResponse
}

type UpdateApplicationUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:updateApplicationUserCapfProfile"` 
	UpdateApplicationUserCapfProfileReq
}

type UpdateApplicationUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateApplicationUserCapfProfileResponse"` 
	StandardResponse
}

type GetApplicationUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:getApplicationUserCapfProfile"` 
	GetApplicationUserCapfProfileReq
}

type GetApplicationUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getApplicationUserCapfProfileResponse"` 
	GetApplicationUserCapfProfileRes
}

type RemoveApplicationUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:removeApplicationUserCapfProfile"` 
	RemoveApplicationUserCapfProfileReq
}

type RemoveApplicationUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeApplicationUserCapfProfileResponse"` 
	StandardResponse
}

type ListApplicationUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:listApplicationUserCapfProfile"` 
	ListApplicationUserCapfProfileReq
}

type ListApplicationUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listApplicationUserCapfProfileResponse"` 
	ListApplicationUserCapfProfileRes
}

type AddEndUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:addEndUserCapfProfile"` 
	AddEndUserCapfProfileReq
}

type AddEndUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addEndUserCapfProfileResponse"` 
	StandardResponse
}

type UpdateEndUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:updateEndUserCapfProfile"` 
	UpdateEndUserCapfProfileReq
}

type UpdateEndUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateEndUserCapfProfileResponse"` 
	StandardResponse
}

type GetEndUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:getEndUserCapfProfile"` 
	GetEndUserCapfProfileReq
}

type GetEndUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getEndUserCapfProfileResponse"` 
	GetEndUserCapfProfileRes
}

type RemoveEndUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:removeEndUserCapfProfile"` 
	RemoveEndUserCapfProfileReq
}

type RemoveEndUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeEndUserCapfProfileResponse"` 
	StandardResponse
}

type ListEndUserCapfProfile struct { 
	XMLName xml.Name `xml:"ns:listEndUserCapfProfile"` 
	ListEndUserCapfProfileReq
}

type ListEndUserCapfProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listEndUserCapfProfileResponse"` 
	ListEndUserCapfProfileRes
}

type UpdateServiceParameter struct { 
	XMLName xml.Name `xml:"ns:updateServiceParameter"` 
	UpdateServiceParameterReq
}

type UpdateServiceParameterResponse struct { 
	XMLName xml.Name `xml:"ns:updateServiceParameterResponse"` 
	StandardResponse
}

type GetServiceParameter struct { 
	XMLName xml.Name `xml:"ns:getServiceParameter"` 
	GetServiceParameterReq
}

type GetServiceParameterResponse struct { 
	XMLName xml.Name `xml:"ns:getServiceParameterResponse"` 
	GetServiceParameterRes
}

type AddUserPhoneAssociation struct { 
	XMLName xml.Name `xml:"ns:addUserPhoneAssociation"` 
	AddUserPhoneAssociationReq
}

type AddUserPhoneAssociationResponse struct { 
	XMLName xml.Name `xml:"ns:addUserPhoneAssociationResponse"` 
	StandardResponse
}

type AddGeoLocationFilter struct { 
	XMLName xml.Name `xml:"ns:addGeoLocationFilter"` 
	AddGeoLocationFilterReq
}

type AddGeoLocationFilterResponse struct { 
	XMLName xml.Name `xml:"ns:addGeoLocationFilterResponse"` 
	StandardResponse
}

type UpdateGeoLocationFilter struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocationFilter"` 
	UpdateGeoLocationFilterReq
}

type UpdateGeoLocationFilterResponse struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocationFilterResponse"` 
	StandardResponse
}

type GetGeoLocationFilter struct { 
	XMLName xml.Name `xml:"ns:getGeoLocationFilter"` 
	GetGeoLocationFilterReq
}

type GetGeoLocationFilterResponse struct { 
	XMLName xml.Name `xml:"ns:getGeoLocationFilterResponse"` 
	GetGeoLocationFilterRes
}

type RemoveGeoLocationFilter struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocationFilter"` 
	NameAndGUIDRequest
}

type RemoveGeoLocationFilterResponse struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocationFilterResponse"` 
	StandardResponse
}

type ListGeoLocationFilter struct { 
	XMLName xml.Name `xml:"ns:listGeoLocationFilter"` 
	ListGeoLocationFilterReq
}

type ListGeoLocationFilterResponse struct { 
	XMLName xml.Name `xml:"ns:listGeoLocationFilterResponse"` 
	ListGeoLocationFilterRes
}

type AddVoiceMailProfile struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailProfile"` 
	AddVoiceMailProfileReq
}

type AddVoiceMailProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailProfileResponse"` 
	StandardResponse
}

type UpdateVoiceMailProfile struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailProfile"` 
	UpdateVoiceMailProfileReq
}

type UpdateVoiceMailProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailProfileResponse"` 
	StandardResponse
}

type GetVoiceMailProfile struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailProfile"` 
	GetVoiceMailProfileReq
}

type GetVoiceMailProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailProfileResponse"` 
	GetVoiceMailProfileRes
}

type RemoveVoiceMailProfile struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailProfile"` 
	NameAndGUIDRequest
}

type RemoveVoiceMailProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailProfileResponse"` 
	StandardResponse
}

type ListVoiceMailProfile struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailProfile"` 
	ListVoiceMailProfileReq
}

type ListVoiceMailProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailProfileResponse"` 
	ListVoiceMailProfileRes
}

type AddVoiceMailPort struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailPort"` 
	AddVoiceMailPortReq
}

type AddVoiceMailPortResponse struct { 
	XMLName xml.Name `xml:"ns:addVoiceMailPortResponse"` 
	StandardResponse
}

type UpdateVoiceMailPort struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailPort"` 
	UpdateVoiceMailPortReq
}

type UpdateVoiceMailPortResponse struct { 
	XMLName xml.Name `xml:"ns:updateVoiceMailPortResponse"` 
	StandardResponse
}

type GetVoiceMailPort struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailPort"` 
	GetVoiceMailPortReq
}

type GetVoiceMailPortResponse struct { 
	XMLName xml.Name `xml:"ns:getVoiceMailPortResponse"` 
	GetVoiceMailPortRes
}

type RemoveVoiceMailPort struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailPort"` 
	NameAndGUIDRequest
}

type RemoveVoiceMailPortResponse struct { 
	XMLName xml.Name `xml:"ns:removeVoiceMailPortResponse"` 
	StandardResponse
}

type ListVoiceMailPort struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailPort"` 
	ListVoiceMailPortReq
}

type ListVoiceMailPortResponse struct { 
	XMLName xml.Name `xml:"ns:listVoiceMailPortResponse"` 
	ListVoiceMailPortRes
}

type AddGatekeeper struct { 
	XMLName xml.Name `xml:"ns:addGatekeeper"` 
	AddGatekeeperReq
}

type AddGatekeeperResponse struct { 
	XMLName xml.Name `xml:"ns:addGatekeeperResponse"` 
	StandardResponse
}

type UpdateGatekeeper struct { 
	XMLName xml.Name `xml:"ns:updateGatekeeper"` 
	UpdateGatekeeperReq
}

type UpdateGatekeeperResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatekeeperResponse"` 
	StandardResponse
}

type GetGatekeeper struct { 
	XMLName xml.Name `xml:"ns:getGatekeeper"` 
	GetGatekeeperReq
}

type GetGatekeeperResponse struct { 
	XMLName xml.Name `xml:"ns:getGatekeeperResponse"` 
	GetGatekeeperRes
}

type RemoveGatekeeper struct { 
	XMLName xml.Name `xml:"ns:removeGatekeeper"` 
	NameAndGUIDRequest
}

type RemoveGatekeeperResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatekeeperResponse"` 
	StandardResponse
}

type ListGatekeeper struct { 
	XMLName xml.Name `xml:"ns:listGatekeeper"` 
	ListGatekeeperReq
}

type ListGatekeeperResponse struct { 
	XMLName xml.Name `xml:"ns:listGatekeeperResponse"` 
	ListGatekeeperRes
}

type AddPhoneButtonTemplate struct { 
	XMLName xml.Name `xml:"ns:addPhoneButtonTemplate"` 
	AddPhoneButtonTemplateReq
}

type AddPhoneButtonTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:addPhoneButtonTemplateResponse"` 
	StandardResponse
}

type UpdatePhoneButtonTemplate struct { 
	XMLName xml.Name `xml:"ns:updatePhoneButtonTemplate"` 
	UpdatePhoneButtonTemplateReq
}

type UpdatePhoneButtonTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:updatePhoneButtonTemplateResponse"` 
	StandardResponse
}

type GetPhoneButtonTemplate struct { 
	XMLName xml.Name `xml:"ns:getPhoneButtonTemplate"` 
	GetPhoneButtonTemplateReq
}

type GetPhoneButtonTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:getPhoneButtonTemplateResponse"` 
	GetPhoneButtonTemplateRes
}

type RemovePhoneButtonTemplate struct { 
	XMLName xml.Name `xml:"ns:removePhoneButtonTemplate"` 
	NameAndGUIDRequest
}

type RemovePhoneButtonTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:removePhoneButtonTemplateResponse"` 
	StandardResponse
}

type ListPhoneButtonTemplate struct { 
	XMLName xml.Name `xml:"ns:listPhoneButtonTemplate"` 
	ListPhoneButtonTemplateReq
}

type ListPhoneButtonTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:listPhoneButtonTemplateResponse"` 
	ListPhoneButtonTemplateRes
}

type AddCommonPhoneConfig struct { 
	XMLName xml.Name `xml:"ns:addCommonPhoneConfig"` 
	AddCommonPhoneConfigReq
}

type AddCommonPhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:addCommonPhoneConfigResponse"` 
	StandardResponse
}

type UpdateCommonPhoneConfig struct { 
	XMLName xml.Name `xml:"ns:updateCommonPhoneConfig"` 
	UpdateCommonPhoneConfigReq
}

type UpdateCommonPhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateCommonPhoneConfigResponse"` 
	StandardResponse
}

type GetCommonPhoneConfig struct { 
	XMLName xml.Name `xml:"ns:getCommonPhoneConfig"` 
	GetCommonPhoneConfigReq
}

type GetCommonPhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getCommonPhoneConfigResponse"` 
	GetCommonPhoneConfigRes
}

type RemoveCommonPhoneConfig struct { 
	XMLName xml.Name `xml:"ns:removeCommonPhoneConfig"` 
	NameAndGUIDRequest
}

type RemoveCommonPhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:removeCommonPhoneConfigResponse"` 
	StandardResponse
}

type ListCommonPhoneConfig struct { 
	XMLName xml.Name `xml:"ns:listCommonPhoneConfig"` 
	ListCommonPhoneConfigReq
}

type ListCommonPhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:listCommonPhoneConfigResponse"` 
	ListCommonPhoneConfigRes
}

type AddMessageWaiting struct { 
	XMLName xml.Name `xml:"ns:addMessageWaiting"` 
	AddMessageWaitingReq
}

type AddMessageWaitingResponse struct { 
	XMLName xml.Name `xml:"ns:addMessageWaitingResponse"` 
	StandardResponse
}

type UpdateMessageWaiting struct { 
	XMLName xml.Name `xml:"ns:updateMessageWaiting"` 
	UpdateMessageWaitingReq
}

type UpdateMessageWaitingResponse struct { 
	XMLName xml.Name `xml:"ns:updateMessageWaitingResponse"` 
	StandardResponse
}

type GetMessageWaiting struct { 
	XMLName xml.Name `xml:"ns:getMessageWaiting"` 
	GetMessageWaitingReq
}

type GetMessageWaitingResponse struct { 
	XMLName xml.Name `xml:"ns:getMessageWaitingResponse"` 
	GetMessageWaitingRes
}

type RemoveMessageWaiting struct { 
	XMLName xml.Name `xml:"ns:removeMessageWaiting"` 
	RemoveMessageWaitingReq
}

type RemoveMessageWaitingResponse struct { 
	XMLName xml.Name `xml:"ns:removeMessageWaitingResponse"` 
	StandardResponse
}

type ListMessageWaiting struct { 
	XMLName xml.Name `xml:"ns:listMessageWaiting"` 
	ListMessageWaitingReq
}

type ListMessageWaitingResponse struct { 
	XMLName xml.Name `xml:"ns:listMessageWaitingResponse"` 
	ListMessageWaitingRes
}

type AddIpPhoneServices struct { 
	XMLName xml.Name `xml:"ns:addIpPhoneServices"` 
	AddIpPhoneServicesReq
}

type AddIpPhoneServicesResponse struct { 
	XMLName xml.Name `xml:"ns:addIpPhoneServicesResponse"` 
	StandardResponse
}

type UpdateIpPhoneServices struct { 
	XMLName xml.Name `xml:"ns:updateIpPhoneServices"` 
	UpdateIpPhoneServicesReq
}

type UpdateIpPhoneServicesResponse struct { 
	XMLName xml.Name `xml:"ns:updateIpPhoneServicesResponse"` 
	StandardResponse
}

type GetIpPhoneServices struct { 
	XMLName xml.Name `xml:"ns:getIpPhoneServices"` 
	GetIpPhoneServicesReq
}

type GetIpPhoneServicesResponse struct { 
	XMLName xml.Name `xml:"ns:getIpPhoneServicesResponse"` 
	GetIpPhoneServicesRes
}

type RemoveIpPhoneServices struct { 
	XMLName xml.Name `xml:"ns:removeIpPhoneServices"` 
	RemoveIpPhoneServicesReq
}

type RemoveIpPhoneServicesResponse struct { 
	XMLName xml.Name `xml:"ns:removeIpPhoneServicesResponse"` 
	StandardResponse
}

type ListIpPhoneServices struct { 
	XMLName xml.Name `xml:"ns:listIpPhoneServices"` 
	ListIpPhoneServicesReq
}

type ListIpPhoneServicesResponse struct { 
	XMLName xml.Name `xml:"ns:listIpPhoneServicesResponse"` 
	ListIpPhoneServicesRes
}

type AddCtiRoutePoint struct { 
	XMLName xml.Name `xml:"ns:addCtiRoutePoint"` 
	AddCtiRoutePointReq
}

type AddCtiRoutePointResponse struct { 
	XMLName xml.Name `xml:"ns:addCtiRoutePointResponse"` 
	StandardResponse
}

type UpdateCtiRoutePoint struct { 
	XMLName xml.Name `xml:"ns:updateCtiRoutePoint"` 
	UpdateCtiRoutePointReq
}

type UpdateCtiRoutePointResponse struct { 
	XMLName xml.Name `xml:"ns:updateCtiRoutePointResponse"` 
	StandardResponse
}

type GetCtiRoutePoint struct { 
	XMLName xml.Name `xml:"ns:getCtiRoutePoint"` 
	GetCtiRoutePointReq
}

type GetCtiRoutePointResponse struct { 
	XMLName xml.Name `xml:"ns:getCtiRoutePointResponse"` 
	GetCtiRoutePointRes
}

type RemoveCtiRoutePoint struct { 
	XMLName xml.Name `xml:"ns:removeCtiRoutePoint"` 
	NameAndGUIDRequest
}

type RemoveCtiRoutePointResponse struct { 
	XMLName xml.Name `xml:"ns:removeCtiRoutePointResponse"` 
	StandardResponse
}

type ListCtiRoutePoint struct { 
	XMLName xml.Name `xml:"ns:listCtiRoutePoint"` 
	ListCtiRoutePointReq
}

type ListCtiRoutePointResponse struct { 
	XMLName xml.Name `xml:"ns:listCtiRoutePointResponse"` 
	ListCtiRoutePointRes
}

type AddTransPattern struct { 
	XMLName xml.Name `xml:"ns:addTransPattern"` 
	AddTransPatternReq
}

type AddTransPatternResponse struct { 
	XMLName xml.Name `xml:"ns:addTransPatternResponse"` 
	StandardResponse
}

type UpdateTransPattern struct { 
	XMLName xml.Name `xml:"ns:updateTransPattern"` 
	UpdateTransPatternReq
}

type UpdateTransPatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateTransPatternResponse"` 
	StandardResponse
}

type GetTransPattern struct { 
	XMLName xml.Name `xml:"ns:getTransPattern"` 
	GetTransPatternReq
}

type GetTransPatternResponse struct { 
	XMLName xml.Name `xml:"ns:getTransPatternResponse"` 
	GetTransPatternRes
}

type RemoveTransPattern struct { 
	XMLName xml.Name `xml:"ns:removeTransPattern"` 
	RemoveTransPatternReq
}

type RemoveTransPatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeTransPatternResponse"` 
	StandardResponse
}

type ListTransPattern struct { 
	XMLName xml.Name `xml:"ns:listTransPattern"` 
	ListTransPatternReq
}

type ListTransPatternResponse struct { 
	XMLName xml.Name `xml:"ns:listTransPatternResponse"` 
	ListTransPatternRes
}

type AddCallingPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:addCallingPartyTransformationPattern"` 
	AddCallingPartyTransformationPatternReq
}

type AddCallingPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:addCallingPartyTransformationPatternResponse"` 
	StandardResponse
}

type UpdateCallingPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:updateCallingPartyTransformationPattern"` 
	UpdateCallingPartyTransformationPatternReq
}

type UpdateCallingPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallingPartyTransformationPatternResponse"` 
	StandardResponse
}

type GetCallingPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:getCallingPartyTransformationPattern"` 
	GetCallingPartyTransformationPatternReq
}

type GetCallingPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:getCallingPartyTransformationPatternResponse"` 
	GetCallingPartyTransformationPatternRes
}

type RemoveCallingPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:removeCallingPartyTransformationPattern"` 
	RemoveCallingPartyTransformationPatternReq
}

type RemoveCallingPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeCallingPartyTransformationPatternResponse"` 
	StandardResponse
}

type ListCallingPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:listCallingPartyTransformationPattern"` 
	ListCallingPartyTransformationPatternReq
}

type ListCallingPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:listCallingPartyTransformationPatternResponse"` 
	ListCallingPartyTransformationPatternRes
}

type AddSipRoutePattern struct { 
	XMLName xml.Name `xml:"ns:addSipRoutePattern"` 
	AddSipRoutePatternReq
}

type AddSipRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:addSipRoutePatternResponse"` 
	StandardResponse
}

type UpdateSipRoutePattern struct { 
	XMLName xml.Name `xml:"ns:updateSipRoutePattern"` 
	UpdateSipRoutePatternReq
}

type UpdateSipRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipRoutePatternResponse"` 
	StandardResponse
}

type GetSipRoutePattern struct { 
	XMLName xml.Name `xml:"ns:getSipRoutePattern"` 
	GetSipRoutePatternReq
}

type GetSipRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:getSipRoutePatternResponse"` 
	GetSipRoutePatternRes
}

type RemoveSipRoutePattern struct { 
	XMLName xml.Name `xml:"ns:removeSipRoutePattern"` 
	RemoveSipRoutePatternReq
}

type RemoveSipRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipRoutePatternResponse"` 
	StandardResponse
}

type ListSipRoutePattern struct { 
	XMLName xml.Name `xml:"ns:listSipRoutePattern"` 
	ListSipRoutePatternReq
}

type ListSipRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:listSipRoutePatternResponse"` 
	ListSipRoutePatternRes
}

type AddHuntPilot struct { 
	XMLName xml.Name `xml:"ns:addHuntPilot"` 
	AddHuntPilotReq
}

type AddHuntPilotResponse struct { 
	XMLName xml.Name `xml:"ns:addHuntPilotResponse"` 
	StandardResponse
}

type UpdateHuntPilot struct { 
	XMLName xml.Name `xml:"ns:updateHuntPilot"` 
	UpdateHuntPilotReq
}

type UpdateHuntPilotResponse struct { 
	XMLName xml.Name `xml:"ns:updateHuntPilotResponse"` 
	StandardResponse
}

type GetHuntPilot struct { 
	XMLName xml.Name `xml:"ns:getHuntPilot"` 
	GetHuntPilotReq
}

type GetHuntPilotResponse struct { 
	XMLName xml.Name `xml:"ns:getHuntPilotResponse"` 
	GetHuntPilotRes
}

type RemoveHuntPilot struct { 
	XMLName xml.Name `xml:"ns:removeHuntPilot"` 
	RemoveHuntPilotReq
}

type RemoveHuntPilotResponse struct { 
	XMLName xml.Name `xml:"ns:removeHuntPilotResponse"` 
	StandardResponse
}

type ListHuntPilot struct { 
	XMLName xml.Name `xml:"ns:listHuntPilot"` 
	ListHuntPilotReq
}

type ListHuntPilotResponse struct { 
	XMLName xml.Name `xml:"ns:listHuntPilotResponse"` 
	ListHuntPilotRes
}

type AddRoutePattern struct { 
	XMLName xml.Name `xml:"ns:addRoutePattern"` 
	AddRoutePatternReq
}

type AddRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:addRoutePatternResponse"` 
	StandardResponse
}

type UpdateRoutePattern struct { 
	XMLName xml.Name `xml:"ns:updateRoutePattern"` 
	UpdateRoutePatternReq
}

type UpdateRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateRoutePatternResponse"` 
	StandardResponse
}

type GetRoutePattern struct { 
	XMLName xml.Name `xml:"ns:getRoutePattern"` 
	GetRoutePatternReq
}

type GetRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:getRoutePatternResponse"` 
	GetRoutePatternRes
}

type RemoveRoutePattern struct { 
	XMLName xml.Name `xml:"ns:removeRoutePattern"` 
	RemoveRoutePatternReq
}

type RemoveRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeRoutePatternResponse"` 
	StandardResponse
}

type ListRoutePattern struct { 
	XMLName xml.Name `xml:"ns:listRoutePattern"` 
	ListRoutePatternReq
}

type ListRoutePatternResponse struct { 
	XMLName xml.Name `xml:"ns:listRoutePatternResponse"` 
	ListRoutePatternRes
}

type AddApplicationDialRules struct { 
	XMLName xml.Name `xml:"ns:addApplicationDialRules"` 
	AddApplicationDialRulesReq
}

type AddApplicationDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:addApplicationDialRulesResponse"` 
	StandardResponse
}

type UpdateApplicationDialRules struct { 
	XMLName xml.Name `xml:"ns:updateApplicationDialRules"` 
	UpdateApplicationDialRulesReq
}

type UpdateApplicationDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:updateApplicationDialRulesResponse"` 
	StandardResponse
}

type GetApplicationDialRules struct { 
	XMLName xml.Name `xml:"ns:getApplicationDialRules"` 
	GetApplicationDialRulesReq
}

type GetApplicationDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:getApplicationDialRulesResponse"` 
	GetApplicationDialRulesRes
}

type RemoveApplicationDialRules struct { 
	XMLName xml.Name `xml:"ns:removeApplicationDialRules"` 
	NameAndGUIDRequest
}

type RemoveApplicationDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:removeApplicationDialRulesResponse"` 
	StandardResponse
}

type ListApplicationDialRules struct { 
	XMLName xml.Name `xml:"ns:listApplicationDialRules"` 
	ListApplicationDialRulesReq
}

type ListApplicationDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:listApplicationDialRulesResponse"` 
	ListApplicationDialRulesRes
}

type AddDirectoryLookupDialRules struct { 
	XMLName xml.Name `xml:"ns:addDirectoryLookupDialRules"` 
	AddDirectoryLookupDialRulesReq
}

type AddDirectoryLookupDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:addDirectoryLookupDialRulesResponse"` 
	StandardResponse
}

type UpdateDirectoryLookupDialRules struct { 
	XMLName xml.Name `xml:"ns:updateDirectoryLookupDialRules"` 
	UpdateDirectoryLookupDialRulesReq
}

type UpdateDirectoryLookupDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:updateDirectoryLookupDialRulesResponse"` 
	StandardResponse
}

type GetDirectoryLookupDialRules struct { 
	XMLName xml.Name `xml:"ns:getDirectoryLookupDialRules"` 
	GetDirectoryLookupDialRulesReq
}

type GetDirectoryLookupDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:getDirectoryLookupDialRulesResponse"` 
	GetDirectoryLookupDialRulesRes
}

type RemoveDirectoryLookupDialRules struct { 
	XMLName xml.Name `xml:"ns:removeDirectoryLookupDialRules"` 
	NameAndGUIDRequest
}

type RemoveDirectoryLookupDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:removeDirectoryLookupDialRulesResponse"` 
	StandardResponse
}

type ListDirectoryLookupDialRules struct { 
	XMLName xml.Name `xml:"ns:listDirectoryLookupDialRules"` 
	ListDirectoryLookupDialRulesReq
}

type ListDirectoryLookupDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:listDirectoryLookupDialRulesResponse"` 
	ListDirectoryLookupDialRulesRes
}

type AddPhoneSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:addPhoneSecurityProfile"` 
	AddPhoneSecurityProfileReq
}

type AddPhoneSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addPhoneSecurityProfileResponse"` 
	StandardResponse
}

type UpdatePhoneSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:updatePhoneSecurityProfile"` 
	UpdatePhoneSecurityProfileReq
}

type UpdatePhoneSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updatePhoneSecurityProfileResponse"` 
	StandardResponse
}

type GetPhoneSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:getPhoneSecurityProfile"` 
	GetPhoneSecurityProfileReq
}

type GetPhoneSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getPhoneSecurityProfileResponse"` 
	GetPhoneSecurityProfileRes
}

type RemovePhoneSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:removePhoneSecurityProfile"` 
	NameAndGUIDRequest
}

type RemovePhoneSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removePhoneSecurityProfileResponse"` 
	StandardResponse
}

type ListPhoneSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:listPhoneSecurityProfile"` 
	ListPhoneSecurityProfileReq
}

type ListPhoneSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listPhoneSecurityProfileResponse"` 
	ListPhoneSecurityProfileRes
}

type AddSipDialRules struct { 
	XMLName xml.Name `xml:"ns:addSipDialRules"` 
	AddSipDialRulesReq
}

type AddSipDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:addSipDialRulesResponse"` 
	StandardResponse
}

type UpdateSipDialRules struct { 
	XMLName xml.Name `xml:"ns:updateSipDialRules"` 
	UpdateSipDialRulesReq
}

type UpdateSipDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipDialRulesResponse"` 
	StandardResponse
}

type GetSipDialRules struct { 
	XMLName xml.Name `xml:"ns:getSipDialRules"` 
	GetSipDialRulesReq
}

type GetSipDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:getSipDialRulesResponse"` 
	GetSipDialRulesRes
}

type RemoveSipDialRules struct { 
	XMLName xml.Name `xml:"ns:removeSipDialRules"` 
	NameAndGUIDRequest
}

type RemoveSipDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipDialRulesResponse"` 
	StandardResponse
}

type ListSipDialRules struct { 
	XMLName xml.Name `xml:"ns:listSipDialRules"` 
	ListSipDialRulesReq
}

type ListSipDialRulesResponse struct { 
	XMLName xml.Name `xml:"ns:listSipDialRulesResponse"` 
	ListSipDialRulesRes
}

type AddConferenceBridge struct { 
	XMLName xml.Name `xml:"ns:addConferenceBridge"` 
	AddConferenceBridgeReq
}

type AddConferenceBridgeResponse struct { 
	XMLName xml.Name `xml:"ns:addConferenceBridgeResponse"` 
	StandardResponse
}

type UpdateConferenceBridge struct { 
	XMLName xml.Name `xml:"ns:updateConferenceBridge"` 
	UpdateConferenceBridgeReq
}

type UpdateConferenceBridgeResponse struct { 
	XMLName xml.Name `xml:"ns:updateConferenceBridgeResponse"` 
	StandardResponse
}

type GetConferenceBridge struct { 
	XMLName xml.Name `xml:"ns:getConferenceBridge"` 
	GetConferenceBridgeReq
}

type GetConferenceBridgeResponse struct { 
	XMLName xml.Name `xml:"ns:getConferenceBridgeResponse"` 
	GetConferenceBridgeRes
}

type RemoveConferenceBridge struct { 
	XMLName xml.Name `xml:"ns:removeConferenceBridge"` 
	NameAndGUIDRequest
}

type RemoveConferenceBridgeResponse struct { 
	XMLName xml.Name `xml:"ns:removeConferenceBridgeResponse"` 
	StandardResponse
}

type ListConferenceBridge struct { 
	XMLName xml.Name `xml:"ns:listConferenceBridge"` 
	ListConferenceBridgeReq
}

type ListConferenceBridgeResponse struct { 
	XMLName xml.Name `xml:"ns:listConferenceBridgeResponse"` 
	ListConferenceBridgeRes
}

type UpdateAnnunciator struct { 
	XMLName xml.Name `xml:"ns:updateAnnunciator"` 
	UpdateAnnunciatorReq
}

type UpdateAnnunciatorResponse struct { 
	XMLName xml.Name `xml:"ns:updateAnnunciatorResponse"` 
	StandardResponse
}

type GetAnnunciator struct { 
	XMLName xml.Name `xml:"ns:getAnnunciator"` 
	GetAnnunciatorReq
}

type GetAnnunciatorResponse struct { 
	XMLName xml.Name `xml:"ns:getAnnunciatorResponse"` 
	GetAnnunciatorRes
}

type ListAnnunciator struct { 
	XMLName xml.Name `xml:"ns:listAnnunciator"` 
	ListAnnunciatorReq
}

type ListAnnunciatorResponse struct { 
	XMLName xml.Name `xml:"ns:listAnnunciatorResponse"` 
	ListAnnunciatorRes
}

type AddMtp struct { 
	XMLName xml.Name `xml:"ns:addMtp"` 
	AddMtpReq
}

type AddMtpResponse struct { 
	XMLName xml.Name `xml:"ns:addMtpResponse"` 
	StandardResponse
}

type UpdateMtp struct { 
	XMLName xml.Name `xml:"ns:updateMtp"` 
	UpdateMtpReq
}

type UpdateMtpResponse struct { 
	XMLName xml.Name `xml:"ns:updateMtpResponse"` 
	StandardResponse
}

type GetMtp struct { 
	XMLName xml.Name `xml:"ns:getMtp"` 
	GetMtpReq
}

type GetMtpResponse struct { 
	XMLName xml.Name `xml:"ns:getMtpResponse"` 
	GetMtpRes
}

type RemoveMtp struct { 
	XMLName xml.Name `xml:"ns:removeMtp"` 
	NameAndGUIDRequest
}

type RemoveMtpResponse struct { 
	XMLName xml.Name `xml:"ns:removeMtpResponse"` 
	StandardResponse
}

type ListMtp struct { 
	XMLName xml.Name `xml:"ns:listMtp"` 
	ListMtpReq
}

type ListMtpResponse struct { 
	XMLName xml.Name `xml:"ns:listMtpResponse"` 
	ListMtpRes
}

type UpdateFixedMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:updateFixedMohAudioSource"` 
	UpdateFixedMohAudioSourceReq
}

type UpdateFixedMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:updateFixedMohAudioSourceResponse"` 
	StandardResponse
}

type GetFixedMohAudioSource struct { 
	XMLName xml.Name `xml:"ns:getFixedMohAudioSource"` 
	GetFixedMohAudioSourceReq
}

type GetFixedMohAudioSourceResponse struct { 
	XMLName xml.Name `xml:"ns:getFixedMohAudioSourceResponse"` 
	GetFixedMohAudioSourceRes
}

type UpdateAarGroupMatrix struct { 
	XMLName xml.Name `xml:"ns:updateAarGroupMatrix"` 
	UpdateAarGroupMatrixReq
}

type UpdateAarGroupMatrixResponse struct { 
	XMLName xml.Name `xml:"ns:updateAarGroupMatrixResponse"` 
	StandardResponse
}

type AddRemoteDestinationProfile struct { 
	XMLName xml.Name `xml:"ns:addRemoteDestinationProfile"` 
	AddRemoteDestinationProfileReq
}

type AddRemoteDestinationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addRemoteDestinationProfileResponse"` 
	StandardResponse
}

type UpdateRemoteDestinationProfile struct { 
	XMLName xml.Name `xml:"ns:updateRemoteDestinationProfile"` 
	UpdateRemoteDestinationProfileReq
}

type UpdateRemoteDestinationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateRemoteDestinationProfileResponse"` 
	StandardResponse
}

type GetRemoteDestinationProfile struct { 
	XMLName xml.Name `xml:"ns:getRemoteDestinationProfile"` 
	GetRemoteDestinationProfileReq
}

type GetRemoteDestinationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getRemoteDestinationProfileResponse"` 
	GetRemoteDestinationProfileRes
}

type RemoveRemoteDestinationProfile struct { 
	XMLName xml.Name `xml:"ns:removeRemoteDestinationProfile"` 
	NameAndGUIDRequest
}

type RemoveRemoteDestinationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeRemoteDestinationProfileResponse"` 
	StandardResponse
}

type ListRemoteDestinationProfile struct { 
	XMLName xml.Name `xml:"ns:listRemoteDestinationProfile"` 
	ListRemoteDestinationProfileReq
}

type ListRemoteDestinationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listRemoteDestinationProfileResponse"` 
	ListRemoteDestinationProfileRes
}

type AddLine struct { 
	XMLName xml.Name `xml:"ns:addLine"` 
	AddLineReq
}

type AddLineResponse struct { 
	XMLName xml.Name `xml:"ns:addLineResponse"` 
	StandardResponse
}

type UpdateLine struct { 
	XMLName xml.Name `xml:"ns:updateLine"` 
	UpdateLineReq
}

type UpdateLineResponse struct { 
	XMLName xml.Name `xml:"ns:updateLineResponse"` 
	StandardResponse
}

type GetLine struct { 
	XMLName xml.Name `xml:"ns:getLine"` 
	GetLineReq
}

type GetLineResponse struct { 
	XMLName xml.Name `xml:"ns:getLineResponse"` 
	GetLineRes
}

type RemoveLine struct { 
	XMLName xml.Name `xml:"ns:removeLine"` 
	RemoveLineReq
}

type RemoveLineResponse struct { 
	XMLName xml.Name `xml:"ns:removeLineResponse"` 
	StandardResponse
}

type ListLine struct { 
	XMLName xml.Name `xml:"ns:listLine"` 
	ListLineReq
}

type ListLineResponse struct { 
	XMLName xml.Name `xml:"ns:listLineResponse"` 
	ListLineRes
}

type AddDefaultDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:addDefaultDeviceProfile"` 
	AddDefaultDeviceProfileReq
}

type AddDefaultDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addDefaultDeviceProfileResponse"` 
	StandardResponse
}

type UpdateDefaultDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:updateDefaultDeviceProfile"` 
	UpdateDefaultDeviceProfileReq
}

type UpdateDefaultDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateDefaultDeviceProfileResponse"` 
	StandardResponse
}

type GetDefaultDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:getDefaultDeviceProfile"` 
	GetDefaultDeviceProfileReq
}

type GetDefaultDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getDefaultDeviceProfileResponse"` 
	GetDefaultDeviceProfileRes
}

type RemoveDefaultDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:removeDefaultDeviceProfile"` 
	NameAndGUIDRequest
}

type RemoveDefaultDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeDefaultDeviceProfileResponse"` 
	StandardResponse
}

type ListDefaultDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:listDefaultDeviceProfile"` 
	ListDefaultDeviceProfileReq
}

type ListDefaultDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listDefaultDeviceProfileResponse"` 
	ListDefaultDeviceProfileRes
}

type AddH323Phone struct { 
	XMLName xml.Name `xml:"ns:addH323Phone"` 
	AddH323PhoneReq
}

type AddH323PhoneResponse struct { 
	XMLName xml.Name `xml:"ns:addH323PhoneResponse"` 
	StandardResponse
}

type UpdateH323Phone struct { 
	XMLName xml.Name `xml:"ns:updateH323Phone"` 
	UpdateH323PhoneReq
}

type UpdateH323PhoneResponse struct { 
	XMLName xml.Name `xml:"ns:updateH323PhoneResponse"` 
	StandardResponse
}

type GetH323Phone struct { 
	XMLName xml.Name `xml:"ns:getH323Phone"` 
	GetH323PhoneReq
}

type GetH323PhoneResponse struct { 
	XMLName xml.Name `xml:"ns:getH323PhoneResponse"` 
	GetH323PhoneRes
}

type RemoveH323Phone struct { 
	XMLName xml.Name `xml:"ns:removeH323Phone"` 
	NameAndGUIDRequest
}

type RemoveH323PhoneResponse struct { 
	XMLName xml.Name `xml:"ns:removeH323PhoneResponse"` 
	StandardResponse
}

type ListH323Phone struct { 
	XMLName xml.Name `xml:"ns:listH323Phone"` 
	ListH323PhoneReq
}

type ListH323PhoneResponse struct { 
	XMLName xml.Name `xml:"ns:listH323PhoneResponse"` 
	ListH323PhoneRes
}

type UpdateMohServer struct { 
	XMLName xml.Name `xml:"ns:updateMohServer"` 
	UpdateMohServerReq
}

type UpdateMohServerResponse struct { 
	XMLName xml.Name `xml:"ns:updateMohServerResponse"` 
	StandardResponse
}

type GetMohServer struct { 
	XMLName xml.Name `xml:"ns:getMohServer"` 
	GetMohServerReq
}

type GetMohServerResponse struct { 
	XMLName xml.Name `xml:"ns:getMohServerResponse"` 
	GetMohServerRes
}

type ListMohServer struct { 
	XMLName xml.Name `xml:"ns:listMohServer"` 
	ListMohServerReq
}

type ListMohServerResponse struct { 
	XMLName xml.Name `xml:"ns:listMohServerResponse"` 
	ListMohServerRes
}

type AddH323Trunk struct { 
	XMLName xml.Name `xml:"ns:addH323Trunk"` 
	AddH323TrunkReq
}

type AddH323TrunkResponse struct { 
	XMLName xml.Name `xml:"ns:addH323TrunkResponse"` 
	StandardResponse
}

type UpdateH323Trunk struct { 
	XMLName xml.Name `xml:"ns:updateH323Trunk"` 
	UpdateH323TrunkReq
}

type UpdateH323TrunkResponse struct { 
	XMLName xml.Name `xml:"ns:updateH323TrunkResponse"` 
	StandardResponse
}

type GetH323Trunk struct { 
	XMLName xml.Name `xml:"ns:getH323Trunk"` 
	GetH323TrunkReq
}

type GetH323TrunkResponse struct { 
	XMLName xml.Name `xml:"ns:getH323TrunkResponse"` 
	GetH323TrunkRes
}

type RemoveH323Trunk struct { 
	XMLName xml.Name `xml:"ns:removeH323Trunk"` 
	NameAndGUIDRequest
}

type RemoveH323TrunkResponse struct { 
	XMLName xml.Name `xml:"ns:removeH323TrunkResponse"` 
	StandardResponse
}

type ListH323Trunk struct { 
	XMLName xml.Name `xml:"ns:listH323Trunk"` 
	ListH323TrunkReq
}

type ListH323TrunkResponse struct { 
	XMLName xml.Name `xml:"ns:listH323TrunkResponse"` 
	ListH323TrunkRes
}

type AddPhone struct { 
	XMLName xml.Name `xml:"ns:addPhone"` 
	AddPhoneReq
}

type AddPhoneResponse struct { 
	XMLName xml.Name `xml:"ns:addPhoneResponse"` 
	StandardResponse
}

type UpdatePhone struct { 
	XMLName xml.Name `xml:"ns:updatePhone"` 
	UpdatePhoneReq
}

type UpdatePhoneResponse struct { 
	XMLName xml.Name `xml:"ns:updatePhoneResponse"` 
	StandardResponse
}

type GetPhone struct { 
	XMLName xml.Name `xml:"ns:getPhone"` 
	GetPhoneReq
}

type GetPhoneResponse struct { 
	XMLName xml.Name `xml:"ns:getPhoneResponse"` 
	GetPhoneRes
}

type RemovePhone struct { 
	XMLName xml.Name `xml:"ns:removePhone"` 
	NameAndGUIDRequest
}

type RemovePhoneResponse struct { 
	XMLName xml.Name `xml:"ns:removePhoneResponse"` 
	StandardResponse
}

type ListPhone struct { 
	XMLName xml.Name `xml:"ns:listPhone"` 
	ListPhoneReq
}

type ListPhoneResponse struct { 
	XMLName xml.Name `xml:"ns:listPhoneResponse"` 
	ListPhoneRes
}

type AddH323Gateway struct { 
	XMLName xml.Name `xml:"ns:addH323Gateway"` 
	AddH323GatewayReq
}

type AddH323GatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addH323GatewayResponse"` 
	StandardResponse
}

type UpdateH323Gateway struct { 
	XMLName xml.Name `xml:"ns:updateH323Gateway"` 
	UpdateH323GatewayReq
}

type UpdateH323GatewayResponse struct { 
	XMLName xml.Name `xml:"ns:updateH323GatewayResponse"` 
	StandardResponse
}

type GetH323Gateway struct { 
	XMLName xml.Name `xml:"ns:getH323Gateway"` 
	GetH323GatewayReq
}

type GetH323GatewayResponse struct { 
	XMLName xml.Name `xml:"ns:getH323GatewayResponse"` 
	GetH323GatewayRes
}

type RemoveH323Gateway struct { 
	XMLName xml.Name `xml:"ns:removeH323Gateway"` 
	NameAndGUIDRequest
}

type RemoveH323GatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeH323GatewayResponse"` 
	StandardResponse
}

type ListH323Gateway struct { 
	XMLName xml.Name `xml:"ns:listH323Gateway"` 
	ListH323GatewayReq
}

type ListH323GatewayResponse struct { 
	XMLName xml.Name `xml:"ns:listH323GatewayResponse"` 
	ListH323GatewayRes
}

type AddDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:addDeviceProfile"` 
	AddDeviceProfileReq
}

type AddDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addDeviceProfileResponse"` 
	StandardResponse
}

type UpdateDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:updateDeviceProfile"` 
	UpdateDeviceProfileReq
}

type UpdateDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateDeviceProfileResponse"` 
	StandardResponse
}

type GetDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:getDeviceProfile"` 
	GetDeviceProfileReq
}

type GetDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getDeviceProfileResponse"` 
	GetDeviceProfileRes
}

type RemoveDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:removeDeviceProfile"` 
	NameAndGUIDRequest
}

type RemoveDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeDeviceProfileResponse"` 
	StandardResponse
}

type ListDeviceProfile struct { 
	XMLName xml.Name `xml:"ns:listDeviceProfile"` 
	ListDeviceProfileReq
}

type ListDeviceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listDeviceProfileResponse"` 
	ListDeviceProfileRes
}

type AddRemoteDestination struct { 
	XMLName xml.Name `xml:"ns:addRemoteDestination"` 
	AddRemoteDestinationReq
}

type AddRemoteDestinationResponse struct { 
	XMLName xml.Name `xml:"ns:addRemoteDestinationResponse"` 
	StandardResponse
}

type UpdateRemoteDestination struct { 
	XMLName xml.Name `xml:"ns:updateRemoteDestination"` 
	UpdateRemoteDestinationReq
}

type UpdateRemoteDestinationResponse struct { 
	XMLName xml.Name `xml:"ns:updateRemoteDestinationResponse"` 
	StandardResponse
}

type GetRemoteDestination struct { 
	XMLName xml.Name `xml:"ns:getRemoteDestination"` 
	GetRemoteDestinationReq
}

type GetRemoteDestinationResponse struct { 
	XMLName xml.Name `xml:"ns:getRemoteDestinationResponse"` 
	GetRemoteDestinationRes
}

type RemoveRemoteDestination struct { 
	XMLName xml.Name `xml:"ns:removeRemoteDestination"` 
	RemoveRemoteDestinationReq
}

type RemoveRemoteDestinationResponse struct { 
	XMLName xml.Name `xml:"ns:removeRemoteDestinationResponse"` 
	StandardResponse
}

type ListRemoteDestination struct { 
	XMLName xml.Name `xml:"ns:listRemoteDestination"` 
	ListRemoteDestinationReq
}

type ListRemoteDestinationResponse struct { 
	XMLName xml.Name `xml:"ns:listRemoteDestinationResponse"` 
	ListRemoteDestinationRes
}

type AddGateway struct { 
	XMLName xml.Name `xml:"ns:addGateway"` 
	AddGatewayReq
}

type AddGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewayResponse"` 
	StandardResponse
}

type UpdateGateway struct { 
	XMLName xml.Name `xml:"ns:updateGateway"` 
	UpdateGatewayReq
}

type UpdateGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatewayResponse"` 
	StandardResponse
}

type GetGateway struct { 
	XMLName xml.Name `xml:"ns:getGateway"` 
	GetGatewayReq
}

type GetGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:getGatewayResponse"` 
	GetGatewayRes
}

type RemoveGateway struct { 
	XMLName xml.Name `xml:"ns:removeGateway"` 
	RemoveGatewayReq
}

type RemoveGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewayResponse"` 
	StandardResponse
}

type ListGateway struct { 
	XMLName xml.Name `xml:"ns:listGateway"` 
	ListGatewayReq
}

type ListGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:listGatewayResponse"` 
	ListGatewayRes
}

type AddGatewayEndpointAnalogAccess struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointAnalogAccess"` 
	AddGatewayEndpointAnalogAccessReq
}

type AddGatewayEndpointAnalogAccessResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointAnalogAccessResponse"` 
	StandardResponse
}

type UpdateGatewayEndpointAnalogAccess struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointAnalogAccess"` 
	UpdateGatewayEndpointAnalogAccessReq
}

type UpdateGatewayEndpointAnalogAccessResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointAnalogAccessResponse"` 
	StandardResponse
}

type GetGatewayEndpointAnalogAccess struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointAnalogAccess"` 
	GetGatewayEndpointAnalogAccessReq
}

type GetGatewayEndpointAnalogAccessResponse struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointAnalogAccessResponse"` 
	GetGatewayEndpointAnalogAccessRes
}

type RemoveGatewayEndpointAnalogAccess struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointAnalogAccess"` 
	NameAndGUIDRequest
}

type RemoveGatewayEndpointAnalogAccessResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointAnalogAccessResponse"` 
	StandardResponse
}

type AddGatewayEndpointDigitalAccessPri struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessPri"` 
	AddGatewayEndpointDigitalAccessPriReq
}

type AddGatewayEndpointDigitalAccessPriResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessPriResponse"` 
	StandardResponse
}

type UpdateGatewayEndpointDigitalAccessPri struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessPri"` 
	UpdateGatewayEndpointDigitalAccessPriReq
}

type UpdateGatewayEndpointDigitalAccessPriResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessPriResponse"` 
	StandardResponse
}

type GetGatewayEndpointDigitalAccessPri struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessPri"` 
	GetGatewayEndpointDigitalAccessPriReq
}

type GetGatewayEndpointDigitalAccessPriResponse struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessPriResponse"` 
	GetGatewayEndpointDigitalAccessPriRes
}

type RemoveGatewayEndpointDigitalAccessPri struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessPri"` 
	NameAndGUIDRequest
}

type RemoveGatewayEndpointDigitalAccessPriResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessPriResponse"` 
	StandardResponse
}

type AddGatewayEndpointDigitalAccessBri struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessBri"` 
	AddGatewayEndpointDigitalAccessBriReq
}

type AddGatewayEndpointDigitalAccessBriResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessBriResponse"` 
	StandardResponse
}

type UpdateGatewayEndpointDigitalAccessBri struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessBri"` 
	UpdateGatewayEndpointDigitalAccessBriReq
}

type UpdateGatewayEndpointDigitalAccessBriResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessBriResponse"` 
	StandardResponse
}

type GetGatewayEndpointDigitalAccessBri struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessBri"` 
	GetGatewayEndpointDigitalAccessBriReq
}

type GetGatewayEndpointDigitalAccessBriResponse struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessBriResponse"` 
	GetGatewayEndpointDigitalAccessBriRes
}

type RemoveGatewayEndpointDigitalAccessBri struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessBri"` 
	NameAndGUIDRequest
}

type RemoveGatewayEndpointDigitalAccessBriResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessBriResponse"` 
	StandardResponse
}

type AddGatewayEndpointDigitalAccessT1 struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessT1"` 
	AddGatewayEndpointDigitalAccessT1Req
}

type AddGatewayEndpointDigitalAccessT1Response struct { 
	XMLName xml.Name `xml:"ns:addGatewayEndpointDigitalAccessT1Response"` 
	StandardResponse
}

type UpdateGatewayEndpointDigitalAccessT1 struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessT1"` 
	UpdateGatewayEndpointDigitalAccessT1Req
}

type UpdateGatewayEndpointDigitalAccessT1Response struct { 
	XMLName xml.Name `xml:"ns:updateGatewayEndpointDigitalAccessT1Response"` 
	StandardResponse
}

type GetGatewayEndpointDigitalAccessT1 struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessT1"` 
	GetGatewayEndpointDigitalAccessT1Req
}

type GetGatewayEndpointDigitalAccessT1Response struct { 
	XMLName xml.Name `xml:"ns:getGatewayEndpointDigitalAccessT1Response"` 
	GetGatewayEndpointDigitalAccessT1Res
}

type RemoveGatewayEndpointDigitalAccessT1 struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessT1"` 
	NameAndGUIDRequest
}

type RemoveGatewayEndpointDigitalAccessT1Response struct { 
	XMLName xml.Name `xml:"ns:removeGatewayEndpointDigitalAccessT1Response"` 
	StandardResponse
}

type AddVg224 struct { 
	XMLName xml.Name `xml:"ns:addVg224"` 
	AddVg224Req
}

type AddVg224Response struct { 
	XMLName xml.Name `xml:"ns:addVg224Response"` 
	StandardResponse
}

type UpdateVg224 struct { 
	XMLName xml.Name `xml:"ns:updateVg224"` 
	UpdateVg224Req
}

type UpdateVg224Response struct { 
	XMLName xml.Name `xml:"ns:updateVg224Response"` 
	StandardResponse
}

type GetVg224 struct { 
	XMLName xml.Name `xml:"ns:getVg224"` 
	GetVg224Req
}

type GetVg224Response struct { 
	XMLName xml.Name `xml:"ns:getVg224Response"` 
	GetVg224Res
}

type RemoveVg224 struct { 
	XMLName xml.Name `xml:"ns:removeVg224"` 
	RemoveVg224Req
}

type RemoveVg224Response struct { 
	XMLName xml.Name `xml:"ns:removeVg224Response"` 
	StandardResponse
}

type AddCiscoCatalyst600024PortFXSGateway struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst600024PortFXSGateway"` 
	AddCiscoCatalyst600024PortFXSGatewayReq
}

type AddCiscoCatalyst600024PortFXSGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst600024PortFXSGatewayResponse"` 
	StandardResponse
}

type UpdateCiscoCatalyst600024PortFXSGateway struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst600024PortFXSGateway"` 
	UpdateCiscoCatalyst600024PortFXSGatewayReq
}

type UpdateCiscoCatalyst600024PortFXSGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst600024PortFXSGatewayResponse"` 
	StandardResponse
}

type GetCiscoCatalyst600024PortFXSGateway struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst600024PortFXSGateway"` 
	GetCiscoCatalyst600024PortFXSGatewayReq
}

type GetCiscoCatalyst600024PortFXSGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst600024PortFXSGatewayResponse"` 
	GetCiscoCatalyst600024PortFXSGatewayRes
}

type RemoveCiscoCatalyst600024PortFXSGateway struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst600024PortFXSGateway"` 
	NameAndGUIDRequest
}

type RemoveCiscoCatalyst600024PortFXSGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst600024PortFXSGatewayResponse"` 
	StandardResponse
}

type ListCiscoCatalyst600024PortFXSGateway struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst600024PortFXSGateway"` 
	ListCiscoCatalyst600024PortFXSGatewayReq
}

type ListCiscoCatalyst600024PortFXSGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst600024PortFXSGatewayResponse"` 
	ListCiscoCatalyst600024PortFXSGatewayRes
}

type AddCiscoCatalyst6000E1VoIPGateway struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000E1VoIPGateway"` 
	AddCiscoCatalyst6000E1VoIPGatewayReq
}

type AddCiscoCatalyst6000E1VoIPGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000E1VoIPGatewayResponse"` 
	StandardResponse
}

type UpdateCiscoCatalyst6000E1VoIPGateway struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000E1VoIPGateway"` 
	UpdateCiscoCatalyst6000E1VoIPGatewayReq
}

type UpdateCiscoCatalyst6000E1VoIPGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000E1VoIPGatewayResponse"` 
	StandardResponse
}

type GetCiscoCatalyst6000E1VoIPGateway struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000E1VoIPGateway"` 
	GetCiscoCatalyst6000E1VoIPGatewayReq
}

type GetCiscoCatalyst6000E1VoIPGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000E1VoIPGatewayResponse"` 
	GetCiscoCatalyst6000E1VoIPGatewayRes
}

type RemoveCiscoCatalyst6000E1VoIPGateway struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000E1VoIPGateway"` 
	NameAndGUIDRequest
}

type RemoveCiscoCatalyst6000E1VoIPGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000E1VoIPGatewayResponse"` 
	StandardResponse
}

type ListCiscoCatalyst6000E1VoIPGateway struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000E1VoIPGateway"` 
	ListCiscoCatalyst6000E1VoIPGatewayReq
}

type ListCiscoCatalyst6000E1VoIPGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000E1VoIPGatewayResponse"` 
	ListCiscoCatalyst6000E1VoIPGatewayRes
}

type AddCiscoCatalyst6000T1VoIPGatewayPri struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000T1VoIPGatewayPri"` 
	AddCiscoCatalyst6000T1VoIPGatewayPriReq
}

type AddCiscoCatalyst6000T1VoIPGatewayPriResponse struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000T1VoIPGatewayPriResponse"` 
	StandardResponse
}

type UpdateCiscoCatalyst6000T1VoIPGatewayPri struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000T1VoIPGatewayPri"` 
	UpdateCiscoCatalyst6000T1VoIPGatewayPriReq
}

type UpdateCiscoCatalyst6000T1VoIPGatewayPriResponse struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000T1VoIPGatewayPriResponse"` 
	StandardResponse
}

type GetCiscoCatalyst6000T1VoIPGatewayPri struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000T1VoIPGatewayPri"` 
	GetCiscoCatalyst6000T1VoIPGatewayPriReq
}

type GetCiscoCatalyst6000T1VoIPGatewayPriResponse struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000T1VoIPGatewayPriResponse"` 
	GetCiscoCatalyst6000T1VoIPGatewayPriRes
}

type RemoveCiscoCatalyst6000T1VoIPGatewayPri struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000T1VoIPGatewayPri"` 
	NameAndGUIDRequest
}

type RemoveCiscoCatalyst6000T1VoIPGatewayPriResponse struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000T1VoIPGatewayPriResponse"` 
	StandardResponse
}

type ListCiscoCatalyst6000T1VoIPGatewayPri struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000T1VoIPGatewayPri"` 
	ListCiscoCatalyst6000T1VoIPGatewayPriReq
}

type ListCiscoCatalyst6000T1VoIPGatewayPriResponse struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000T1VoIPGatewayPriResponse"` 
	ListCiscoCatalyst6000T1VoIPGatewayPriRes
}

type AddCiscoCatalyst6000T1VoIPGatewayT1 struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000T1VoIPGatewayT1"` 
	AddCiscoCatalyst6000T1VoIPGatewayT1Req
}

type AddCiscoCatalyst6000T1VoIPGatewayT1Response struct { 
	XMLName xml.Name `xml:"ns:addCiscoCatalyst6000T1VoIPGatewayT1Response"` 
	StandardResponse
}

type UpdateCiscoCatalyst6000T1VoIPGatewayT1 struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000T1VoIPGatewayT1"` 
	UpdateCiscoCatalyst6000T1VoIPGatewayT1Req
}

type UpdateCiscoCatalyst6000T1VoIPGatewayT1Response struct { 
	XMLName xml.Name `xml:"ns:updateCiscoCatalyst6000T1VoIPGatewayT1Response"` 
	StandardResponse
}

type GetCiscoCatalyst6000T1VoIPGatewayT1 struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000T1VoIPGatewayT1"` 
	GetCiscoCatalyst6000T1VoIPGatewayT1Req
}

type GetCiscoCatalyst6000T1VoIPGatewayT1Response struct { 
	XMLName xml.Name `xml:"ns:getCiscoCatalyst6000T1VoIPGatewayT1Response"` 
	GetCiscoCatalyst6000T1VoIPGatewayT1Res
}

type RemoveCiscoCatalyst6000T1VoIPGatewayT1 struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000T1VoIPGatewayT1"` 
	NameAndGUIDRequest
}

type RemoveCiscoCatalyst6000T1VoIPGatewayT1Response struct { 
	XMLName xml.Name `xml:"ns:removeCiscoCatalyst6000T1VoIPGatewayT1Response"` 
	StandardResponse
}

type ListCiscoCatalyst6000T1VoIPGatewayT1 struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000T1VoIPGatewayT1"` 
	ListCiscoCatalyst6000T1VoIPGatewayT1Req
}

type ListCiscoCatalyst6000T1VoIPGatewayT1Response struct { 
	XMLName xml.Name `xml:"ns:listCiscoCatalyst6000T1VoIPGatewayT1Response"` 
	ListCiscoCatalyst6000T1VoIPGatewayT1Res
}

type AddCallPickupGroup struct { 
	XMLName xml.Name `xml:"ns:addCallPickupGroup"` 
	AddCallPickupGroupReq
}

type AddCallPickupGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addCallPickupGroupResponse"` 
	StandardResponse
}

type UpdateCallPickupGroup struct { 
	XMLName xml.Name `xml:"ns:updateCallPickupGroup"` 
	UpdateCallPickupGroupReq
}

type UpdateCallPickupGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateCallPickupGroupResponse"` 
	StandardResponse
}

type GetCallPickupGroup struct { 
	XMLName xml.Name `xml:"ns:getCallPickupGroup"` 
	GetCallPickupGroupReq
}

type GetCallPickupGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getCallPickupGroupResponse"` 
	GetCallPickupGroupRes
}

type RemoveCallPickupGroup struct { 
	XMLName xml.Name `xml:"ns:removeCallPickupGroup"` 
	RemoveCallPickupGroupReq
}

type RemoveCallPickupGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeCallPickupGroupResponse"` 
	StandardResponse
}

type ListCallPickupGroup struct { 
	XMLName xml.Name `xml:"ns:listCallPickupGroup"` 
	ListCallPickupGroupReq
}

type ListCallPickupGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listCallPickupGroupResponse"` 
	ListCallPickupGroupRes
}

type ListRoutePlan struct { 
	XMLName xml.Name `xml:"ns:listRoutePlan"` 
	ListRoutePlanReq
}

type ListRoutePlanResponse struct { 
	XMLName xml.Name `xml:"ns:listRoutePlanResponse"` 
	ListRoutePlanRes
}

type AddGeoLocationPolicy struct { 
	XMLName xml.Name `xml:"ns:addGeoLocationPolicy"` 
	AddGeoLocationPolicyReq
}

type AddGeoLocationPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:addGeoLocationPolicyResponse"` 
	StandardResponse
}

type UpdateGeoLocationPolicy struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocationPolicy"` 
	UpdateGeoLocationPolicyReq
}

type UpdateGeoLocationPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:updateGeoLocationPolicyResponse"` 
	StandardResponse
}

type GetGeoLocationPolicy struct { 
	XMLName xml.Name `xml:"ns:getGeoLocationPolicy"` 
	GetGeoLocationPolicyReq
}

type GetGeoLocationPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:getGeoLocationPolicyResponse"` 
	GetGeoLocationPolicyRes
}

type RemoveGeoLocationPolicy struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocationPolicy"` 
	NameAndGUIDRequest
}

type RemoveGeoLocationPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:removeGeoLocationPolicyResponse"` 
	StandardResponse
}

type ListGeoLocationPolicy struct { 
	XMLName xml.Name `xml:"ns:listGeoLocationPolicy"` 
	ListGeoLocationPolicyReq
}

type ListGeoLocationPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:listGeoLocationPolicyResponse"` 
	ListGeoLocationPolicyRes
}

type AddSipTrunk struct { 
	XMLName xml.Name `xml:"ns:addSipTrunk"` 
	AddSipTrunkReq
}

type AddSipTrunkResponse struct { 
	XMLName xml.Name `xml:"ns:addSipTrunkResponse"` 
	StandardResponse
}

type UpdateSipTrunk struct { 
	XMLName xml.Name `xml:"ns:updateSipTrunk"` 
	UpdateSipTrunkReq
}

type UpdateSipTrunkResponse struct { 
	XMLName xml.Name `xml:"ns:updateSipTrunkResponse"` 
	StandardResponse
}

type GetSipTrunk struct { 
	XMLName xml.Name `xml:"ns:getSipTrunk"` 
	GetSipTrunkReq
}

type GetSipTrunkResponse struct { 
	XMLName xml.Name `xml:"ns:getSipTrunkResponse"` 
	GetSipTrunkRes
}

type RemoveSipTrunk struct { 
	XMLName xml.Name `xml:"ns:removeSipTrunk"` 
	NameAndGUIDRequest
}

type RemoveSipTrunkResponse struct { 
	XMLName xml.Name `xml:"ns:removeSipTrunkResponse"` 
	StandardResponse
}

type ListSipTrunk struct { 
	XMLName xml.Name `xml:"ns:listSipTrunk"` 
	ListSipTrunkReq
}

type ListSipTrunkResponse struct { 
	XMLName xml.Name `xml:"ns:listSipTrunkResponse"` 
	ListSipTrunkRes
}

type UpdateRegionMatrix struct { 
	XMLName xml.Name `xml:"ns:updateRegionMatrix"` 
	UpdateRegionMatrixReq
}

type UpdateRegionMatrixResponse struct { 
	XMLName xml.Name `xml:"ns:updateRegionMatrixResponse"` 
	StandardResponse
}

type AddCalledPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:addCalledPartyTransformationPattern"` 
	AddCalledPartyTransformationPatternReq
}

type AddCalledPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:addCalledPartyTransformationPatternResponse"` 
	StandardResponse
}

type UpdateCalledPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:updateCalledPartyTransformationPattern"` 
	UpdateCalledPartyTransformationPatternReq
}

type UpdateCalledPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateCalledPartyTransformationPatternResponse"` 
	StandardResponse
}

type GetCalledPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:getCalledPartyTransformationPattern"` 
	GetCalledPartyTransformationPatternReq
}

type GetCalledPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:getCalledPartyTransformationPatternResponse"` 
	GetCalledPartyTransformationPatternRes
}

type RemoveCalledPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:removeCalledPartyTransformationPattern"` 
	RemoveCalledPartyTransformationPatternReq
}

type RemoveCalledPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeCalledPartyTransformationPatternResponse"` 
	StandardResponse
}

type ListCalledPartyTransformationPattern struct { 
	XMLName xml.Name `xml:"ns:listCalledPartyTransformationPattern"` 
	ListCalledPartyTransformationPatternReq
}

type ListCalledPartyTransformationPatternResponse struct { 
	XMLName xml.Name `xml:"ns:listCalledPartyTransformationPatternResponse"` 
	ListCalledPartyTransformationPatternRes
}

type AddExternalCallControlProfile struct { 
	XMLName xml.Name `xml:"ns:addExternalCallControlProfile"` 
	AddExternalCallControlProfileReq
}

type AddExternalCallControlProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addExternalCallControlProfileResponse"` 
	StandardResponse
}

type UpdateExternalCallControlProfile struct { 
	XMLName xml.Name `xml:"ns:updateExternalCallControlProfile"` 
	UpdateExternalCallControlProfileReq
}

type UpdateExternalCallControlProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateExternalCallControlProfileResponse"` 
	StandardResponse
}

type GetExternalCallControlProfile struct { 
	XMLName xml.Name `xml:"ns:getExternalCallControlProfile"` 
	GetExternalCallControlProfileReq
}

type GetExternalCallControlProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getExternalCallControlProfileResponse"` 
	GetExternalCallControlProfileRes
}

type RemoveExternalCallControlProfile struct { 
	XMLName xml.Name `xml:"ns:removeExternalCallControlProfile"` 
	NameAndGUIDRequest
}

type RemoveExternalCallControlProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeExternalCallControlProfileResponse"` 
	StandardResponse
}

type ListExternalCallControlProfile struct { 
	XMLName xml.Name `xml:"ns:listExternalCallControlProfile"` 
	ListExternalCallControlProfileReq
}

type ListExternalCallControlProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listExternalCallControlProfileResponse"` 
	ListExternalCallControlProfileRes
}

type AddSafSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:addSafSecurityProfile"` 
	AddSafSecurityProfileReq
}

type AddSafSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addSafSecurityProfileResponse"` 
	StandardResponse
}

type UpdateSafSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:updateSafSecurityProfile"` 
	UpdateSafSecurityProfileReq
}

type UpdateSafSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateSafSecurityProfileResponse"` 
	StandardResponse
}

type GetSafSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:getSafSecurityProfile"` 
	GetSafSecurityProfileReq
}

type GetSafSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getSafSecurityProfileResponse"` 
	GetSafSecurityProfileRes
}

type RemoveSafSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:removeSafSecurityProfile"` 
	NameAndGUIDRequest
}

type RemoveSafSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeSafSecurityProfileResponse"` 
	StandardResponse
}

type ListSafSecurityProfile struct { 
	XMLName xml.Name `xml:"ns:listSafSecurityProfile"` 
	ListSafSecurityProfileReq
}

type ListSafSecurityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listSafSecurityProfileResponse"` 
	ListSafSecurityProfileRes
}

type AddSafForwarder struct { 
	XMLName xml.Name `xml:"ns:addSafForwarder"` 
	AddSafForwarderReq
}

type AddSafForwarderResponse struct { 
	XMLName xml.Name `xml:"ns:addSafForwarderResponse"` 
	StandardResponse
}

type UpdateSafForwarder struct { 
	XMLName xml.Name `xml:"ns:updateSafForwarder"` 
	UpdateSafForwarderReq
}

type UpdateSafForwarderResponse struct { 
	XMLName xml.Name `xml:"ns:updateSafForwarderResponse"` 
	StandardResponse
}

type GetSafForwarder struct { 
	XMLName xml.Name `xml:"ns:getSafForwarder"` 
	GetSafForwarderReq
}

type GetSafForwarderResponse struct { 
	XMLName xml.Name `xml:"ns:getSafForwarderResponse"` 
	GetSafForwarderRes
}

type RemoveSafForwarder struct { 
	XMLName xml.Name `xml:"ns:removeSafForwarder"` 
	NameAndGUIDRequest
}

type RemoveSafForwarderResponse struct { 
	XMLName xml.Name `xml:"ns:removeSafForwarderResponse"` 
	StandardResponse
}

type ListSafForwarder struct { 
	XMLName xml.Name `xml:"ns:listSafForwarder"` 
	ListSafForwarderReq
}

type ListSafForwarderResponse struct { 
	XMLName xml.Name `xml:"ns:listSafForwarderResponse"` 
	ListSafForwarderRes
}

type AddCcdHostedDN struct { 
	XMLName xml.Name `xml:"ns:addCcdHostedDN"` 
	AddCcdHostedDNReq
}

type AddCcdHostedDNResponse struct { 
	XMLName xml.Name `xml:"ns:addCcdHostedDNResponse"` 
	StandardResponse
}

type UpdateCcdHostedDN struct { 
	XMLName xml.Name `xml:"ns:updateCcdHostedDN"` 
	UpdateCcdHostedDNReq
}

type UpdateCcdHostedDNResponse struct { 
	XMLName xml.Name `xml:"ns:updateCcdHostedDNResponse"` 
	StandardResponse
}

type GetCcdHostedDN struct { 
	XMLName xml.Name `xml:"ns:getCcdHostedDN"` 
	GetCcdHostedDNReq
}

type GetCcdHostedDNResponse struct { 
	XMLName xml.Name `xml:"ns:getCcdHostedDNResponse"` 
	GetCcdHostedDNRes
}

type RemoveCcdHostedDN struct { 
	XMLName xml.Name `xml:"ns:removeCcdHostedDN"` 
	RemoveCcdHostedDNReq
}

type RemoveCcdHostedDNResponse struct { 
	XMLName xml.Name `xml:"ns:removeCcdHostedDNResponse"` 
	StandardResponse
}

type ListCcdHostedDN struct { 
	XMLName xml.Name `xml:"ns:listCcdHostedDN"` 
	ListCcdHostedDNReq
}

type ListCcdHostedDNResponse struct { 
	XMLName xml.Name `xml:"ns:listCcdHostedDNResponse"` 
	ListCcdHostedDNRes
}

type AddCcdHostedDNGroup struct { 
	XMLName xml.Name `xml:"ns:addCcdHostedDNGroup"` 
	AddCcdHostedDNGroupReq
}

type AddCcdHostedDNGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addCcdHostedDNGroupResponse"` 
	StandardResponse
}

type UpdateCcdHostedDNGroup struct { 
	XMLName xml.Name `xml:"ns:updateCcdHostedDNGroup"` 
	UpdateCcdHostedDNGroupReq
}

type UpdateCcdHostedDNGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateCcdHostedDNGroupResponse"` 
	StandardResponse
}

type GetCcdHostedDNGroup struct { 
	XMLName xml.Name `xml:"ns:getCcdHostedDNGroup"` 
	GetCcdHostedDNGroupReq
}

type GetCcdHostedDNGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getCcdHostedDNGroupResponse"` 
	GetCcdHostedDNGroupRes
}

type RemoveCcdHostedDNGroup struct { 
	XMLName xml.Name `xml:"ns:removeCcdHostedDNGroup"` 
	NameAndGUIDRequest
}

type RemoveCcdHostedDNGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeCcdHostedDNGroupResponse"` 
	StandardResponse
}

type ListCcdHostedDNGroup struct { 
	XMLName xml.Name `xml:"ns:listCcdHostedDNGroup"` 
	ListCcdHostedDNGroupReq
}

type ListCcdHostedDNGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listCcdHostedDNGroupResponse"` 
	ListCcdHostedDNGroupRes
}

type AddCcdRequestingService struct { 
	XMLName xml.Name `xml:"ns:addCcdRequestingService"` 
	AddCcdRequestingServiceReq
}

type AddCcdRequestingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:addCcdRequestingServiceResponse"` 
	StandardResponse
}

type UpdateCcdRequestingService struct { 
	XMLName xml.Name `xml:"ns:updateCcdRequestingService"` 
	UpdateCcdRequestingServiceReq
}

type UpdateCcdRequestingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:updateCcdRequestingServiceResponse"` 
	StandardResponse
}

type GetCcdRequestingService struct { 
	XMLName xml.Name `xml:"ns:getCcdRequestingService"` 
	GetCcdRequestingServiceReq
}

type GetCcdRequestingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:getCcdRequestingServiceResponse"` 
	GetCcdRequestingServiceRes
}

type RemoveCcdRequestingService struct { 
	XMLName xml.Name `xml:"ns:removeCcdRequestingService"` 
	NameAndGUIDRequest
}

type RemoveCcdRequestingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:removeCcdRequestingServiceResponse"` 
	StandardResponse
}

type UpdateInterClusterServiceProfile struct { 
	XMLName xml.Name `xml:"ns:updateInterClusterServiceProfile"` 
	UpdateInterClusterServiceProfileReq
}

type UpdateInterClusterServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateInterClusterServiceProfileResponse"` 
	StandardResponse
}

type GetInterClusterServiceProfile struct { 
	XMLName xml.Name `xml:"ns:getInterClusterServiceProfile"` 
	GetInterClusterServiceProfileReq
}

type GetInterClusterServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getInterClusterServiceProfileResponse"` 
	GetInterClusterServiceProfileRes
}

type AddRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:addRemoteCluster"` 
	AddRemoteClusterReq
}

type AddRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:addRemoteClusterResponse"` 
	StandardResponse
}

type UpdateRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:updateRemoteCluster"` 
	UpdateRemoteClusterReq
}

type UpdateRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:updateRemoteClusterResponse"` 
	StandardResponse
}

type GetRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:getRemoteCluster"` 
	GetRemoteClusterReq
}

type GetRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:getRemoteClusterResponse"` 
	GetRemoteClusterRes
}

type RemoveRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:removeRemoteCluster"` 
	RemoveRemoteClusterReq
}

type RemoveRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:removeRemoteClusterResponse"` 
	StandardResponse
}

type ListRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:listRemoteCluster"` 
	ListRemoteClusterReq
}

type ListRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:listRemoteClusterResponse"` 
	ListRemoteClusterRes
}

type AddCcdAdvertisingService struct { 
	XMLName xml.Name `xml:"ns:addCcdAdvertisingService"` 
	AddCcdAdvertisingServiceReq
}

type AddCcdAdvertisingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:addCcdAdvertisingServiceResponse"` 
	StandardResponse
}

type UpdateCcdAdvertisingService struct { 
	XMLName xml.Name `xml:"ns:updateCcdAdvertisingService"` 
	UpdateCcdAdvertisingServiceReq
}

type UpdateCcdAdvertisingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:updateCcdAdvertisingServiceResponse"` 
	StandardResponse
}

type GetCcdAdvertisingService struct { 
	XMLName xml.Name `xml:"ns:getCcdAdvertisingService"` 
	GetCcdAdvertisingServiceReq
}

type GetCcdAdvertisingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:getCcdAdvertisingServiceResponse"` 
	GetCcdAdvertisingServiceRes
}

type RemoveCcdAdvertisingService struct { 
	XMLName xml.Name `xml:"ns:removeCcdAdvertisingService"` 
	NameAndGUIDRequest
}

type RemoveCcdAdvertisingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:removeCcdAdvertisingServiceResponse"` 
	StandardResponse
}

type ListCcdAdvertisingService struct { 
	XMLName xml.Name `xml:"ns:listCcdAdvertisingService"` 
	ListCcdAdvertisingServiceReq
}

type ListCcdAdvertisingServiceResponse struct { 
	XMLName xml.Name `xml:"ns:listCcdAdvertisingServiceResponse"` 
	ListCcdAdvertisingServiceRes
}

type AddUnitsToGateway struct { 
	XMLName xml.Name `xml:"ns:addUnitsToGateway"` 
	AddUnitsToGatewayReq
}

type AddUnitsToGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addUnitsToGatewayResponse"` 
	StandardResponse
}

type AddGatewaySubunits struct { 
	XMLName xml.Name `xml:"ns:addGatewaySubunits"` 
	AddGatewaySubunitsReq
}

type AddGatewaySubunitsResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewaySubunitsResponse"` 
	StandardResponse
}

type AddLdapDirectory struct { 
	XMLName xml.Name `xml:"ns:addLdapDirectory"` 
	AddLdapDirectoryReq
}

type AddLdapDirectoryResponse struct { 
	XMLName xml.Name `xml:"ns:addLdapDirectoryResponse"` 
	StandardResponse
}

type UpdateLdapDirectory struct { 
	XMLName xml.Name `xml:"ns:updateLdapDirectory"` 
	UpdateLdapDirectoryReq
}

type UpdateLdapDirectoryResponse struct { 
	XMLName xml.Name `xml:"ns:updateLdapDirectoryResponse"` 
	StandardResponse
}

type GetLdapDirectory struct { 
	XMLName xml.Name `xml:"ns:getLdapDirectory"` 
	GetLdapDirectoryReq
}

type GetLdapDirectoryResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapDirectoryResponse"` 
	GetLdapDirectoryRes
}

type RemoveLdapDirectory struct { 
	XMLName xml.Name `xml:"ns:removeLdapDirectory"` 
	NameAndGUIDRequest
}

type RemoveLdapDirectoryResponse struct { 
	XMLName xml.Name `xml:"ns:removeLdapDirectoryResponse"` 
	StandardResponse
}

type ListLdapDirectory struct { 
	XMLName xml.Name `xml:"ns:listLdapDirectory"` 
	ListLdapDirectoryReq
}

type ListLdapDirectoryResponse struct { 
	XMLName xml.Name `xml:"ns:listLdapDirectoryResponse"` 
	ListLdapDirectoryRes
}

type UpdateEmccFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:updateEmccFeatureConfig"` 
	UpdateEmccFeatureConfigReq
}

type UpdateEmccFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateEmccFeatureConfigResponse"` 
	StandardResponse
}

type GetEmccFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:getEmccFeatureConfig"` 
	GetEmccFeatureConfigReq
}

type GetEmccFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getEmccFeatureConfigResponse"` 
	GetEmccFeatureConfigRes
}

type AddSafCcdPurgeBlockLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:addSafCcdPurgeBlockLearnedRoutes"` 
	AddSafCcdPurgeBlockLearnedRoutesReq
}

type AddSafCcdPurgeBlockLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:addSafCcdPurgeBlockLearnedRoutesResponse"` 
	StandardResponse
}

type UpdateSafCcdPurgeBlockLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:updateSafCcdPurgeBlockLearnedRoutes"` 
	UpdateSafCcdPurgeBlockLearnedRoutesReq
}

type UpdateSafCcdPurgeBlockLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:updateSafCcdPurgeBlockLearnedRoutesResponse"` 
	StandardResponse
}

type GetSafCcdPurgeBlockLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:getSafCcdPurgeBlockLearnedRoutes"` 
	GetSafCcdPurgeBlockLearnedRoutesReq
}

type GetSafCcdPurgeBlockLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:getSafCcdPurgeBlockLearnedRoutesResponse"` 
	GetSafCcdPurgeBlockLearnedRoutesRes
}

type RemoveSafCcdPurgeBlockLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:removeSafCcdPurgeBlockLearnedRoutes"` 
	RemoveSafCcdPurgeBlockLearnedRoutesReq
}

type RemoveSafCcdPurgeBlockLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:removeSafCcdPurgeBlockLearnedRoutesResponse"` 
	StandardResponse
}

type ListSafCcdPurgeBlockLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:listSafCcdPurgeBlockLearnedRoutes"` 
	ListSafCcdPurgeBlockLearnedRoutesReq
}

type ListSafCcdPurgeBlockLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:listSafCcdPurgeBlockLearnedRoutesResponse"` 
	ListSafCcdPurgeBlockLearnedRoutesRes
}

type AddVpnGateway struct { 
	XMLName xml.Name `xml:"ns:addVpnGateway"` 
	AddVpnGatewayReq
}

type AddVpnGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:addVpnGatewayResponse"` 
	StandardResponse
}

type UpdateVpnGateway struct { 
	XMLName xml.Name `xml:"ns:updateVpnGateway"` 
	UpdateVpnGatewayReq
}

type UpdateVpnGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:updateVpnGatewayResponse"` 
	StandardResponse
}

type GetVpnGateway struct { 
	XMLName xml.Name `xml:"ns:getVpnGateway"` 
	GetVpnGatewayReq
}

type GetVpnGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:getVpnGatewayResponse"` 
	GetVpnGatewayRes
}

type RemoveVpnGateway struct { 
	XMLName xml.Name `xml:"ns:removeVpnGateway"` 
	NameAndGUIDRequest
}

type RemoveVpnGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeVpnGatewayResponse"` 
	StandardResponse
}

type ListVpnGateway struct { 
	XMLName xml.Name `xml:"ns:listVpnGateway"` 
	ListVpnGatewayReq
}

type ListVpnGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:listVpnGatewayResponse"` 
	ListVpnGatewayRes
}

type AddVpnGroup struct { 
	XMLName xml.Name `xml:"ns:addVpnGroup"` 
	AddVpnGroupReq
}

type AddVpnGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addVpnGroupResponse"` 
	StandardResponse
}

type UpdateVpnGroup struct { 
	XMLName xml.Name `xml:"ns:updateVpnGroup"` 
	UpdateVpnGroupReq
}

type UpdateVpnGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateVpnGroupResponse"` 
	StandardResponse
}

type GetVpnGroup struct { 
	XMLName xml.Name `xml:"ns:getVpnGroup"` 
	GetVpnGroupReq
}

type GetVpnGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getVpnGroupResponse"` 
	GetVpnGroupRes
}

type RemoveVpnGroup struct { 
	XMLName xml.Name `xml:"ns:removeVpnGroup"` 
	NameAndGUIDRequest
}

type RemoveVpnGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeVpnGroupResponse"` 
	StandardResponse
}

type ListVpnGroup struct { 
	XMLName xml.Name `xml:"ns:listVpnGroup"` 
	ListVpnGroupReq
}

type ListVpnGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listVpnGroupResponse"` 
	ListVpnGroupRes
}

type AddVpnProfile struct { 
	XMLName xml.Name `xml:"ns:addVpnProfile"` 
	AddVpnProfileReq
}

type AddVpnProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addVpnProfileResponse"` 
	StandardResponse
}

type UpdateVpnProfile struct { 
	XMLName xml.Name `xml:"ns:updateVpnProfile"` 
	UpdateVpnProfileReq
}

type UpdateVpnProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateVpnProfileResponse"` 
	StandardResponse
}

type GetVpnProfile struct { 
	XMLName xml.Name `xml:"ns:getVpnProfile"` 
	GetVpnProfileReq
}

type GetVpnProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getVpnProfileResponse"` 
	GetVpnProfileRes
}

type RemoveVpnProfile struct { 
	XMLName xml.Name `xml:"ns:removeVpnProfile"` 
	NameAndGUIDRequest
}

type RemoveVpnProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeVpnProfileResponse"` 
	StandardResponse
}

type ListVpnProfile struct { 
	XMLName xml.Name `xml:"ns:listVpnProfile"` 
	ListVpnProfileReq
}

type ListVpnProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listVpnProfileResponse"` 
	ListVpnProfileRes
}

type AddImeServer struct { 
	XMLName xml.Name `xml:"ns:addImeServer"` 
	AddImeServerReq
}

type AddImeServerResponse struct { 
	XMLName xml.Name `xml:"ns:addImeServerResponse"` 
	StandardResponse
}

type UpdateImeServer struct { 
	XMLName xml.Name `xml:"ns:updateImeServer"` 
	UpdateImeServerReq
}

type UpdateImeServerResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeServerResponse"` 
	StandardResponse
}

type GetImeServer struct { 
	XMLName xml.Name `xml:"ns:getImeServer"` 
	GetImeServerReq
}

type GetImeServerResponse struct { 
	XMLName xml.Name `xml:"ns:getImeServerResponse"` 
	GetImeServerRes
}

type RemoveImeServer struct { 
	XMLName xml.Name `xml:"ns:removeImeServer"` 
	NameAndGUIDRequest
}

type RemoveImeServerResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeServerResponse"` 
	StandardResponse
}

type ListImeServer struct { 
	XMLName xml.Name `xml:"ns:listImeServer"` 
	ListImeServerReq
}

type ListImeServerResponse struct { 
	XMLName xml.Name `xml:"ns:listImeServerResponse"` 
	ListImeServerRes
}

type AddImeRouteFilterGroup struct { 
	XMLName xml.Name `xml:"ns:addImeRouteFilterGroup"` 
	AddImeRouteFilterGroupReq
}

type AddImeRouteFilterGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addImeRouteFilterGroupResponse"` 
	StandardResponse
}

type UpdateImeRouteFilterGroup struct { 
	XMLName xml.Name `xml:"ns:updateImeRouteFilterGroup"` 
	UpdateImeRouteFilterGroupReq
}

type UpdateImeRouteFilterGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeRouteFilterGroupResponse"` 
	StandardResponse
}

type GetImeRouteFilterGroup struct { 
	XMLName xml.Name `xml:"ns:getImeRouteFilterGroup"` 
	GetImeRouteFilterGroupReq
}

type GetImeRouteFilterGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getImeRouteFilterGroupResponse"` 
	GetImeRouteFilterGroupRes
}

type RemoveImeRouteFilterGroup struct { 
	XMLName xml.Name `xml:"ns:removeImeRouteFilterGroup"` 
	NameAndGUIDRequest
}

type RemoveImeRouteFilterGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeRouteFilterGroupResponse"` 
	StandardResponse
}

type ListImeRouteFilterGroup struct { 
	XMLName xml.Name `xml:"ns:listImeRouteFilterGroup"` 
	ListImeRouteFilterGroupReq
}

type ListImeRouteFilterGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listImeRouteFilterGroupResponse"` 
	ListImeRouteFilterGroupRes
}

type AddImeRouteFilterElement struct { 
	XMLName xml.Name `xml:"ns:addImeRouteFilterElement"` 
	AddImeRouteFilterElementReq
}

type AddImeRouteFilterElementResponse struct { 
	XMLName xml.Name `xml:"ns:addImeRouteFilterElementResponse"` 
	StandardResponse
}

type UpdateImeRouteFilterElement struct { 
	XMLName xml.Name `xml:"ns:updateImeRouteFilterElement"` 
	UpdateImeRouteFilterElementReq
}

type UpdateImeRouteFilterElementResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeRouteFilterElementResponse"` 
	StandardResponse
}

type GetImeRouteFilterElement struct { 
	XMLName xml.Name `xml:"ns:getImeRouteFilterElement"` 
	GetImeRouteFilterElementReq
}

type GetImeRouteFilterElementResponse struct { 
	XMLName xml.Name `xml:"ns:getImeRouteFilterElementResponse"` 
	GetImeRouteFilterElementRes
}

type RemoveImeRouteFilterElement struct { 
	XMLName xml.Name `xml:"ns:removeImeRouteFilterElement"` 
	NameAndGUIDRequest
}

type RemoveImeRouteFilterElementResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeRouteFilterElementResponse"` 
	StandardResponse
}

type ListImeRouteFilterElement struct { 
	XMLName xml.Name `xml:"ns:listImeRouteFilterElement"` 
	ListImeRouteFilterElementReq
}

type ListImeRouteFilterElementResponse struct { 
	XMLName xml.Name `xml:"ns:listImeRouteFilterElementResponse"` 
	ListImeRouteFilterElementRes
}

type AddImeClient struct { 
	XMLName xml.Name `xml:"ns:addImeClient"` 
	AddImeClientReq
}

type AddImeClientResponse struct { 
	XMLName xml.Name `xml:"ns:addImeClientResponse"` 
	StandardResponse
}

type UpdateImeClient struct { 
	XMLName xml.Name `xml:"ns:updateImeClient"` 
	UpdateImeClientReq
}

type UpdateImeClientResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeClientResponse"` 
	StandardResponse
}

type GetImeClient struct { 
	XMLName xml.Name `xml:"ns:getImeClient"` 
	GetImeClientReq
}

type GetImeClientResponse struct { 
	XMLName xml.Name `xml:"ns:getImeClientResponse"` 
	GetImeClientRes
}

type RemoveImeClient struct { 
	XMLName xml.Name `xml:"ns:removeImeClient"` 
	NameAndGUIDRequest
}

type RemoveImeClientResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeClientResponse"` 
	StandardResponse
}

type ListImeClient struct { 
	XMLName xml.Name `xml:"ns:listImeClient"` 
	ListImeClientReq
}

type ListImeClientResponse struct { 
	XMLName xml.Name `xml:"ns:listImeClientResponse"` 
	ListImeClientRes
}

type AddImeEnrolledPattern struct { 
	XMLName xml.Name `xml:"ns:addImeEnrolledPattern"` 
	AddImeEnrolledPatternReq
}

type AddImeEnrolledPatternResponse struct { 
	XMLName xml.Name `xml:"ns:addImeEnrolledPatternResponse"` 
	StandardResponse
}

type UpdateImeEnrolledPattern struct { 
	XMLName xml.Name `xml:"ns:updateImeEnrolledPattern"` 
	UpdateImeEnrolledPatternReq
}

type UpdateImeEnrolledPatternResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeEnrolledPatternResponse"` 
	StandardResponse
}

type GetImeEnrolledPattern struct { 
	XMLName xml.Name `xml:"ns:getImeEnrolledPattern"` 
	GetImeEnrolledPatternReq
}

type GetImeEnrolledPatternResponse struct { 
	XMLName xml.Name `xml:"ns:getImeEnrolledPatternResponse"` 
	GetImeEnrolledPatternRes
}

type RemoveImeEnrolledPattern struct { 
	XMLName xml.Name `xml:"ns:removeImeEnrolledPattern"` 
	RemoveImeEnrolledPatternReq
}

type RemoveImeEnrolledPatternResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeEnrolledPatternResponse"` 
	StandardResponse
}

type ListImeEnrolledPattern struct { 
	XMLName xml.Name `xml:"ns:listImeEnrolledPattern"` 
	ListImeEnrolledPatternReq
}

type ListImeEnrolledPatternResponse struct { 
	XMLName xml.Name `xml:"ns:listImeEnrolledPatternResponse"` 
	ListImeEnrolledPatternRes
}

type AddImeEnrolledPatternGroup struct { 
	XMLName xml.Name `xml:"ns:addImeEnrolledPatternGroup"` 
	AddImeEnrolledPatternGroupReq
}

type AddImeEnrolledPatternGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addImeEnrolledPatternGroupResponse"` 
	StandardResponse
}

type UpdateImeEnrolledPatternGroup struct { 
	XMLName xml.Name `xml:"ns:updateImeEnrolledPatternGroup"` 
	UpdateImeEnrolledPatternGroupReq
}

type UpdateImeEnrolledPatternGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeEnrolledPatternGroupResponse"` 
	StandardResponse
}

type GetImeEnrolledPatternGroup struct { 
	XMLName xml.Name `xml:"ns:getImeEnrolledPatternGroup"` 
	GetImeEnrolledPatternGroupReq
}

type GetImeEnrolledPatternGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getImeEnrolledPatternGroupResponse"` 
	GetImeEnrolledPatternGroupRes
}

type RemoveImeEnrolledPatternGroup struct { 
	XMLName xml.Name `xml:"ns:removeImeEnrolledPatternGroup"` 
	NameAndGUIDRequest
}

type RemoveImeEnrolledPatternGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeEnrolledPatternGroupResponse"` 
	StandardResponse
}

type ListImeEnrolledPatternGroup struct { 
	XMLName xml.Name `xml:"ns:listImeEnrolledPatternGroup"` 
	ListImeEnrolledPatternGroupReq
}

type ListImeEnrolledPatternGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listImeEnrolledPatternGroupResponse"` 
	ListImeEnrolledPatternGroupRes
}

type AddImeExclusionNumber struct { 
	XMLName xml.Name `xml:"ns:addImeExclusionNumber"` 
	AddImeExclusionNumberReq
}

type AddImeExclusionNumberResponse struct { 
	XMLName xml.Name `xml:"ns:addImeExclusionNumberResponse"` 
	StandardResponse
}

type UpdateImeExclusionNumber struct { 
	XMLName xml.Name `xml:"ns:updateImeExclusionNumber"` 
	UpdateImeExclusionNumberReq
}

type UpdateImeExclusionNumberResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeExclusionNumberResponse"` 
	StandardResponse
}

type GetImeExclusionNumber struct { 
	XMLName xml.Name `xml:"ns:getImeExclusionNumber"` 
	GetImeExclusionNumberReq
}

type GetImeExclusionNumberResponse struct { 
	XMLName xml.Name `xml:"ns:getImeExclusionNumberResponse"` 
	GetImeExclusionNumberRes
}

type RemoveImeExclusionNumber struct { 
	XMLName xml.Name `xml:"ns:removeImeExclusionNumber"` 
	RemoveImeExclusionNumberReq
}

type RemoveImeExclusionNumberResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeExclusionNumberResponse"` 
	StandardResponse
}

type ListImeExclusionNumber struct { 
	XMLName xml.Name `xml:"ns:listImeExclusionNumber"` 
	ListImeExclusionNumberReq
}

type ListImeExclusionNumberResponse struct { 
	XMLName xml.Name `xml:"ns:listImeExclusionNumberResponse"` 
	ListImeExclusionNumberRes
}

type AddImeExclusionNumberGroup struct { 
	XMLName xml.Name `xml:"ns:addImeExclusionNumberGroup"` 
	AddImeExclusionNumberGroupReq
}

type AddImeExclusionNumberGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addImeExclusionNumberGroupResponse"` 
	StandardResponse
}

type UpdateImeExclusionNumberGroup struct { 
	XMLName xml.Name `xml:"ns:updateImeExclusionNumberGroup"` 
	UpdateImeExclusionNumberGroupReq
}

type UpdateImeExclusionNumberGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeExclusionNumberGroupResponse"` 
	StandardResponse
}

type GetImeExclusionNumberGroup struct { 
	XMLName xml.Name `xml:"ns:getImeExclusionNumberGroup"` 
	GetImeExclusionNumberGroupReq
}

type GetImeExclusionNumberGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getImeExclusionNumberGroupResponse"` 
	GetImeExclusionNumberGroupRes
}

type RemoveImeExclusionNumberGroup struct { 
	XMLName xml.Name `xml:"ns:removeImeExclusionNumberGroup"` 
	NameAndGUIDRequest
}

type RemoveImeExclusionNumberGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeExclusionNumberGroupResponse"` 
	StandardResponse
}

type ListImeExclusionNumberGroup struct { 
	XMLName xml.Name `xml:"ns:listImeExclusionNumberGroup"` 
	ListImeExclusionNumberGroupReq
}

type ListImeExclusionNumberGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listImeExclusionNumberGroupResponse"` 
	ListImeExclusionNumberGroupRes
}

type AddImeFirewall struct { 
	XMLName xml.Name `xml:"ns:addImeFirewall"` 
	AddImeFirewallReq
}

type AddImeFirewallResponse struct { 
	XMLName xml.Name `xml:"ns:addImeFirewallResponse"` 
	StandardResponse
}

type UpdateImeFirewall struct { 
	XMLName xml.Name `xml:"ns:updateImeFirewall"` 
	UpdateImeFirewallReq
}

type UpdateImeFirewallResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeFirewallResponse"` 
	StandardResponse
}

type GetImeFirewall struct { 
	XMLName xml.Name `xml:"ns:getImeFirewall"` 
	GetImeFirewallReq
}

type GetImeFirewallResponse struct { 
	XMLName xml.Name `xml:"ns:getImeFirewallResponse"` 
	GetImeFirewallRes
}

type RemoveImeFirewall struct { 
	XMLName xml.Name `xml:"ns:removeImeFirewall"` 
	NameAndGUIDRequest
}

type RemoveImeFirewallResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeFirewallResponse"` 
	StandardResponse
}

type ListImeFirewall struct { 
	XMLName xml.Name `xml:"ns:listImeFirewall"` 
	ListImeFirewallReq
}

type ListImeFirewallResponse struct { 
	XMLName xml.Name `xml:"ns:listImeFirewallResponse"` 
	ListImeFirewallRes
}

type AddImeE164Transformation struct { 
	XMLName xml.Name `xml:"ns:addImeE164Transformation"` 
	AddImeE164TransformationReq
}

type AddImeE164TransformationResponse struct { 
	XMLName xml.Name `xml:"ns:addImeE164TransformationResponse"` 
	StandardResponse
}

type UpdateImeE164Transformation struct { 
	XMLName xml.Name `xml:"ns:updateImeE164Transformation"` 
	UpdateImeE164TransformationReq
}

type UpdateImeE164TransformationResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeE164TransformationResponse"` 
	StandardResponse
}

type GetImeE164Transformation struct { 
	XMLName xml.Name `xml:"ns:getImeE164Transformation"` 
	GetImeE164TransformationReq
}

type GetImeE164TransformationResponse struct { 
	XMLName xml.Name `xml:"ns:getImeE164TransformationResponse"` 
	GetImeE164TransformationRes
}

type RemoveImeE164Transformation struct { 
	XMLName xml.Name `xml:"ns:removeImeE164Transformation"` 
	NameAndGUIDRequest
}

type RemoveImeE164TransformationResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeE164TransformationResponse"` 
	StandardResponse
}

type ListImeE164Transformation struct { 
	XMLName xml.Name `xml:"ns:listImeE164Transformation"` 
	ListImeE164TransformationReq
}

type ListImeE164TransformationResponse struct { 
	XMLName xml.Name `xml:"ns:listImeE164TransformationResponse"` 
	ListImeE164TransformationRes
}

type AddTransformationProfile struct { 
	XMLName xml.Name `xml:"ns:addTransformationProfile"` 
	AddTransformationProfileReq
}

type AddTransformationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addTransformationProfileResponse"` 
	StandardResponse
}

type UpdateTransformationProfile struct { 
	XMLName xml.Name `xml:"ns:updateTransformationProfile"` 
	UpdateTransformationProfileReq
}

type UpdateTransformationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateTransformationProfileResponse"` 
	StandardResponse
}

type GetTransformationProfile struct { 
	XMLName xml.Name `xml:"ns:getTransformationProfile"` 
	GetTransformationProfileReq
}

type GetTransformationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getTransformationProfileResponse"` 
	GetTransformationProfileRes
}

type RemoveTransformationProfile struct { 
	XMLName xml.Name `xml:"ns:removeTransformationProfile"` 
	NameAndGUIDRequest
}

type RemoveTransformationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeTransformationProfileResponse"` 
	StandardResponse
}

type ListTransformationProfile struct { 
	XMLName xml.Name `xml:"ns:listTransformationProfile"` 
	ListTransformationProfileReq
}

type ListTransformationProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listTransformationProfileResponse"` 
	ListTransformationProfileRes
}

type AddFallbackProfile struct { 
	XMLName xml.Name `xml:"ns:addFallbackProfile"` 
	AddFallbackProfileReq
}

type AddFallbackProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addFallbackProfileResponse"` 
	StandardResponse
}

type UpdateFallbackProfile struct { 
	XMLName xml.Name `xml:"ns:updateFallbackProfile"` 
	UpdateFallbackProfileReq
}

type UpdateFallbackProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateFallbackProfileResponse"` 
	StandardResponse
}

type GetFallbackProfile struct { 
	XMLName xml.Name `xml:"ns:getFallbackProfile"` 
	GetFallbackProfileReq
}

type GetFallbackProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getFallbackProfileResponse"` 
	GetFallbackProfileRes
}

type RemoveFallbackProfile struct { 
	XMLName xml.Name `xml:"ns:removeFallbackProfile"` 
	NameAndGUIDRequest
}

type RemoveFallbackProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeFallbackProfileResponse"` 
	StandardResponse
}

type ListFallbackProfile struct { 
	XMLName xml.Name `xml:"ns:listFallbackProfile"` 
	ListFallbackProfileReq
}

type ListFallbackProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listFallbackProfileResponse"` 
	ListFallbackProfileRes
}

type AddLdapFilter struct { 
	XMLName xml.Name `xml:"ns:addLdapFilter"` 
	AddLdapFilterReq
}

type AddLdapFilterResponse struct { 
	XMLName xml.Name `xml:"ns:addLdapFilterResponse"` 
	StandardResponse
}

type UpdateLdapFilter struct { 
	XMLName xml.Name `xml:"ns:updateLdapFilter"` 
	UpdateLdapFilterReq
}

type UpdateLdapFilterResponse struct { 
	XMLName xml.Name `xml:"ns:updateLdapFilterResponse"` 
	StandardResponse
}

type GetLdapFilter struct { 
	XMLName xml.Name `xml:"ns:getLdapFilter"` 
	GetLdapFilterReq
}

type GetLdapFilterResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapFilterResponse"` 
	GetLdapFilterRes
}

type RemoveLdapFilter struct { 
	XMLName xml.Name `xml:"ns:removeLdapFilter"` 
	NameAndGUIDRequest
}

type RemoveLdapFilterResponse struct { 
	XMLName xml.Name `xml:"ns:removeLdapFilterResponse"` 
	StandardResponse
}

type ListLdapFilter struct { 
	XMLName xml.Name `xml:"ns:listLdapFilter"` 
	ListLdapFilterReq
}

type ListLdapFilterResponse struct { 
	XMLName xml.Name `xml:"ns:listLdapFilterResponse"` 
	ListLdapFilterRes
}

type AddAppServerInfo struct { 
	XMLName xml.Name `xml:"ns:addAppServerInfo"` 
	AddAppServerInfoReq
}

type AddAppServerInfoResponse struct { 
	XMLName xml.Name `xml:"ns:addAppServerInfoResponse"` 
	StandardResponse
}

type UpdateAppServerInfo struct { 
	XMLName xml.Name `xml:"ns:updateAppServerInfo"` 
	UpdateAppServerInfoReq
}

type UpdateAppServerInfoResponse struct { 
	XMLName xml.Name `xml:"ns:updateAppServerInfoResponse"` 
	StandardResponse
}

type UpdateTvsCertificate struct { 
	XMLName xml.Name `xml:"ns:updateTvsCertificate"` 
	UpdateTvsCertificateReq
}

type UpdateTvsCertificateResponse struct { 
	XMLName xml.Name `xml:"ns:updateTvsCertificateResponse"` 
	StandardResponse
}

type GetTvsCertificate struct { 
	XMLName xml.Name `xml:"ns:getTvsCertificate"` 
	GetTvsCertificateReq
}

type GetTvsCertificateResponse struct { 
	XMLName xml.Name `xml:"ns:getTvsCertificateResponse"` 
	GetTvsCertificateRes
}

type ListTvsCertificate struct { 
	XMLName xml.Name `xml:"ns:listTvsCertificate"` 
	ListTvsCertificateReq
}

type ListTvsCertificateResponse struct { 
	XMLName xml.Name `xml:"ns:listTvsCertificateResponse"` 
	ListTvsCertificateRes
}

type AddFeatureControlPolicy struct { 
	XMLName xml.Name `xml:"ns:addFeatureControlPolicy"` 
	AddFeatureControlPolicyReq
}

type AddFeatureControlPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:addFeatureControlPolicyResponse"` 
	StandardResponse
}

type UpdateFeatureControlPolicy struct { 
	XMLName xml.Name `xml:"ns:updateFeatureControlPolicy"` 
	UpdateFeatureControlPolicyReq
}

type UpdateFeatureControlPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:updateFeatureControlPolicyResponse"` 
	StandardResponse
}

type GetFeatureControlPolicy struct { 
	XMLName xml.Name `xml:"ns:getFeatureControlPolicy"` 
	GetFeatureControlPolicyReq
}

type GetFeatureControlPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:getFeatureControlPolicyResponse"` 
	GetFeatureControlPolicyRes
}

type RemoveFeatureControlPolicy struct { 
	XMLName xml.Name `xml:"ns:removeFeatureControlPolicy"` 
	NameAndGUIDRequest
}

type RemoveFeatureControlPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:removeFeatureControlPolicyResponse"` 
	StandardResponse
}

type ListFeatureControlPolicy struct { 
	XMLName xml.Name `xml:"ns:listFeatureControlPolicy"` 
	ListFeatureControlPolicyReq
}

type ListFeatureControlPolicyResponse struct { 
	XMLName xml.Name `xml:"ns:listFeatureControlPolicyResponse"` 
	ListFeatureControlPolicyRes
}

type AddMobilityProfile struct { 
	XMLName xml.Name `xml:"ns:addMobilityProfile"` 
	AddMobilityProfileReq
}

type AddMobilityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addMobilityProfileResponse"` 
	StandardResponse
}

type UpdateMobilityProfile struct { 
	XMLName xml.Name `xml:"ns:updateMobilityProfile"` 
	UpdateMobilityProfileReq
}

type UpdateMobilityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateMobilityProfileResponse"` 
	StandardResponse
}

type GetMobilityProfile struct { 
	XMLName xml.Name `xml:"ns:getMobilityProfile"` 
	GetMobilityProfileReq
}

type GetMobilityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getMobilityProfileResponse"` 
	GetMobilityProfileRes
}

type RemoveMobilityProfile struct { 
	XMLName xml.Name `xml:"ns:removeMobilityProfile"` 
	NameAndGUIDRequest
}

type RemoveMobilityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeMobilityProfileResponse"` 
	StandardResponse
}

type ListMobilityProfile struct { 
	XMLName xml.Name `xml:"ns:listMobilityProfile"` 
	ListMobilityProfileReq
}

type ListMobilityProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listMobilityProfileResponse"` 
	ListMobilityProfileRes
}

type AddEnterpriseFeatureAccessConfiguration struct { 
	XMLName xml.Name `xml:"ns:addEnterpriseFeatureAccessConfiguration"` 
	AddEnterpriseFeatureAccessConfigurationReq
}

type AddEnterpriseFeatureAccessConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:addEnterpriseFeatureAccessConfigurationResponse"` 
	StandardResponse
}

type UpdateEnterpriseFeatureAccessConfiguration struct { 
	XMLName xml.Name `xml:"ns:updateEnterpriseFeatureAccessConfiguration"` 
	UpdateEnterpriseFeatureAccessConfigurationReq
}

type UpdateEnterpriseFeatureAccessConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:updateEnterpriseFeatureAccessConfigurationResponse"` 
	StandardResponse
}

type GetEnterpriseFeatureAccessConfiguration struct { 
	XMLName xml.Name `xml:"ns:getEnterpriseFeatureAccessConfiguration"` 
	GetEnterpriseFeatureAccessConfigurationReq
}

type GetEnterpriseFeatureAccessConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:getEnterpriseFeatureAccessConfigurationResponse"` 
	GetEnterpriseFeatureAccessConfigurationRes
}

type RemoveEnterpriseFeatureAccessConfiguration struct { 
	XMLName xml.Name `xml:"ns:removeEnterpriseFeatureAccessConfiguration"` 
	RemoveEnterpriseFeatureAccessConfigurationReq
}

type RemoveEnterpriseFeatureAccessConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:removeEnterpriseFeatureAccessConfigurationResponse"` 
	StandardResponse
}

type ListEnterpriseFeatureAccessConfiguration struct { 
	XMLName xml.Name `xml:"ns:listEnterpriseFeatureAccessConfiguration"` 
	ListEnterpriseFeatureAccessConfigurationReq
}

type ListEnterpriseFeatureAccessConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:listEnterpriseFeatureAccessConfigurationResponse"` 
	ListEnterpriseFeatureAccessConfigurationRes
}

type AddHandoffConfiguration struct { 
	XMLName xml.Name `xml:"ns:addHandoffConfiguration"` 
	AddHandoffConfigurationReq
}

type AddHandoffConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:addHandoffConfigurationResponse"` 
	StandardResponse
}

type UpdateHandoffConfiguration struct { 
	XMLName xml.Name `xml:"ns:updateHandoffConfiguration"` 
	UpdateHandoffConfigurationReq
}

type UpdateHandoffConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:updateHandoffConfigurationResponse"` 
	StandardResponse
}

type GetHandoffConfiguration struct { 
	XMLName xml.Name `xml:"ns:getHandoffConfiguration"` 
	GetHandoffConfigurationReq
}

type GetHandoffConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:getHandoffConfigurationResponse"` 
	GetHandoffConfigurationRes
}

type RemoveHandoffConfiguration struct { 
	XMLName xml.Name `xml:"ns:removeHandoffConfiguration"` 
	RemoveHandoffConfigurationReq
}

type RemoveHandoffConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:removeHandoffConfigurationResponse"` 
	StandardResponse
}

type AddCalledPartyTracing struct { 
	XMLName xml.Name `xml:"ns:addCalledPartyTracing"` 
	AddCalledPartyTracingReq
}

type AddCalledPartyTracingResponse struct { 
	XMLName xml.Name `xml:"ns:addCalledPartyTracingResponse"` 
	StandardResponse
}

type RemoveCalledPartyTracing struct { 
	XMLName xml.Name `xml:"ns:removeCalledPartyTracing"` 
	RemoveCalledPartyTracingReq
}

type RemoveCalledPartyTracingResponse struct { 
	XMLName xml.Name `xml:"ns:removeCalledPartyTracingResponse"` 
	StandardResponse
}

type ListCalledPartyTracing struct { 
	XMLName xml.Name `xml:"ns:listCalledPartyTracing"` 
	ListCalledPartyTracingReq
}

type ListCalledPartyTracingResponse struct { 
	XMLName xml.Name `xml:"ns:listCalledPartyTracingResponse"` 
	ListCalledPartyTracingRes
}

type AddSIPNormalizationScript struct { 
	XMLName xml.Name `xml:"ns:addSIPNormalizationScript"` 
	AddSIPNormalizationScriptReq
}

type AddSIPNormalizationScriptResponse struct { 
	XMLName xml.Name `xml:"ns:addSIPNormalizationScriptResponse"` 
	StandardResponse
}

type UpdateSIPNormalizationScript struct { 
	XMLName xml.Name `xml:"ns:updateSIPNormalizationScript"` 
	UpdateSIPNormalizationScriptReq
}

type UpdateSIPNormalizationScriptResponse struct { 
	XMLName xml.Name `xml:"ns:updateSIPNormalizationScriptResponse"` 
	StandardResponse
}

type GetSIPNormalizationScript struct { 
	XMLName xml.Name `xml:"ns:getSIPNormalizationScript"` 
	GetSIPNormalizationScriptReq
}

type GetSIPNormalizationScriptResponse struct { 
	XMLName xml.Name `xml:"ns:getSIPNormalizationScriptResponse"` 
	GetSIPNormalizationScriptRes
}

type RemoveSIPNormalizationScript struct { 
	XMLName xml.Name `xml:"ns:removeSIPNormalizationScript"` 
	NameAndGUIDRequest
}

type RemoveSIPNormalizationScriptResponse struct { 
	XMLName xml.Name `xml:"ns:removeSIPNormalizationScriptResponse"` 
	StandardResponse
}

type ListSIPNormalizationScript struct { 
	XMLName xml.Name `xml:"ns:listSIPNormalizationScript"` 
	ListSIPNormalizationScriptReq
}

type ListSIPNormalizationScriptResponse struct { 
	XMLName xml.Name `xml:"ns:listSIPNormalizationScriptResponse"` 
	ListSIPNormalizationScriptRes
}

type AddCustomUserField struct { 
	XMLName xml.Name `xml:"ns:addCustomUserField"` 
	AddCustomUserFieldReq
}

type AddCustomUserFieldResponse struct { 
	XMLName xml.Name `xml:"ns:addCustomUserFieldResponse"` 
	StandardResponse
}

type UpdateCustomUserField struct { 
	XMLName xml.Name `xml:"ns:updateCustomUserField"` 
	UpdateCustomUserFieldReq
}

type UpdateCustomUserFieldResponse struct { 
	XMLName xml.Name `xml:"ns:updateCustomUserFieldResponse"` 
	StandardResponse
}

type GetCustomUserField struct { 
	XMLName xml.Name `xml:"ns:getCustomUserField"` 
	GetCustomUserFieldReq
}

type GetCustomUserFieldResponse struct { 
	XMLName xml.Name `xml:"ns:getCustomUserFieldResponse"` 
	GetCustomUserFieldRes
}

type RemoveCustomUserField struct { 
	XMLName xml.Name `xml:"ns:removeCustomUserField"` 
	RemoveCustomUserFieldReq
}

type RemoveCustomUserFieldResponse struct { 
	XMLName xml.Name `xml:"ns:removeCustomUserFieldResponse"` 
	StandardResponse
}

type ListCustomUserField struct { 
	XMLName xml.Name `xml:"ns:listCustomUserField"` 
	ListCustomUserFieldReq
}

type ListCustomUserFieldResponse struct { 
	XMLName xml.Name `xml:"ns:listCustomUserFieldResponse"` 
	ListCustomUserFieldRes
}

type AddGatewaySccpEndpoints struct { 
	XMLName xml.Name `xml:"ns:addGatewaySccpEndpoints"` 
	AddGatewaySccpEndpointsReq
}

type AddGatewaySccpEndpointsResponse struct { 
	XMLName xml.Name `xml:"ns:addGatewaySccpEndpointsResponse"` 
	StandardResponse
}

type UpdateGatewaySccpEndpoints struct { 
	XMLName xml.Name `xml:"ns:updateGatewaySccpEndpoints"` 
	UpdateGatewaySccpEndpointsReq
}

type UpdateGatewaySccpEndpointsResponse struct { 
	XMLName xml.Name `xml:"ns:updateGatewaySccpEndpointsResponse"` 
	StandardResponse
}

type GetGatewaySccpEndpoints struct { 
	XMLName xml.Name `xml:"ns:getGatewaySccpEndpoints"` 
	GetGatewaySccpEndpointsReq
}

type GetGatewaySccpEndpointsResponse struct { 
	XMLName xml.Name `xml:"ns:getGatewaySccpEndpointsResponse"` 
	GetGatewaySccpEndpointsRes
}

type RemoveGatewaySccpEndpoints struct { 
	XMLName xml.Name `xml:"ns:removeGatewaySccpEndpoints"` 
	NameAndGUIDRequest
}

type RemoveGatewaySccpEndpointsResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewaySccpEndpointsResponse"` 
	StandardResponse
}

type AddBillingServer struct { 
	XMLName xml.Name `xml:"ns:addBillingServer"` 
	AddBillingServerReq
}

type AddBillingServerResponse struct { 
	XMLName xml.Name `xml:"ns:addBillingServerResponse"` 
	StandardResponse
}

type ListBillingServer struct { 
	XMLName xml.Name `xml:"ns:listBillingServer"` 
	ListBillingServerReq
}

type ListBillingServerResponse struct { 
	XMLName xml.Name `xml:"ns:listBillingServerResponse"` 
	ListBillingServerRes
}

type AddLbmGroup struct { 
	XMLName xml.Name `xml:"ns:addLbmGroup"` 
	AddLbmGroupReq
}

type AddLbmGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addLbmGroupResponse"` 
	StandardResponse
}

type UpdateLbmGroup struct { 
	XMLName xml.Name `xml:"ns:updateLbmGroup"` 
	UpdateLbmGroupReq
}

type UpdateLbmGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateLbmGroupResponse"` 
	StandardResponse
}

type GetLbmGroup struct { 
	XMLName xml.Name `xml:"ns:getLbmGroup"` 
	GetLbmGroupReq
}

type GetLbmGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getLbmGroupResponse"` 
	GetLbmGroupRes
}

type RemoveLbmGroup struct { 
	XMLName xml.Name `xml:"ns:removeLbmGroup"` 
	NameAndGUIDRequest
}

type RemoveLbmGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeLbmGroupResponse"` 
	StandardResponse
}

type ListLbmGroup struct { 
	XMLName xml.Name `xml:"ns:listLbmGroup"` 
	ListLbmGroupReq
}

type ListLbmGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listLbmGroupResponse"` 
	ListLbmGroupRes
}

type AddAnnouncement struct { 
	XMLName xml.Name `xml:"ns:addAnnouncement"` 
	AddAnnouncementReq
}

type AddAnnouncementResponse struct { 
	XMLName xml.Name `xml:"ns:addAnnouncementResponse"` 
	StandardResponse
}

type UpdateAnnouncement struct { 
	XMLName xml.Name `xml:"ns:updateAnnouncement"` 
	UpdateAnnouncementReq
}

type UpdateAnnouncementResponse struct { 
	XMLName xml.Name `xml:"ns:updateAnnouncementResponse"` 
	StandardResponse
}

type GetAnnouncement struct { 
	XMLName xml.Name `xml:"ns:getAnnouncement"` 
	GetAnnouncementReq
}

type GetAnnouncementResponse struct { 
	XMLName xml.Name `xml:"ns:getAnnouncementResponse"` 
	GetAnnouncementRes
}

type RemoveAnnouncement struct { 
	XMLName xml.Name `xml:"ns:removeAnnouncement"` 
	NameAndGUIDRequest
}

type RemoveAnnouncementResponse struct { 
	XMLName xml.Name `xml:"ns:removeAnnouncementResponse"` 
	StandardResponse
}

type ListAnnouncement struct { 
	XMLName xml.Name `xml:"ns:listAnnouncement"` 
	ListAnnouncementReq
}

type ListAnnouncementResponse struct { 
	XMLName xml.Name `xml:"ns:listAnnouncementResponse"` 
	ListAnnouncementRes
}

type AddServiceProfile struct { 
	XMLName xml.Name `xml:"ns:addServiceProfile"` 
	AddServiceProfileReq
}

type AddServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:addServiceProfileResponse"` 
	StandardResponse
}

type UpdateServiceProfile struct { 
	XMLName xml.Name `xml:"ns:updateServiceProfile"` 
	UpdateServiceProfileReq
}

type UpdateServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:updateServiceProfileResponse"` 
	StandardResponse
}

type GetServiceProfile struct { 
	XMLName xml.Name `xml:"ns:getServiceProfile"` 
	GetServiceProfileReq
}

type GetServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:getServiceProfileResponse"` 
	GetServiceProfileRes
}

type RemoveServiceProfile struct { 
	XMLName xml.Name `xml:"ns:removeServiceProfile"` 
	NameAndGUIDRequest
}

type RemoveServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:removeServiceProfileResponse"` 
	StandardResponse
}

type ListServiceProfile struct { 
	XMLName xml.Name `xml:"ns:listServiceProfile"` 
	ListServiceProfileReq
}

type ListServiceProfileResponse struct { 
	XMLName xml.Name `xml:"ns:listServiceProfileResponse"` 
	ListServiceProfileRes
}

type AddLdapSyncCustomField struct { 
	XMLName xml.Name `xml:"ns:addLdapSyncCustomField"` 
	AddLdapSyncCustomFieldReq
}

type AddLdapSyncCustomFieldResponse struct { 
	XMLName xml.Name `xml:"ns:addLdapSyncCustomFieldResponse"` 
	StandardResponse
}

type UpdateLdapSyncCustomField struct { 
	XMLName xml.Name `xml:"ns:updateLdapSyncCustomField"` 
	UpdateLdapSyncCustomFieldReq
}

type UpdateLdapSyncCustomFieldResponse struct { 
	XMLName xml.Name `xml:"ns:updateLdapSyncCustomFieldResponse"` 
	StandardResponse
}

type GetLdapSyncCustomField struct { 
	XMLName xml.Name `xml:"ns:getLdapSyncCustomField"` 
	GetLdapSyncCustomFieldReq
}

type GetLdapSyncCustomFieldResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapSyncCustomFieldResponse"` 
	GetLdapSyncCustomFieldRes
}

type RemoveLdapSyncCustomField struct { 
	XMLName xml.Name `xml:"ns:removeLdapSyncCustomField"` 
	RemoveLdapSyncCustomFieldReq
}

type RemoveLdapSyncCustomFieldResponse struct { 
	XMLName xml.Name `xml:"ns:removeLdapSyncCustomFieldResponse"` 
	StandardResponse
}

type AddAudioCodecPreferenceList struct { 
	XMLName xml.Name `xml:"ns:addAudioCodecPreferenceList"` 
	AddAudioCodecPreferenceListReq
}

type AddAudioCodecPreferenceListResponse struct { 
	XMLName xml.Name `xml:"ns:addAudioCodecPreferenceListResponse"` 
	StandardResponse
}

type UpdateAudioCodecPreferenceList struct { 
	XMLName xml.Name `xml:"ns:updateAudioCodecPreferenceList"` 
	UpdateAudioCodecPreferenceListReq
}

type UpdateAudioCodecPreferenceListResponse struct { 
	XMLName xml.Name `xml:"ns:updateAudioCodecPreferenceListResponse"` 
	StandardResponse
}

type GetAudioCodecPreferenceList struct { 
	XMLName xml.Name `xml:"ns:getAudioCodecPreferenceList"` 
	GetAudioCodecPreferenceListReq
}

type GetAudioCodecPreferenceListResponse struct { 
	XMLName xml.Name `xml:"ns:getAudioCodecPreferenceListResponse"` 
	GetAudioCodecPreferenceListRes
}

type RemoveAudioCodecPreferenceList struct { 
	XMLName xml.Name `xml:"ns:removeAudioCodecPreferenceList"` 
	NameAndGUIDRequest
}

type RemoveAudioCodecPreferenceListResponse struct { 
	XMLName xml.Name `xml:"ns:removeAudioCodecPreferenceListResponse"` 
	StandardResponse
}

type ListAudioCodecPreferenceList struct { 
	XMLName xml.Name `xml:"ns:listAudioCodecPreferenceList"` 
	ListAudioCodecPreferenceListReq
}

type ListAudioCodecPreferenceListResponse struct { 
	XMLName xml.Name `xml:"ns:listAudioCodecPreferenceListResponse"` 
	ListAudioCodecPreferenceListRes
}

type AddUcService struct { 
	XMLName xml.Name `xml:"ns:addUcService"` 
	AddUcServiceReq
}

type AddUcServiceResponse struct { 
	XMLName xml.Name `xml:"ns:addUcServiceResponse"` 
	StandardResponse
}

type UpdateUcService struct { 
	XMLName xml.Name `xml:"ns:updateUcService"` 
	UpdateUcServiceReq
}

type UpdateUcServiceResponse struct { 
	XMLName xml.Name `xml:"ns:updateUcServiceResponse"` 
	StandardResponse
}

type GetUcService struct { 
	XMLName xml.Name `xml:"ns:getUcService"` 
	GetUcServiceReq
}

type GetUcServiceResponse struct { 
	XMLName xml.Name `xml:"ns:getUcServiceResponse"` 
	GetUcServiceRes
}

type RemoveUcService struct { 
	XMLName xml.Name `xml:"ns:removeUcService"` 
	NameAndGUIDRequest
}

type RemoveUcServiceResponse struct { 
	XMLName xml.Name `xml:"ns:removeUcServiceResponse"` 
	StandardResponse
}

type ListUcService struct { 
	XMLName xml.Name `xml:"ns:listUcService"` 
	ListUcServiceReq
}

type ListUcServiceResponse struct { 
	XMLName xml.Name `xml:"ns:listUcServiceResponse"` 
	ListUcServiceRes
}

type AddLbmHubGroup struct { 
	XMLName xml.Name `xml:"ns:addLbmHubGroup"` 
	AddLbmHubGroupReq
}

type AddLbmHubGroupResponse struct { 
	XMLName xml.Name `xml:"ns:addLbmHubGroupResponse"` 
	StandardResponse
}

type UpdateLbmHubGroup struct { 
	XMLName xml.Name `xml:"ns:updateLbmHubGroup"` 
	UpdateLbmHubGroupReq
}

type UpdateLbmHubGroupResponse struct { 
	XMLName xml.Name `xml:"ns:updateLbmHubGroupResponse"` 
	StandardResponse
}

type GetLbmHubGroup struct { 
	XMLName xml.Name `xml:"ns:getLbmHubGroup"` 
	GetLbmHubGroupReq
}

type GetLbmHubGroupResponse struct { 
	XMLName xml.Name `xml:"ns:getLbmHubGroupResponse"` 
	GetLbmHubGroupRes
}

type RemoveLbmHubGroup struct { 
	XMLName xml.Name `xml:"ns:removeLbmHubGroup"` 
	NameAndGUIDRequest
}

type RemoveLbmHubGroupResponse struct { 
	XMLName xml.Name `xml:"ns:removeLbmHubGroupResponse"` 
	StandardResponse
}

type ListLbmHubGroup struct { 
	XMLName xml.Name `xml:"ns:listLbmHubGroup"` 
	ListLbmHubGroupReq
}

type ListLbmHubGroupResponse struct { 
	XMLName xml.Name `xml:"ns:listLbmHubGroupResponse"` 
	ListLbmHubGroupRes
}

type AddImportedDirectoryUriCatalogs struct { 
	XMLName xml.Name `xml:"ns:addImportedDirectoryUriCatalogs"` 
	AddImportedDirectoryUriCatalogsReq
}

type AddImportedDirectoryUriCatalogsResponse struct { 
	XMLName xml.Name `xml:"ns:addImportedDirectoryUriCatalogsResponse"` 
	StandardResponse
}

type UpdateImportedDirectoryUriCatalogs struct { 
	XMLName xml.Name `xml:"ns:updateImportedDirectoryUriCatalogs"` 
	UpdateImportedDirectoryUriCatalogsReq
}

type UpdateImportedDirectoryUriCatalogsResponse struct { 
	XMLName xml.Name `xml:"ns:updateImportedDirectoryUriCatalogsResponse"` 
	StandardResponse
}

type GetImportedDirectoryUriCatalogs struct { 
	XMLName xml.Name `xml:"ns:getImportedDirectoryUriCatalogs"` 
	GetImportedDirectoryUriCatalogsReq
}

type GetImportedDirectoryUriCatalogsResponse struct { 
	XMLName xml.Name `xml:"ns:getImportedDirectoryUriCatalogsResponse"` 
	GetImportedDirectoryUriCatalogsRes
}

type RemoveImportedDirectoryUriCatalogs struct { 
	XMLName xml.Name `xml:"ns:removeImportedDirectoryUriCatalogs"` 
	NameAndGUIDRequest
}

type RemoveImportedDirectoryUriCatalogsResponse struct { 
	XMLName xml.Name `xml:"ns:removeImportedDirectoryUriCatalogsResponse"` 
	StandardResponse
}

type ListImportedDirectoryUriCatalogs struct { 
	XMLName xml.Name `xml:"ns:listImportedDirectoryUriCatalogs"` 
	ListImportedDirectoryUriCatalogsReq
}

type ListImportedDirectoryUriCatalogsResponse struct { 
	XMLName xml.Name `xml:"ns:listImportedDirectoryUriCatalogsResponse"` 
	ListImportedDirectoryUriCatalogsRes
}

type ExecuteSQLQuery struct { 
	XMLName xml.Name `xml:"ns:executeSQLQuery"` 
	ExecuteSQLQueryReq
}

type ExecuteSQLQueryResponse struct { 
	XMLName xml.Name `xml:"ns:executeSQLQueryResponse"` 
	ExecuteSQLQueryRes
}

type ExecuteSQLUpdate struct { 
	XMLName xml.Name `xml:"ns:executeSQLUpdate"` 
	ExecuteSQLUpdateReq
}

type ExecuteSQLUpdateResponse struct { 
	XMLName xml.Name `xml:"ns:executeSQLUpdateResponse"` 
	ExecuteSQLUpdateRes
}

type DoAuthenticateUser struct { 
	XMLName xml.Name `xml:"ns:doAuthenticateUser"` 
	DoAuthenticateUserReq
}

type DoAuthenticateUserResponse struct { 
	XMLName xml.Name `xml:"ns:doAuthenticateUserResponse"` 
	DoAuthenticateUserRes
}

type DoDeviceLogin struct { 
	XMLName xml.Name `xml:"ns:doDeviceLogin"` 
	DoDeviceLoginReq
}

type DoDeviceLoginResponse struct { 
	XMLName xml.Name `xml:"ns:doDeviceLoginResponse"` 
	DoDeviceLoginRes
}

type DoDeviceLogout struct { 
	XMLName xml.Name `xml:"ns:doDeviceLogout"` 
	DoDeviceLogoutReq
}

type DoDeviceLogoutResponse struct { 
	XMLName xml.Name `xml:"ns:doDeviceLogoutResponse"` 
	DoDeviceLogoutRes
}

type DoDeviceReset struct { 
	XMLName xml.Name `xml:"ns:doDeviceReset"` 
	DoDeviceResetReq
}

type DoDeviceResetResponse struct { 
	XMLName xml.Name `xml:"ns:doDeviceResetResponse"` 
	DoDeviceResetRes
}

type GetOSVersion struct { 
	XMLName xml.Name `xml:"ns:getOSVersion"` 
	GetOSVersionReq
}

type GetOSVersionResponse struct { 
	XMLName xml.Name `xml:"ns:getOSVersionResponse"` 
	GetOSVersionRes
}

type GetNumDevices struct { 
	XMLName xml.Name `xml:"ns:getNumDevices"` 
	GetNumDevicesReq
}

type AddMobility struct { 
	XMLName xml.Name `xml:"ns:addMobility"` 
	AddMobilityReq
}

type AddMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:addMobilityResponse"` 
	StandardResponse
}

type UpdateMobility struct { 
	XMLName xml.Name `xml:"ns:updateMobility"` 
	UpdateMobilityReq
}

type UpdateMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:updateMobilityResponse"` 
	StandardResponse
}

type GetMobility struct { 
	XMLName xml.Name `xml:"ns:getMobility"` 
	GetMobilityReq
}

type GetMobilityResponse struct { 
	XMLName xml.Name `xml:"ns:getMobilityResponse"` 
	GetMobilityRes
}

type GetEnterprisePhoneConfig struct { 
	XMLName xml.Name `xml:"ns:getEnterprisePhoneConfig"` 
	GetEnterprisePhoneConfigReq
}

type GetEnterprisePhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getEnterprisePhoneConfigResponse"` 
	GetEnterprisePhoneConfigRes
}

type UpdateEnterprisePhoneConfig struct { 
	XMLName xml.Name `xml:"ns:updateEnterprisePhoneConfig"` 
	UpdateEnterprisePhoneConfigReq
}

type UpdateEnterprisePhoneConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateEnterprisePhoneConfigResponse"` 
	StandardResponse
}

type GetLicenseUnitReport struct { 
	XMLName xml.Name `xml:"ns:getLicenseUnitReport"` 
	GetLicenseUnitReportReq
}

type GetLicenseUnitReportResponse struct { 
	XMLName xml.Name `xml:"ns:getLicenseUnitReportResponse"` 
	GetLicenseUnitReportRes
}

type GetLdapSystem struct { 
	XMLName xml.Name `xml:"ns:getLdapSystem"` 
	GetLdapSystemReq
}

type GetLdapSystemResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapSystemResponse"` 
	GetLdapSystemRes
}

type UpdateLdapSystem struct { 
	XMLName xml.Name `xml:"ns:updateLdapSystem"` 
	UpdateLdapSystemReq
}

type UpdateLdapSystemResponse struct { 
	XMLName xml.Name `xml:"ns:updateLdapSystemResponse"` 
	StandardResponse
}

type GetLdapAuthentication struct { 
	XMLName xml.Name `xml:"ns:getLdapAuthentication"` 
	GetLdapAuthenticationReq
}

type GetLdapAuthenticationResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapAuthenticationResponse"` 
	GetLdapAuthenticationRes
}

type UpdateLdapAuthentication struct { 
	XMLName xml.Name `xml:"ns:updateLdapAuthentication"` 
	UpdateLdapAuthenticationReq
}

type UpdateLdapAuthenticationResponse struct { 
	XMLName xml.Name `xml:"ns:updateLdapAuthenticationResponse"` 
	StandardResponse
}

type AddApplicationToSoftkeyTemplate struct { 
	XMLName xml.Name `xml:"ns:addApplicationToSoftkeyTemplate"` 
	AddApplicationToSoftkeyTemplateReq
}

type AddApplicationToSoftkeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:addApplicationToSoftkeyTemplateResponse"` 
	StandardResponse
}

type RemoveApplicationToSoftkeyTemplate struct { 
	XMLName xml.Name `xml:"ns:removeApplicationToSoftkeyTemplate"` 
	RemoveApplicationToSoftkeyTemplateReq
}

type RemoveApplicationToSoftkeyTemplateResponse struct { 
	XMLName xml.Name `xml:"ns:removeApplicationToSoftkeyTemplateResponse"` 
	StandardResponse
}

type GetCCMVersion struct { 
	XMLName xml.Name `xml:"ns:getCCMVersion"` 
	GetCCMVersionReq
}

type GetCCMVersionResponse struct { 
	XMLName xml.Name `xml:"ns:getCCMVersionResponse"` 
	GetCCMVersionRes
}

type RemoveUnitsToGateway struct { 
	XMLName xml.Name `xml:"ns:removeUnitsToGateway"` 
	RemoveUnitsToGatewayReq
}

type RemoveUnitsToGatewayResponse struct { 
	XMLName xml.Name `xml:"ns:removeUnitsToGatewayResponse"` 
	StandardResponse
}

type RemoveGatewaySubunits struct { 
	XMLName xml.Name `xml:"ns:removeGatewaySubunits"` 
	RemoveGatewaySubunitsReq
}

type RemoveGatewaySubunitsResponse struct { 
	XMLName xml.Name `xml:"ns:removeGatewaySubunitsResponse"` 
	StandardResponse
}

type UpdateImeFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:updateImeFeatureConfig"` 
	UpdateImeFeatureConfigReq
}

type UpdateImeFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeFeatureConfigResponse"` 
	StandardResponse
}

type UpdateFallbackFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:updateFallbackFeatureConfig"` 
	UpdateFallbackFeatureConfigReq
}

type UpdateFallbackFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateFallbackFeatureConfigResponse"` 
	StandardResponse
}

type GetImeFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:getImeFeatureConfig"` 
	GetImeFeatureConfigReq
}

type GetFallbackFeatureConfig struct { 
	XMLName xml.Name `xml:"ns:getFallbackFeatureConfig"` 
	GetFallbackFeatureConfigReq
}

type GetFallbackFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getFallbackFeatureConfigResponse"` 
	GetFallbackFeatureConfigRes
}

type RemoveImeLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:removeImeLearnedRoutes"` 
	RemoveImeLearnedRoutesReq
}

type RemoveImeLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:removeImeLearnedRoutesResponse"` 
	StandardResponse
}

type UpdateImeLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:updateImeLearnedRoutes"` 
	UpdateImeLearnedRoutesReq
}

type UpdateImeLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:updateImeLearnedRoutesResponse"` 
	StandardResponse
}

type GetImeLearnedRoutes struct { 
	XMLName xml.Name `xml:"ns:getImeLearnedRoutes"` 
	GetImeLearnedRoutesReq
}

type GetImeLearnedRoutesResponse struct { 
	XMLName xml.Name `xml:"ns:getImeLearnedRoutesResponse"` 
	GetImeLearnedRoutesRes
}

type GetImeFeatureConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getImeFeatureConfigResponse"` 
	GetImeFeatureConfigRes
}

type GetAppServerInfo struct { 
	XMLName xml.Name `xml:"ns:getAppServerInfo"` 
	GetAppServerInfoReq
}

type GetAppServerInfoResponse struct { 
	XMLName xml.Name `xml:"ns:getAppServerInfoResponse"` 
	GetAppServerInfoRes
}

type RemoveAppServerInfo struct { 
	XMLName xml.Name `xml:"ns:removeAppServerInfo"` 
	RemoveAppServerInfoReq
}

type RemoveAppServerInfoResponse struct { 
	XMLName xml.Name `xml:"ns:removeAppServerInfoResponse"` 
	StandardResponse
}

type DoLdapSync struct { 
	XMLName xml.Name `xml:"ns:doLdapSync"` 
	DoLdapSyncReq
}

type DoLdapSyncResponse struct { 
	XMLName xml.Name `xml:"ns:doLdapSyncResponse"` 
	DoLdapSyncRes
}

type GetLdapSyncStatus struct { 
	XMLName xml.Name `xml:"ns:getLdapSyncStatus"` 
	GetLdapSyncStatusReq
}

type GetLdapSyncStatusResponse struct { 
	XMLName xml.Name `xml:"ns:getLdapSyncStatusResponse"` 
	GetLdapSyncStatusRes
}

type UpdateSoftKeySet struct { 
	XMLName xml.Name `xml:"ns:updateSoftKeySet"` 
	UpdateSoftKeySetReq
}

type UpdateSoftKeySetResponse struct { 
	XMLName xml.Name `xml:"ns:updateSoftKeySetResponse"` 
	StandardResponse
}

type GetSoftKeySet struct { 
	XMLName xml.Name `xml:"ns:getSoftKeySet"` 
	GetSoftKeySetReq
}

type GetSoftKeySetResponse struct { 
	XMLName xml.Name `xml:"ns:getSoftKeySetResponse"` 
	GetSoftKeySetRes
}

type DoUpdateRemoteCluster struct { 
	XMLName xml.Name `xml:"ns:doUpdateRemoteCluster"` 
	DoUpdateRemoteClusterReq
}

type DoUpdateRemoteClusterResponse struct { 
	XMLName xml.Name `xml:"ns:doUpdateRemoteClusterResponse"` 
	DoUpdateRemoteClusterRes
}

type UpdateSyslogConfiguration struct { 
	XMLName xml.Name `xml:"ns:updateSyslogConfiguration"` 
	UpdateSyslogConfigurationReq
}

type UpdateSyslogConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:updateSyslogConfigurationResponse"` 
	UpdateSyslogConfigurationRes
}

type GetSyslogConfiguration struct { 
	XMLName xml.Name `xml:"ns:getSyslogConfiguration"` 
	GetSyslogConfigurationReq
}

type GetSyslogConfigurationResponse struct { 
	XMLName xml.Name `xml:"ns:getSyslogConfigurationResponse"` 
	GetSyslogConfigurationRes
}

type ListLdapSyncCustomField struct { 
	XMLName xml.Name `xml:"ns:listLdapSyncCustomField"` 
	ListLdapSyncCustomFieldReq
}

type ListLdapSyncCustomFieldResponse struct { 
	XMLName xml.Name `xml:"ns:listLdapSyncCustomFieldResponse"` 
	ListLdapSyncCustomFieldRes
}

type GetPhoneTypeDisplayInstance struct { 
	XMLName xml.Name `xml:"ns:getPhoneTypeDisplayInstance"` 
	GetPhoneTypeDisplayInstanceReq
}

type GetPhoneTypeDisplayInstanceResponse struct { 
	XMLName xml.Name `xml:"ns:getPhoneTypeDisplayInstanceResponse"` 
	GetPhoneTypeDisplayInstanceRes
}

type UpdateInterClusterDirectoryUri struct { 
	XMLName xml.Name `xml:"ns:updateInterClusterDirectoryUri"` 
	UpdateInterClusterDirectoryUriReq
}

type UpdateInterClusterDirectoryUriResponse struct { 
	XMLName xml.Name `xml:"ns:updateInterClusterDirectoryUriResponse"` 
	StandardResponse
}

type UpdateIlsConfig struct { 
	XMLName xml.Name `xml:"ns:updateIlsConfig"` 
	UpdateIlsConfigReq
}

type UpdateIlsConfigResponse struct { 
	XMLName xml.Name `xml:"ns:updateIlsConfigResponse"` 
	StandardResponse
}

type GetIlsConfig struct { 
	XMLName xml.Name `xml:"ns:getIlsConfig"` 
	GetIlsConfigReq
}

type GetIlsConfigResponse struct { 
	XMLName xml.Name `xml:"ns:getIlsConfigResponse"` 
	GetIlsConfigRes
}

type DoNotificationRegister struct { 
	XMLName xml.Name `xml:"ns:doNotificationRegister"` 
	DoNotificationRegisterReq
}

type DoNotificationRegisterResponse struct { 
	XMLName xml.Name `xml:"ns:doNotificationRegisterResponse"` 
	DoNotificationRegisterRes
}

type DoNotificationObject struct { 
	XMLName xml.Name `xml:"ns:doNotificationObject"` 
	DoNotificationObjectReq
}

type DoNotificationObjectResponse struct { 
	XMLName xml.Name `xml:"ns:doNotificationObjectResponse"` 
	DoNotificationObjectRes
}

type GetNotificationChanges struct { 
	XMLName xml.Name `xml:"ns:getNotificationChanges"` 
	GetNotificationChangesReq
}

type GetNotificationChangesResponse struct { 
	XMLName xml.Name `xml:"ns:getNotificationChangesResponse"` 
	GetNotificationChangesRes
}

type DoNotificationAck struct { 
	XMLName xml.Name `xml:"ns:doNotificationAck"` 
	DoNotificationAckReq
}

type DoNotificationAckResponse struct { 
	XMLName xml.Name `xml:"ns:doNotificationAckResponse"` 
	DoNotificationAckRes
}

type DoNotificationUnregister struct { 
	XMLName xml.Name `xml:"ns:doNotificationUnregister"` 
	DoNotificationUnregisterReq
}

type DoNotificationUnregisterResponse struct { 
	XMLName xml.Name `xml:"ns:doNotificationUnregisterResponse"` 
	DoNotificationUnregisterRes
}

type GetNotificationStatus struct { 
	XMLName xml.Name `xml:"ns:getNotificationStatus"` 
	GetNotificationStatusReq
}

type GetNotificationStatusResponse struct { 
	XMLName xml.Name `xml:"ns:getNotificationStatusResponse"` 
	GetNotificationStatusRes
}

type AddSNMPCommunityString struct { 
	XMLName xml.Name `xml:"ns:addSNMPCommunityString"` 
	AddSNMPCommunityStringReq
}

type AddSNMPCommunityStringResponse struct { 
	XMLName xml.Name `xml:"ns:addSNMPCommunityStringResponse"` 
	AddSNMPCommunityStringRes
}

type RemoveSNMPCommunityString struct { 
	XMLName xml.Name `xml:"ns:removeSNMPCommunityString"` 
	RemoveSNMPCommunityStringReq
}

type RemoveSNMPCommunityStringResponse struct { 
	XMLName xml.Name `xml:"ns:removeSNMPCommunityStringResponse"` 
	RemoveSNMPCommunityStringRes
}

type GetSNMPCommunityString struct { 
	XMLName xml.Name `xml:"ns:getSNMPCommunityString"` 
	GetSNMPCommunityStringReq
}

type GetSNMPCommunityStringResponse struct { 
	XMLName xml.Name `xml:"ns:getSNMPCommunityStringResponse"` 
	GetSNMPCommunityStringRes
}

type UpdateSNMPCommunityString struct { 
	XMLName xml.Name `xml:"ns:updateSNMPCommunityString"` 
	UpdateSNMPCommunityStringReq
}

type UpdateSNMPCommunityStringResponse struct { 
	XMLName xml.Name `xml:"ns:updateSNMPCommunityStringResponse"` 
	UpdateSNMPCommunityStringRes
}

type AddSNMPUser struct { 
	XMLName xml.Name `xml:"ns:addSNMPUser"` 
	AddSNMPUserReq
}

type AddSNMPUserResponse struct { 
	XMLName xml.Name `xml:"ns:addSNMPUserResponse"` 
	AddSNMPUserRes
}

type GetSNMPUser struct { 
	XMLName xml.Name `xml:"ns:getSNMPUser"` 
	GetSNMPUserReq
}

type GetSNMPUserResponse struct { 
	XMLName xml.Name `xml:"ns:getSNMPUserResponse"` 
	GetSNMPUserRes
}

type RemoveSNMPUser struct { 
	XMLName xml.Name `xml:"ns:removeSNMPUser"` 
	RemoveSNMPUserReq
}

type RemoveSNMPUserResponse struct { 
	XMLName xml.Name `xml:"ns:removeSNMPUserResponse"` 
	RemoveSNMPUserRes
}

type UpdateSNMPUser struct { 
	XMLName xml.Name `xml:"ns:updateSNMPUser"` 
	UpdateSNMPUserReq
}

type UpdateSNMPUserResponse struct { 
	XMLName xml.Name `xml:"ns:updateSNMPUserResponse"` 
	UpdateSNMPUserRes
}

type GetSNMPMIB2List struct { 
	XMLName xml.Name `xml:"ns:getSNMPMIB2List"` 
	GetSNMPMIB2ListReq
}

type GetSNMPMIB2ListResponse struct { 
	XMLName xml.Name `xml:"ns:getSNMPMIB2ListResponse"` 
	GetSNMPMIB2ListRes
}

type UpdateSNMPMIB2List struct { 
	XMLName xml.Name `xml:"ns:updateSNMPMIB2List"` 
	UpdateSNMPMIB2ListReq
}

type UpdateSNMPMIB2ListResponse struct { 
	XMLName xml.Name `xml:"ns:updateSNMPMIB2ListResponse"` 
	UpdateSNMPMIB2ListRes
}

type UpdateBillingServer struct { 
	XMLName xml.Name `xml:"ns:updateBillingServer"` 
	UpdateBillingServerReq
}

type UpdateBillingServerResponse struct { 
	XMLName xml.Name `xml:"ns:updateBillingServerResponse"` 
	StandardResponse
}

type GetBillingServer struct { 
	XMLName xml.Name `xml:"ns:getBillingServer"` 
	GetBillingServerReq
}

type GetBillingServerResponse struct { 
	XMLName xml.Name `xml:"ns:getBillingServerResponse"` 
	GetBillingServerRes
}

type RemoveBillingServer struct { 
	XMLName xml.Name `xml:"ns:removeBillingServer"` 
	RemoveBillingServerReq
}

type RemoveBillingServerResponse struct { 
	XMLName xml.Name `xml:"ns:removeBillingServerResponse"` 
	StandardResponse
}
